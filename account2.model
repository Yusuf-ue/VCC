*** MODEL
%lbl%+38915 -> true
%lbl%+1480 -> true
$position_marker -> true
%lbl%@39054 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
^$#_onexit_t#4 -> *9
unique-value!79 -> *10
$untyped_owner_owner -> *11
$max.u4 -> 4294967295
#tok$2^41.3 -> *13
$fk_ref_cnt -> *14
^^field -> *15
$max.u2 -> 65535
loop_entered -> *17
unique-value!59 -> *18
Account.amount -> *19
$ctype_flat -> *20
$fk_as_array_first -> *21
unique-value!56 -> *22
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *23
unique-value!67 -> *24
#tok$1^26.5 -> *25
^$#state_t -> *26
^$#struct -> *27
^$#seq_version -> *28
^^u4 -> *29
^^nat -> *30
^$#volatile_version_t -> *31
$ctype_blob -> *32
$max.i2 -> 32767
unique-value!72 -> *34
unique-value!75 -> *35
P#amount -> 799
unique-value!90 -> *37
^^u2 -> *38
$min.i8 -> -9223372036854775808
unique-value!85 -> *40
^^f4 -> *41
unique-value!92 -> *42
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *43
^^claim -> *44
AccountGroup.total -> *45
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *47
$me -> *48
^^bool -> *49
P#a -> *50
$max.i1 -> 127
cev_parameter -> *52
unique-value!55 -> *53
$untyped_owner -> *54
unique-value!63 -> *55
unique-value!74 -> *56
^$#ptrset -> *57
^$##club -> *58
^^mathint -> *59
unique-value!66 -> *60
unique-value!60 -> *61
prestate#1@0 -> *62
prestate#3@0 -> *62
$s -> *62
$arch_ptr_size -> 8
$struct_zero -> *64
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *65
unique-value!80 -> *66
unique-value!88 -> *67
unique-value!84 -> *68
^$#_invalid_parameter_handler#7 -> *69
$min.i1 -> -128
unique-value!61 -> *71
conditional_moment -> *72
unique-value!65 -> *73
^^f8 -> *74
unique-value!87 -> *75
unique-value!89 -> *76
#tok$1^23.16 -> *77
$fk_base -> *78
#tok$1^28.5 -> *79
^^u8 -> *80
$arch_ptr_type -> *80
$set_empty -> *81
owns#2@0 -> *81
lambda@13 -> *81
$ctype_ptr -> *82
unique-value!82 -> *83
$fk_vol_version -> *84
$max.u1 -> 255
^^i1 -> *86
^^object -> *87
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *89
$ctype_spec_ptr -> *90
unique-value!58 -> *91
^^void -> *92
unique-value!62 -> *93
unique-value!70 -> *94
unique-value!93 -> *95
$fk_active_option -> *96
$ctype_array -> *97
unique-value!77 -> *98
cev_local -> *99
#tok$2^47.3 -> *100
@MV_state_const -> 74
$ctype_map -> *102
loop_register -> *103
$null -> *104
^^i4 -> *105
$fk_allocation_root -> *106
unique-value!68 -> *107
unique-value!57 -> *108
loop_exited -> *109
$min.i2 -> -32768
cev_implicit -> *111
#tok$1^6.1 -> *112
^$#account2.c..36689#5 -> *113
^^u1 -> *114
^AccountGroup -> *115
$primitive_emb_type -> *116
$no_claim -> *117
unique-value!71 -> *118
lambda@20 -> *119
took_else_branch -> *120
^^i8 -> *121
took_then_branch -> *122
#tok$2^42.3 -> *123
unique-value!76 -> *124
unique-value!83 -> *125
#wrTime$1^13.1 -> 695
AccountGroup.creditCard -> *127
^$##thread_id -> *128
$min.i4 -> -2147483648
unique-value!64 -> *130
unique-value!69 -> *131
#tok$2^46.3 -> *132
$untyped_owner_type -> *133
^^i2 -> *134
^$#thread_id_t -> *135
^$#account2.c..36585#3 -> *136
unique-value!91 -> *137
unique-value!73 -> *138
#tok$1^22.5 -> *139
AccountGroup.giro -> *140
^$#vol_version -> *141
#tok$1^13.1 -> *142
unique-value!86 -> *143
#tok$2^25.1 -> *144
^$#_purecall_handler#6 -> *145
unique-value!78 -> *146
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *147
$cev_pc -> **$cev_pc
P#b -> **P#b
owns#14 -> **owns#14
staticWrapState#12 -> **staticWrapState#12
prestate#11 -> **prestate#11
owns#10 -> **owns#10
staticWrapState#8 -> **staticWrapState#8
prestate#7 -> **prestate#7
prestate#6 -> **prestate#6
prestate#4 -> **prestate#4
owns#5 -> **owns#5
prestate#3 -> **prestate#3
prestate#1 -> **prestate#1
owns#2 -> **owns#2
#stackframe -> **#stackframe
$owner -> {
  *62 *148 -> *54
  else -> *54
}
$ptr_to -> {
  *89 -> *5
  else -> *5
}
$is_volatile_field -> {
  *149 -> true
  *150 -> true
  else -> true
}
$is_phys_field -> {
  *19 -> true
  *140 -> true
  *127 -> true
  *45 -> true
  *151 -> true
  else -> true
}
$ptr -> {
  *152 0 -> *104
  *154 18446744073709552090 -> *117
  *156 361 -> *48
  *158 296 -> *54
  *156 251 -> *11
  *161 18446744073709553861 -> *50
  *151 456 -> *148
  else -> *104
}
$addr0 -> {
  *104 -> 0
  *117 -> 0
  *48 -> 361
  *54 -> 296
  *11 -> 251
  *148 -> 456
  *50 -> 456
  else -> 0
}
$is_proper -> {
  *48 -> true
  *54 -> true
  *11 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *148 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  else -> true
}
$current_timestamp -> {
  *62 -> 695
  else -> 695
}
$as_primitive_field -> {
  *19 -> *19
  *140 -> *140
  *127 -> *127
  *45 -> *45
  *152 -> *152
  *172 -> *172
  *173 -> *173
  *149 -> *149
  *150 -> *150
  *174 -> *174
  *175 -> *175
  else -> *19
}
$f_timestamp -> {
  *62 -> *176
  else -> *176
}
Select_[$ptr]$int -> {
  *176 *148 -> -186
  else -> -186
}
$unchecked -> {
  *29 4294967296 -> 0
  *80 18446744073709551616 -> 0
  *29 -1 -> 4294967295
  *80 -1 -> 18446744073709551615
  *105 -10000 -> -10000
  *80 0 -> 0
  *80 -2631 -> 0
  *80 361 -> 361
  *80 296 -> 296
  *80 251 -> 251
  *80 -1966 -> 456
  *80 456 -> 456
  else -> 0
}
$is_primitive -> {
  *86 -> true
  *134 -> true
  *105 -> true
  *121 -> true
  *114 -> true
  *38 -> true
  *29 -> true
  *80 -> true
  *41 -> true
  *74 -> true
  *49 -> true
  *92 -> true
  *87 -> true
  *15 -> true
  *3 -> true
  *44 -> false
  *31 -> false
  *59 -> true
  *30 -> true
  *57 -> true
  *26 -> true
  *27 -> true
  *135 -> false
  *133 -> false
  *128 -> true
  *58 -> true
  *89 -> false
  *115 -> false
  *5 -> true
  *43 -> true
  *147 -> true
  *136 -> true
  *9 -> true
  *113 -> true
  *145 -> true
  *69 -> true
  *116 -> false
  else -> true
}
$as_field_with_type -> {
  *19 *105 -> *19
  *140 *5 -> *140
  *127 *5 -> *127
  *45 *105 -> *45
  *152 *92 -> *152
  *156 *135 -> *156
  *158 *133 -> *158
  *172 *57 -> *172
  *173 *57 -> *173
  *149 *57 -> *149
  *150 *57 -> *150
  *174 *57 -> *174
  *175 *57 -> *175
  *151 *89 -> *151
  else -> *19
}
$invok_state -> {
  *62 -> true
  else -> true
}
$is_sequential_field -> {
  *172 -> true
  *173 -> true
  *174 -> true
  *19 -> true
  *175 -> true
  *140 -> true
  *127 -> true
  *45 -> true
  *152 -> true
  else -> true
}
$is_math_type -> {
  *87 -> true
  *15 -> true
  *3 -> true
  *59 -> true
  *30 -> true
  *57 -> true
  *26 -> true
  *27 -> true
  *128 -> true
  *58 -> true
  else -> true
}
$file_name_is -> {
  2 *23 -> true
  1 *65 -> true
  else -> true
}
$unchk_add -> {
  *80 0 0 -> 0
  *80 18446744073709552090 -18446744073709554721 -> 0
  *80 361 0 -> 361
  *80 296 0 -> 296
  *80 251 0 -> 251
  *80 18446744073709553861 -18446744073709555827 -> 456
  *80 456 0 -> 456
  else -> 0
}
$full_stop -> {
  *62 -> true
  else -> true
}
$writes_at -> {
  695 -> *119
  else -> *119
}
$set_cardinality -> {
  *81 -> 0
  else -> 0
}
$is_claimable -> {
  *44 -> true
  *31 -> false
  *135 -> false
  *133 -> false
  *89 -> false
  *115 -> false
  *86 -> false
  *134 -> false
  *105 -> false
  *121 -> false
  *114 -> false
  *38 -> false
  *29 -> false
  *80 -> false
  *41 -> false
  *74 -> false
  *49 -> false
  *92 -> false
  *87 -> false
  *15 -> false
  *3 -> false
  *59 -> false
  *30 -> false
  *57 -> false
  *26 -> false
  *27 -> false
  *128 -> false
  *58 -> false
  *43 -> false
  *147 -> false
  *136 -> false
  *9 -> false
  *113 -> false
  *145 -> false
  *69 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *19 -> true
  *140 -> true
  *127 -> true
  *45 -> true
  *156 -> true
  *158 -> true
  *152 -> true
  *172 -> true
  *173 -> true
  *149 -> true
  *150 -> true
  *174 -> true
  *175 -> true
  *151 -> true
  else -> true
}
$wrapped -> {
  *62 *148 *89 -> false
  else -> false
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
$field_kind -> {
  *19 -> *78
  *140 -> *78
  *127 -> *78
  *45 -> *78
  *152 -> *106
  *156 -> *106
  *158 -> *106
  *172 -> *6
  *173 -> *6
  *149 -> *6
  *150 -> *6
  *174 -> *6
  *175 -> *6
  *151 -> *106
  else -> *6
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *156 -> *156
  *158 -> *158
  *151 -> *151
  else -> *156
}
$phys_ptr_cast -> {
  *50 *89 -> *148
  *148 *89 -> *148
  else -> *148
}
$vs_state -> {
  *64 -> *297
  else -> *297
}
distinct-aux-f!!54 -> {
  *116 -> *53
  *86 -> *22
  *134 -> *108
  *105 -> *91
  *121 -> *18
  *114 -> *61
  *38 -> *71
  *29 -> *93
  *80 -> *55
  *92 -> *130
  *49 -> *73
  *41 -> *60
  *74 -> *24
  *87 -> *107
  *15 -> *131
  *3 -> *94
  *44 -> *118
  *59 -> *34
  *30 -> *138
  *57 -> *56
  *26 -> *35
  *31 -> *124
  *27 -> *98
  *28 -> *146
  *141 -> *10
  *135 -> *66
  *133 -> *2
  *128 -> *83
  *58 -> *125
  *89 -> *68
  *115 -> *40
  *43 -> *143
  *147 -> *75
  *136 -> *67
  *9 -> *76
  *113 -> *37
  *145 -> *137
  *69 -> *42
  *5 -> *95
  else -> *53
}
$unchk_sub -> {
  *105 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *48 -> *156
  *54 -> *158
  *11 -> *156
  *117 -> *154
  *104 -> *152
  *148 -> *151
  *50 -> *161
  else -> *156
}
$f_owns -> {
  *44 -> *172
  *31 -> *173
  *135 -> *149
  *133 -> *150
  *89 -> *174
  *115 -> *175
  else -> *172
}
$field_type -> {
  *154 -> *44
  *19 -> *105
  *140 -> *5
  *127 -> *5
  *45 -> *105
  *156 -> *135
  *158 -> *133
  *152 -> *92
  *172 -> *57
  *173 -> *57
  *149 -> *57
  *150 -> *57
  *174 -> *57
  *175 -> *57
  *151 -> *89
  else -> *57
}
$has_field_at0 -> {
  *89 *19 -> true
  *115 *140 -> true
  else -> true
}
$function_entry -> {
  *62 -> true
  else -> true
}
$good_state_ext -> {
  *142 *62 -> true
  else -> true
}
$f_owner -> {
  *62 -> *299
  else -> *299
}
$type_project_0 -> {
  *5 -> *89
  else -> *89
}
Select_[$ptr]$ptr -> {
  *299 *148 -> *54
  else -> *54
}
$type_branch -> {
  *86 -> *20
  *134 -> *20
  *105 -> *20
  *121 -> *20
  *114 -> *20
  *38 -> *20
  *29 -> *20
  *80 -> *20
  *41 -> *20
  *74 -> *20
  *49 -> *20
  *92 -> *20
  *87 -> *20
  *15 -> *20
  *3 -> *20
  *44 -> *20
  *31 -> *20
  *59 -> *20
  *30 -> *20
  *57 -> *20
  *26 -> *20
  *27 -> *20
  *135 -> *20
  *133 -> *20
  *128 -> *20
  *58 -> *20
  *89 -> *20
  *115 -> *20
  *43 -> *20
  *147 -> *20
  *136 -> *20
  *9 -> *20
  *113 -> *20
  *145 -> *20
  *69 -> *20
  *5 -> *82
  else -> *20
}
$in_range_t -> {
  *29 4294967296 -> false
  *29 0 -> true
  *80 18446744073709551616 -> false
  *80 0 -> true
  *29 -1 -> false
  *29 4294967295 -> true
  *80 -1 -> false
  *80 18446744073709551615 -> true
  *105 -10000 -> true
  *80 -2631 -> false
  *80 361 -> true
  *80 296 -> true
  *80 251 -> true
  *80 -1966 -> false
  *80 456 -> true
  else -> true
}
$spec_ptr_cast -> {
  *48 *135 -> *48
  *54 *133 -> *54
  *11 *135 -> *11
  else -> *48
}
$is_union_type -> {
  *89 -> false
  *115 -> false
  else -> false
}
$field_parent_type -> {
  *19 -> *89
  *140 -> *115
  *127 -> *115
  *45 -> *115
  *156 -> *135
  *158 -> *133
  *152 -> *116
  *172 -> *44
  *173 -> *31
  *149 -> *135
  *150 -> *133
  *174 -> *89
  *175 -> *115
  *151 -> *89
  else -> *115
}
$sizeof -> {
  *86 -> 1
  *134 -> 2
  *105 -> 4
  *121 -> 8
  *114 -> 1
  *38 -> 2
  *29 -> 4
  *80 -> 8
  *41 -> 4
  *74 -> 8
  *49 -> 1
  *92 -> 1
  *87 -> 1
  *15 -> 1
  *3 -> 1
  *44 -> 1
  *31 -> 1
  *59 -> 1
  *30 -> 1
  *57 -> 1
  *26 -> 1
  *27 -> 1
  *135 -> 1
  *133 -> 1
  *128 -> 1
  *58 -> 1
  *89 -> 4
  *115 -> 24
  *43 -> 8
  *147 -> 8
  *136 -> 8
  *9 -> 8
  *113 -> 8
  *145 -> 8
  *69 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *172 -> true
  *173 -> true
  *149 -> true
  *150 -> true
  *174 -> true
  *175 -> true
  else -> true
}
$in_range_spec_ptr -> {
  *48 -> true
  *54 -> true
  *11 -> true
  else -> true
}
$is_fnptr_type -> {
  *43 -> true
  *147 -> true
  *136 -> true
  *9 -> true
  *113 -> true
  *145 -> true
  *69 -> true
  else -> true
}
$f_root -> {
  *92 -> *152
  *135 -> *156
  *133 -> *158
  *89 -> *151
  else -> *152
}
$is_span_sequential -> {
  *89 -> true
  *115 -> true
  else -> true
}
$good_state -> {
  *297 -> true
  *62 -> true
  else -> true
}
$field_offset -> {
  *19 -> 0
  *140 -> 0
  *127 -> 8
  *45 -> 16
  *154 -> -18446744073709554721
  *156 -> 0
  *158 -> 0
  *152 -> 0
  *161 -> -18446744073709555827
  *151 -> 0
  else -> 0
}
$base -> {
  *104 -> 0
  *48 -> 361
  *54 -> 296
  *11 -> 251
  *117 -> 18446744073709552090
  *148 -> 456
  *50 -> 18446744073709553861
  else -> 0
}
$as_in_range_t -> {
  *86 -> *86
  *134 -> *134
  *105 -> *105
  *121 -> *121
  *114 -> *114
  *38 -> *38
  *29 -> *29
  *80 -> *80
  *30 -> *30
  else -> *86
}
$field_arr_root -> {
  *19 -> *19
  *140 -> *140
  *127 -> *127
  *45 -> *45
  *152 -> *152
  *156 -> *156
  *158 -> *158
  *172 -> *172
  *173 -> *173
  *149 -> *149
  *150 -> *150
  *174 -> *174
  *175 -> *175
  *151 -> *151
  else -> *19
}
*** STATE <initial>
  $s -> *62
  $cev_pc -> **$cev_pc
  P#a -> *50
  P#b -> **P#b
  P#amount -> 799
  owns#14 -> **owns#14
  staticWrapState#12 -> **staticWrapState#12
  prestate#11 -> **prestate#11
  owns#10 -> **owns#10
  staticWrapState#8 -> **staticWrapState#8
  prestate#7 -> **prestate#7
  prestate#6 -> **prestate#6
  prestate#4 -> **prestate#4
  owns#5 -> **owns#5
  prestate#3 -> **prestate#3
  prestate#1 -> **prestate#1
  owns#2 -> **owns#2
  #wrTime$1^13.1 -> 695
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(13,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#2 -> *81
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#1 -> *62
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
  prestate#3 -> *62
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%+38915 -> true
%lbl%+1480 -> true
%lbl%@39054 -> true
$position_marker -> true
%lbl%@39073 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
^$#_onexit_t#4 -> *9
unique-value!79 -> *10
$untyped_owner_owner -> *11
$max.u4 -> 4294967295
#tok$2^41.3 -> *13
$fk_ref_cnt -> *14
^^field -> *15
$max.u2 -> 65535
loop_entered -> *17
unique-value!59 -> *18
Account.amount -> *19
$ctype_flat -> *20
$fk_as_array_first -> *21
unique-value!56 -> *22
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *23
unique-value!67 -> *24
#tok$1^26.5 -> *25
^$#state_t -> *26
^$#struct -> *27
^$#seq_version -> *28
^^u4 -> *29
^^nat -> *30
^$#volatile_version_t -> *31
$ctype_blob -> *32
$max.i2 -> 32767
unique-value!72 -> *34
unique-value!75 -> *35
P#amount -> 799
unique-value!90 -> *37
^^u2 -> *38
$min.i8 -> -9223372036854775808
unique-value!85 -> *40
^^f4 -> *41
unique-value!92 -> *42
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *43
^^claim -> *44
AccountGroup.total -> *45
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *47
$me -> *48
^^bool -> *49
P#a -> *50
$max.i1 -> 127
cev_parameter -> *52
unique-value!55 -> *53
$untyped_owner -> *54
unique-value!63 -> *55
unique-value!74 -> *56
^$#ptrset -> *57
^$##club -> *58
^^mathint -> *59
unique-value!66 -> *60
unique-value!60 -> *61
prestate#1@0 -> *62
prestate#3@0 -> *62
$s -> *62
$arch_ptr_size -> 8
$struct_zero -> *64
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *65
unique-value!80 -> *66
unique-value!88 -> *67
unique-value!84 -> *68
^$#_invalid_parameter_handler#7 -> *69
$min.i1 -> -128
unique-value!61 -> *71
conditional_moment -> *72
unique-value!65 -> *73
^^f8 -> *74
unique-value!87 -> *75
unique-value!89 -> *76
#tok$1^23.16 -> *77
$fk_base -> *78
#tok$1^28.5 -> *79
^^u8 -> *80
$arch_ptr_type -> *80
$set_empty -> *81
owns#2@0 -> *81
lambda@13 -> *81
$ctype_ptr -> *82
unique-value!82 -> *83
$fk_vol_version -> *84
$max.u1 -> 255
^^i1 -> *86
^^object -> *87
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *89
$ctype_spec_ptr -> *90
unique-value!58 -> *91
^^void -> *92
unique-value!62 -> *93
unique-value!70 -> *94
unique-value!93 -> *95
$fk_active_option -> *96
$ctype_array -> *97
unique-value!77 -> *98
cev_local -> *99
#tok$2^47.3 -> *100
@MV_state_const -> 74
$ctype_map -> *102
loop_register -> *103
$null -> *104
^^i4 -> *105
$fk_allocation_root -> *106
unique-value!68 -> *107
unique-value!57 -> *108
loop_exited -> *109
$min.i2 -> -32768
cev_implicit -> *111
#tok$1^6.1 -> *112
^$#account2.c..36689#5 -> *113
^^u1 -> *114
^AccountGroup -> *115
$primitive_emb_type -> *116
$no_claim -> *117
unique-value!71 -> *118
lambda@20 -> *119
took_else_branch -> *120
^^i8 -> *121
took_then_branch -> *122
#tok$2^42.3 -> *123
unique-value!76 -> *124
unique-value!83 -> *125
#wrTime$1^13.1 -> 695
AccountGroup.creditCard -> *127
^$##thread_id -> *128
$min.i4 -> -2147483648
unique-value!64 -> *130
unique-value!69 -> *131
#tok$2^46.3 -> *132
$untyped_owner_type -> *133
^^i2 -> *134
^$#thread_id_t -> *135
^$#account2.c..36585#3 -> *136
unique-value!91 -> *137
unique-value!73 -> *138
#tok$1^22.5 -> *139
AccountGroup.giro -> *140
^$#vol_version -> *141
#tok$1^13.1 -> *142
unique-value!86 -> *143
#tok$2^25.1 -> *144
^$#_purecall_handler#6 -> *145
unique-value!78 -> *146
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *147
$cev_pc -> **$cev_pc
P#b -> **P#b
owns#14 -> **owns#14
staticWrapState#12 -> **staticWrapState#12
prestate#11 -> **prestate#11
owns#10 -> **owns#10
staticWrapState#8 -> **staticWrapState#8
prestate#7 -> **prestate#7
prestate#6 -> **prestate#6
prestate#4 -> **prestate#4
owns#5 -> **owns#5
prestate#3 -> **prestate#3
prestate#1 -> **prestate#1
owns#2 -> **owns#2
#stackframe -> **#stackframe
$owner -> {
  *62 *148 -> *48
  else -> *48
}
$ptr_to -> {
  *89 -> *5
  else -> *5
}
$is_volatile_field -> {
  *149 -> true
  *150 -> true
  else -> true
}
$is_phys_field -> {
  *19 -> true
  *140 -> true
  *127 -> true
  *45 -> true
  *151 -> true
  else -> true
}
$ptr -> {
  *152 0 -> *104
  *154 18446744073709559865 -> *117
  *156 361 -> *48
  *158 296 -> *54
  *156 2752 -> *11
  *161 18446744073709558566 -> *50
  *151 8114 -> *148
  else -> *104
}
$closed -> {
  *62 *148 -> true
  else -> true
}
$addr0 -> {
  *104 -> 0
  *117 -> 0
  *48 -> 361
  *54 -> 296
  *11 -> 2752
  *50 -> 8114
  *148 -> 8114
  else -> 0
}
$is_proper -> {
  *48 -> true
  *54 -> true
  *11 -> true
  *148 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *148 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  else -> true
}
$current_timestamp -> {
  *62 -> 695
  else -> 695
}
$as_primitive_field -> {
  *19 -> *19
  *140 -> *140
  *127 -> *127
  *45 -> *45
  *152 -> *152
  *173 -> *173
  *174 -> *174
  *149 -> *149
  *150 -> *150
  *175 -> *175
  *176 -> *176
  else -> *19
}
$f_timestamp -> {
  *62 -> *177
  else -> *177
}
Select_[$ptr]$int -> {
  *177 *148 -> 258
  else -> 258
}
$unchecked -> {
  *29 4294967296 -> 0
  *80 18446744073709551616 -> 0
  *29 -1 -> 4294967295
  *80 -1 -> 18446744073709551615
  *105 -10000 -> -10000
  *80 0 -> 0
  *80 -3103 -> 0
  *80 361 -> 361
  *80 296 -> 296
  *80 2752 -> 2752
  *80 -53 -> 8114
  *80 8114 -> 8114
  else -> 0
}
$is_primitive -> {
  *86 -> true
  *134 -> true
  *105 -> true
  *121 -> true
  *114 -> true
  *38 -> true
  *29 -> true
  *80 -> true
  *41 -> true
  *74 -> true
  *49 -> true
  *92 -> true
  *87 -> true
  *15 -> true
  *3 -> true
  *44 -> false
  *31 -> false
  *59 -> true
  *30 -> true
  *57 -> true
  *26 -> true
  *27 -> true
  *135 -> false
  *133 -> false
  *128 -> true
  *58 -> true
  *89 -> false
  *115 -> false
  *5 -> true
  *43 -> true
  *147 -> true
  *136 -> true
  *9 -> true
  *113 -> true
  *145 -> true
  *69 -> true
  *116 -> false
  else -> true
}
$as_field_with_type -> {
  *19 *105 -> *19
  *140 *5 -> *140
  *127 *5 -> *127
  *45 *105 -> *45
  *152 *92 -> *152
  *156 *135 -> *156
  *158 *133 -> *158
  *173 *57 -> *173
  *174 *57 -> *174
  *149 *57 -> *149
  *150 *57 -> *150
  *175 *57 -> *175
  *176 *57 -> *176
  *151 *89 -> *151
  else -> *19
}
$is -> {
  *148 *89 -> true
  else -> true
}
$invok_state -> {
  *62 -> true
  else -> true
}
$roots -> {
  *62 -> *185
  else -> *185
}
$is_sequential_field -> {
  *173 -> true
  *174 -> true
  *175 -> true
  *19 -> true
  *176 -> true
  *140 -> true
  *127 -> true
  *45 -> true
  *152 -> true
  *149 -> false
  else -> true
}
$is_math_type -> {
  *87 -> true
  *15 -> true
  *3 -> true
  *59 -> true
  *30 -> true
  *57 -> true
  *26 -> true
  *27 -> true
  *128 -> true
  *58 -> true
  else -> true
}
$file_name_is -> {
  2 *23 -> true
  1 *65 -> true
  else -> true
}
$unchk_add -> {
  *80 0 0 -> 0
  *80 18446744073709559865 -18446744073709562968 -> 0
  *80 361 0 -> 361
  *80 296 0 -> 296
  *80 2752 0 -> 2752
  *80 18446744073709558566 -18446744073709558619 -> 8114
  *80 8114 0 -> 8114
  else -> 0
}
$full_stop -> {
  *62 -> true
  else -> true
}
$writes_at -> {
  695 -> *119
  else -> *119
}
$set_cardinality -> {
  *81 -> 0
  else -> 0
}
$is_claimable -> {
  *44 -> true
  *31 -> false
  *135 -> false
  *133 -> false
  *89 -> false
  *115 -> false
  *86 -> false
  *134 -> false
  *105 -> false
  *121 -> false
  *114 -> false
  *38 -> false
  *29 -> false
  *80 -> false
  *41 -> false
  *74 -> false
  *49 -> false
  *92 -> false
  *87 -> false
  *15 -> false
  *3 -> false
  *59 -> false
  *30 -> false
  *57 -> false
  *26 -> false
  *27 -> false
  *128 -> false
  *58 -> false
  *43 -> false
  *147 -> false
  *136 -> false
  *9 -> false
  *113 -> false
  *145 -> false
  *69 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *19 -> true
  *140 -> true
  *127 -> true
  *45 -> true
  *156 -> true
  *158 -> true
  *152 -> true
  *173 -> true
  *174 -> true
  *149 -> true
  *150 -> true
  *175 -> true
  *176 -> true
  *151 -> true
  else -> true
}
$wrapped -> {
  *62 *148 *89 -> true
  else -> true
}
$top_writable -> {
  *62 695 *148 -> false
  else -> false
}
$f_closed -> {
  *62 -> *188
  else -> *188
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$ptr]$bool -> {
  *188 *148 -> true
  *119 *148 -> false
  else -> true
}
$field_kind -> {
  *19 -> *78
  *140 -> *78
  *127 -> *78
  *45 -> *78
  *152 -> *106
  *156 -> *106
  *158 -> *106
  *173 -> *6
  *174 -> *6
  *149 -> *6
  *150 -> *6
  *175 -> *6
  *176 -> *6
  *151 -> *106
  else -> *6
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *156 -> *156
  *158 -> *158
  *151 -> *151
  else -> *156
}
$in_writes_at -> {
  695 *148 -> false
  else -> false
}
$phys_ptr_cast -> {
  *50 *89 -> *148
  *148 *89 -> *148
  else -> *148
}
$vs_state -> {
  *64 -> *299
  else -> *299
}
distinct-aux-f!!54 -> {
  *116 -> *53
  *86 -> *22
  *134 -> *108
  *105 -> *91
  *121 -> *18
  *114 -> *61
  *38 -> *71
  *29 -> *93
  *80 -> *55
  *92 -> *130
  *49 -> *73
  *41 -> *60
  *74 -> *24
  *87 -> *107
  *15 -> *131
  *3 -> *94
  *44 -> *118
  *59 -> *34
  *30 -> *138
  *57 -> *56
  *26 -> *35
  *31 -> *124
  *27 -> *98
  *28 -> *146
  *141 -> *10
  *135 -> *66
  *133 -> *2
  *128 -> *83
  *58 -> *125
  *89 -> *68
  *115 -> *40
  *43 -> *143
  *147 -> *75
  *136 -> *67
  *9 -> *76
  *113 -> *37
  *145 -> *137
  *69 -> *42
  *5 -> *95
  else -> *53
}
$unchk_sub -> {
  *105 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *48 -> *156
  *54 -> *158
  *11 -> *156
  *117 -> *154
  *104 -> *152
  *50 -> *161
  *148 -> *151
  else -> *156
}
$f_owns -> {
  *44 -> *173
  *31 -> *174
  *135 -> *149
  *133 -> *150
  *89 -> *175
  *115 -> *176
  else -> *173
}
$field_type -> {
  *154 -> *44
  *19 -> *105
  *140 -> *5
  *127 -> *5
  *45 -> *105
  *156 -> *135
  *158 -> *133
  *152 -> *92
  *173 -> *57
  *174 -> *57
  *149 -> *57
  *150 -> *57
  *175 -> *57
  *176 -> *57
  *151 -> *89
  else -> *57
}
$has_field_at0 -> {
  *89 *19 -> true
  *115 *140 -> true
  else -> true
}
$function_entry -> {
  *62 -> true
  else -> true
}
$good_state_ext -> {
  *142 *62 -> true
  else -> true
}
$f_owner -> {
  *62 -> *301
  else -> *301
}
$type_project_0 -> {
  *5 -> *89
  else -> *89
}
Select_[$ptr]$ptr -> {
  *301 *148 -> *48
  *185 *148 -> *148
  else -> *48
}
$type_branch -> {
  *86 -> *20
  *134 -> *20
  *105 -> *20
  *121 -> *20
  *114 -> *20
  *38 -> *20
  *29 -> *20
  *80 -> *20
  *41 -> *20
  *74 -> *20
  *49 -> *20
  *92 -> *20
  *87 -> *20
  *15 -> *20
  *3 -> *20
  *44 -> *20
  *31 -> *20
  *59 -> *20
  *30 -> *20
  *57 -> *20
  *26 -> *20
  *27 -> *20
  *135 -> *20
  *133 -> *20
  *128 -> *20
  *58 -> *20
  *89 -> *20
  *115 -> *20
  *43 -> *20
  *147 -> *20
  *136 -> *20
  *9 -> *20
  *113 -> *20
  *145 -> *20
  *69 -> *20
  *5 -> *82
  else -> *20
}
$set_in_pos -> {
  *148 *188 -> true
  else -> true
}
$in_range_t -> {
  *29 4294967296 -> false
  *29 0 -> true
  *80 18446744073709551616 -> false
  *80 0 -> true
  *29 -1 -> false
  *29 4294967295 -> true
  *80 -1 -> false
  *80 18446744073709551615 -> true
  *105 -10000 -> true
  *80 -3103 -> false
  *80 361 -> true
  *80 296 -> true
  *80 2752 -> true
  *80 -53 -> false
  *80 8114 -> true
  else -> true
}
$spec_ptr_cast -> {
  *48 *135 -> *48
  *54 *133 -> *54
  *11 *135 -> *11
  else -> *48
}
$is_union_type -> {
  *89 -> false
  *115 -> false
  else -> false
}
$field_parent_type -> {
  *19 -> *89
  *140 -> *115
  *127 -> *115
  *45 -> *115
  *156 -> *135
  *158 -> *133
  *152 -> *116
  *173 -> *44
  *174 -> *31
  *149 -> *135
  *150 -> *133
  *175 -> *89
  *176 -> *115
  *151 -> *89
  else -> *115
}
$sizeof -> {
  *86 -> 1
  *134 -> 2
  *105 -> 4
  *121 -> 8
  *114 -> 1
  *38 -> 2
  *29 -> 4
  *80 -> 8
  *41 -> 4
  *74 -> 8
  *49 -> 1
  *92 -> 1
  *87 -> 1
  *15 -> 1
  *3 -> 1
  *44 -> 1
  *31 -> 1
  *59 -> 1
  *30 -> 1
  *57 -> 1
  *26 -> 1
  *27 -> 1
  *135 -> 1
  *133 -> 1
  *128 -> 1
  *58 -> 1
  *89 -> 4
  *115 -> 24
  *43 -> 8
  *147 -> 8
  *136 -> 8
  *9 -> 8
  *113 -> 8
  *145 -> 8
  *69 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *173 -> true
  *174 -> true
  *149 -> true
  *150 -> true
  *175 -> true
  *176 -> true
  else -> true
}
$in_range_spec_ptr -> {
  *48 -> true
  *54 -> true
  *11 -> true
  else -> true
}
$is_fnptr_type -> {
  *43 -> true
  *147 -> true
  *136 -> true
  *9 -> true
  *113 -> true
  *145 -> true
  *69 -> true
  else -> true
}
$f_root -> {
  *92 -> *152
  *135 -> *156
  *133 -> *158
  *89 -> *151
  else -> *152
}
$is_span_sequential -> {
  *89 -> true
  *115 -> true
  else -> true
}
$good_state -> {
  *299 -> true
  *62 -> true
  else -> true
}
$field_offset -> {
  *19 -> 0
  *140 -> 0
  *127 -> 8
  *45 -> 16
  *154 -> -18446744073709562968
  *156 -> 0
  *158 -> 0
  *152 -> 0
  *161 -> -18446744073709558619
  *151 -> 0
  else -> 0
}
$base -> {
  *104 -> 0
  *48 -> 361
  *54 -> 296
  *11 -> 2752
  *117 -> 18446744073709559865
  *50 -> 18446744073709558566
  *148 -> 8114
  else -> 0
}
$as_in_range_t -> {
  *86 -> *86
  *134 -> *134
  *105 -> *105
  *121 -> *121
  *114 -> *114
  *38 -> *38
  *29 -> *29
  *80 -> *80
  *30 -> *30
  else -> *86
}
$field_arr_root -> {
  *19 -> *19
  *140 -> *140
  *127 -> *127
  *45 -> *45
  *152 -> *152
  *156 -> *156
  *158 -> *158
  *173 -> *173
  *174 -> *174
  *149 -> *149
  *150 -> *150
  *175 -> *175
  *176 -> *176
  *151 -> *151
  else -> *19
}
*** STATE <initial>
  $s -> *62
  $cev_pc -> **$cev_pc
  P#a -> *50
  P#b -> **P#b
  P#amount -> 799
  owns#14 -> **owns#14
  staticWrapState#12 -> **staticWrapState#12
  prestate#11 -> **prestate#11
  owns#10 -> **owns#10
  staticWrapState#8 -> **staticWrapState#8
  prestate#7 -> **prestate#7
  prestate#6 -> **prestate#6
  prestate#4 -> **prestate#4
  owns#5 -> **owns#5
  prestate#3 -> **prestate#3
  prestate#1 -> **prestate#1
  owns#2 -> **owns#2
  #wrTime$1^13.1 -> 695
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(13,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#2 -> *81
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#1 -> *62
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
  prestate#3 -> *62
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%+38915 -> true
%lbl%+1480 -> true
%lbl%@39054 -> true
$position_marker -> true
%lbl%@39073 -> true
%lbl%@39326 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
^$#_onexit_t#4 -> *9
unique-value!79 -> *10
$untyped_owner_owner -> *11
call914formal@o@0 -> *12
$max.u4 -> 4294967295
#tok$2^41.3 -> *14
$fk_ref_cnt -> *15
^^field -> *16
$max.u2 -> 65535
loop_entered -> *18
unique-value!59 -> *19
Account.amount -> *20
$ctype_flat -> *21
$fk_as_array_first -> *22
unique-value!56 -> *23
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *24
unique-value!67 -> *25
#tok$1^26.5 -> *26
^$#state_t -> *27
^$#struct -> *28
^$#seq_version -> *29
^^u4 -> *30
^^nat -> *31
^$#volatile_version_t -> *32
$ctype_blob -> *33
$max.i2 -> 32767
unique-value!72 -> *35
unique-value!75 -> *36
P#amount -> 799
unique-value!90 -> *38
^^u2 -> *39
$min.i8 -> -9223372036854775808
unique-value!85 -> *41
^^f4 -> *42
unique-value!92 -> *43
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *44
^^claim -> *45
AccountGroup.total -> *46
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *48
$me -> *49
^^bool -> *50
P#a -> *51
$max.i1 -> 127
cev_parameter -> *53
unique-value!55 -> *54
$untyped_owner -> *55
unique-value!63 -> *56
unique-value!74 -> *57
^$#ptrset -> *58
^$##club -> *59
^^mathint -> *60
unique-value!66 -> *61
unique-value!60 -> *62
prestate#1@0 -> *63
prestate#3@0 -> *63
$s -> *63
$arch_ptr_size -> 8
$struct_zero -> *65
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *66
unique-value!80 -> *67
unique-value!88 -> *68
unique-value!84 -> *69
^$#_invalid_parameter_handler#7 -> *70
$min.i1 -> -128
unique-value!61 -> *72
conditional_moment -> *73
unique-value!65 -> *74
^^f8 -> *75
unique-value!87 -> *76
unique-value!89 -> *77
#tok$1^23.16 -> *78
$fk_base -> *79
#tok$1^28.5 -> *80
^^u8 -> *81
$arch_ptr_type -> *81
$set_empty -> *82
owns#2@0 -> *82
owns#5@0 -> *82
lambda@13 -> *82
$ctype_ptr -> *83
unique-value!82 -> *84
$fk_vol_version -> *85
prestate#6@0 -> *86
$s@0@@0 -> *86
prestate#4@0 -> *86
$max.u1 -> 255
^^i1 -> *88
^^object -> *89
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *91
$ctype_spec_ptr -> *92
unique-value!58 -> *93
^^void -> *94
unique-value!62 -> *95
unique-value!70 -> *96
unique-value!93 -> *97
$fk_active_option -> *98
$ctype_array -> *99
unique-value!77 -> *100
cev_local -> *101
#tok$2^47.3 -> *102
@MV_state_const -> 74
$ctype_map -> *104
loop_register -> *105
$null -> *106
^^i4 -> *107
$fk_allocation_root -> *108
unique-value!68 -> *109
unique-value!57 -> *110
loop_exited -> *111
$min.i2 -> -32768
cev_implicit -> *113
#tok$1^6.1 -> *114
^$#account2.c..36689#5 -> *115
^^u1 -> *116
^AccountGroup -> *117
$primitive_emb_type -> *118
$no_claim -> *119
unique-value!71 -> *120
lambda@20 -> *121
prestate#3@1 -> *122
took_else_branch -> *123
^^i8 -> *124
took_then_branch -> *125
#tok$2^42.3 -> *126
unique-value!76 -> *127
unique-value!83 -> *128
#wrTime$1^13.1 -> 695
AccountGroup.creditCard -> *130
P#b -> *131
^$##thread_id -> *132
$min.i4 -> -2147483648
unique-value!64 -> *134
unique-value!69 -> *135
#tok$2^46.3 -> *136
$untyped_owner_type -> *137
^^i2 -> *138
^$#thread_id_t -> *139
^$#account2.c..36585#3 -> *140
unique-value!91 -> *141
unique-value!73 -> *142
#tok$1^22.5 -> *143
AccountGroup.giro -> *144
^$#vol_version -> *145
#tok$1^13.1 -> *146
unique-value!86 -> *147
#tok$2^25.1 -> *148
^$#_purecall_handler#6 -> *149
unique-value!78 -> *150
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *151
$cev_pc -> **$cev_pc
owns#14 -> **owns#14
staticWrapState#12 -> **staticWrapState#12
prestate#11 -> **prestate#11
owns#10 -> **owns#10
staticWrapState#8 -> **staticWrapState#8
prestate#7 -> **prestate#7
prestate#6 -> **prestate#6
prestate#4 -> **prestate#4
owns#5 -> **owns#5
prestate#3 -> **prestate#3
prestate#1 -> **prestate#1
owns#2 -> **owns#2
#stackframe -> **#stackframe
$owner -> {
  *63 *12 -> *49
  *86 *12 -> *49
  *86 *152 -> *55
  else -> *49
}
$ptr_to -> {
  *91 -> *5
  else -> *5
}
$is_volatile_field -> {
  *153 -> true
  *154 -> true
  else -> true
}
$is_phys_field -> {
  *20 -> true
  *144 -> true
  *130 -> true
  *46 -> true
  *155 -> true
  else -> true
}
Store_[$ptr]$bool -> {
  *156 *12 false -> *157
  else -> *157
}
$ptr -> {
  *158 0 -> *106
  *160 18446744073709557677 -> *119
  *162 361 -> *49
  *164 296 -> *55
  *162 1329 -> *11
  *167 18446744073709553017 -> *51
  *155 7539 -> *12
  *170 18446744073709555333 -> *131
  *155 857 -> *152
  else -> *106
}
$closed -> {
  *63 *12 -> true
  *86 *12 -> false
  else -> true
}
$addr0 -> {
  *106 -> 0
  *119 -> 0
  *49 -> 361
  *55 -> 296
  *11 -> 1329
  *51 -> 7539
  *12 -> 7539
  *152 -> 857
  *131 -> 857
  else -> 0
}
$is_proper -> {
  *49 -> true
  *55 -> true
  *11 -> true
  *12 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *12 -> true
  *152 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  74 11 -> true
  74 12 -> true
  74 13 -> true
  74 14 -> true
  74 15 -> true
  74 16 -> true
  74 17 -> true
  74 18 -> true
  74 19 -> true
  74 20 -> true
  74 21 -> true
  74 22 -> true
  74 23 -> true
  else -> true
}
$current_timestamp -> {
  *63 -> 695
  *86 -> 696
  *122 -> 696
  else -> 696
}
$as_primitive_field -> {
  *20 -> *20
  *144 -> *144
  *130 -> *130
  *46 -> *46
  *158 -> *158
  *196 -> *196
  *197 -> *197
  *153 -> *153
  *154 -> *154
  *198 -> *198
  *199 -> *199
  else -> *20
}
$start_release -> {
  *63 *63 -> *122
  else -> *122
}
$f_timestamp -> {
  *86 -> *200
  *122 -> *201
  *63 -> *201
  else -> *201
}
Select_[$ptr]$int -> {
  *201 *12 -> 695
  *202 *12 -> -874
  *204 *12 -> 88
  *200 *12 -> 696
  else -> 695
}
$inv2 -> {
  *63 *63 *12 *91 -> true
  else -> true
}
$unchecked -> {
  *30 4294967296 -> 0
  *81 18446744073709551616 -> 0
  *30 -1 -> 4294967295
  *81 -1 -> 18446744073709551615
  *107 -10000 -> -10000
  *81 0 -> 0
  *81 -7802 -> 0
  *81 361 -> 361
  *81 296 -> 296
  *81 1329 -> 1329
  *81 -8136 -> 7539
  *81 7539 -> 7539
  *81 -3679 -> 857
  *81 857 -> 857
  else -> 0
}
$is_unwrapped -> {
  *63 *86 *12 -> true
  else -> true
}
$mutable -> {
  *86 *12 -> true
  else -> true
}
$is_primitive -> {
  *88 -> true
  *138 -> true
  *107 -> true
  *124 -> true
  *116 -> true
  *39 -> true
  *30 -> true
  *81 -> true
  *42 -> true
  *75 -> true
  *50 -> true
  *94 -> true
  *89 -> true
  *16 -> true
  *3 -> true
  *45 -> false
  *32 -> false
  *60 -> true
  *31 -> true
  *58 -> true
  *27 -> true
  *28 -> true
  *139 -> false
  *137 -> false
  *132 -> true
  *59 -> true
  *91 -> false
  *117 -> false
  *5 -> true
  *44 -> true
  *151 -> true
  *140 -> true
  *9 -> true
  *115 -> true
  *149 -> true
  *70 -> true
  *118 -> false
  else -> true
}
$as_field_with_type -> {
  *20 *107 -> *20
  *144 *5 -> *144
  *130 *5 -> *130
  *46 *107 -> *46
  *158 *94 -> *158
  *162 *139 -> *162
  *164 *137 -> *164
  *196 *58 -> *196
  *197 *58 -> *197
  *153 *58 -> *153
  *154 *58 -> *154
  *198 *58 -> *198
  *199 *58 -> *199
  *155 *91 -> *155
  else -> *20
}
$is -> {
  *12 *91 -> true
  else -> true
}
$post_unwrap -> {
  *63 *86 -> true
  else -> true
}
$invok_state -> {
  *63 -> true
  *86 -> true
  else -> true
}
$roots -> {
  *63 -> *213
  *86 -> *214
  else -> *213
}
$is_sequential_field -> {
  *196 -> true
  *197 -> true
  *198 -> true
  *20 -> true
  *199 -> true
  *144 -> true
  *130 -> true
  *46 -> true
  *158 -> true
  *153 -> false
  else -> true
}
$is_math_type -> {
  *89 -> true
  *16 -> true
  *3 -> true
  *60 -> true
  *31 -> true
  *58 -> true
  *27 -> true
  *28 -> true
  *132 -> true
  *59 -> true
  else -> true
}
$file_name_is -> {
  2 *24 -> true
  1 *66 -> true
  else -> true
}
$unchk_add -> {
  *81 0 0 -> 0
  *81 18446744073709557677 -18446744073709565479 -> 0
  *81 361 0 -> 361
  *81 296 0 -> 296
  *81 1329 0 -> 1329
  *81 18446744073709553017 -18446744073709561153 -> 7539
  *81 7539 0 -> 7539
  *81 18446744073709555333 -18446744073709559012 -> 857
  *81 857 0 -> 857
  else -> 0
}
$full_stop -> {
  *63 -> true
  *86 -> true
  else -> true
}
$writes_at -> {
  695 -> *121
  else -> *121
}
$call_transition -> {
  *63 *86 -> true
  else -> true
}
$set_cardinality -> {
  *82 -> 0
  else -> 0
}
$is_claimable -> {
  *45 -> true
  *32 -> false
  *139 -> false
  *137 -> false
  *91 -> false
  *117 -> false
  *88 -> false
  *138 -> false
  *107 -> false
  *124 -> false
  *116 -> false
  *39 -> false
  *30 -> false
  *81 -> false
  *42 -> false
  *75 -> false
  *50 -> false
  *94 -> false
  *89 -> false
  *16 -> false
  *3 -> false
  *60 -> false
  *31 -> false
  *58 -> false
  *27 -> false
  *28 -> false
  *132 -> false
  *59 -> false
  *44 -> false
  *151 -> false
  *140 -> false
  *9 -> false
  *115 -> false
  *149 -> false
  *70 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *20 -> true
  *144 -> true
  *130 -> true
  *46 -> true
  *162 -> true
  *164 -> true
  *158 -> true
  *196 -> true
  *197 -> true
  *153 -> true
  *154 -> true
  *198 -> true
  *199 -> true
  *155 -> true
  else -> true
}
$wrapped -> {
  *63 *12 *91 -> true
  *86 *152 *91 -> false
  else -> true
}
$top_writable -> {
  *63 695 *12 -> true
  else -> true
}
$f_closed -> {
  *63 -> *156
  *86 -> *157
  else -> *156
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$ptr]$bool -> {
  *156 *12 -> true
  *157 *12 -> false
  else -> true
}
$field_kind -> {
  *20 -> *79
  *144 -> *79
  *130 -> *79
  *46 -> *79
  *158 -> *108
  *162 -> *108
  *164 -> *108
  *196 -> *6
  *197 -> *6
  *153 -> *6
  *154 -> *6
  *198 -> *6
  *199 -> *6
  *155 -> *108
  else -> *6
}
Select_[$field][$ptr]$int -> {
  *315 *20 -> *202
  *315 *198 -> *204
  else -> *202
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *162 -> *162
  *164 -> *164
  *155 -> *155
  else -> *162
}
$phys_ptr_cast -> {
  *51 *91 -> *12
  *131 *91 -> *152
  *12 *91 -> *12
  *152 *91 -> *152
  else -> *12
}
Store_[$ptr]$int -> {
  *201 *12 696 -> *200
  else -> *200
}
$vs_state -> {
  *65 -> *316
  else -> *316
}
$trans_call_transition -> {
  *63 *86 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *118 -> *54
  *88 -> *23
  *138 -> *110
  *107 -> *93
  *124 -> *19
  *116 -> *62
  *39 -> *72
  *30 -> *95
  *81 -> *56
  *94 -> *134
  *50 -> *74
  *42 -> *61
  *75 -> *25
  *89 -> *109
  *16 -> *135
  *3 -> *96
  *45 -> *120
  *60 -> *35
  *31 -> *142
  *58 -> *57
  *27 -> *36
  *32 -> *127
  *28 -> *100
  *29 -> *150
  *145 -> *10
  *139 -> *67
  *137 -> *2
  *132 -> *84
  *59 -> *128
  *91 -> *69
  *117 -> *41
  *44 -> *147
  *151 -> *76
  *140 -> *68
  *9 -> *77
  *115 -> *38
  *149 -> *141
  *70 -> *43
  *5 -> *97
  else -> *54
}
$instantiate_int -> {
  -874 -> true
  88 -> true
  else -> true
}
$unchk_sub -> {
  *107 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *49 -> *162
  *55 -> *164
  *11 -> *162
  *119 -> *160
  *106 -> *158
  *51 -> *167
  *12 -> *155
  *152 -> *155
  *131 -> *170
  else -> *162
}
$heap -> {
  *63 -> *315
  *86 -> *315
  else -> *315
}
$f_owns -> {
  *45 -> *196
  *32 -> *197
  *139 -> *153
  *137 -> *154
  *91 -> *198
  *117 -> *199
  else -> *196
}
$field_type -> {
  *160 -> *45
  *20 -> *107
  *144 -> *5
  *130 -> *5
  *46 -> *107
  *162 -> *139
  *164 -> *137
  *158 -> *94
  *196 -> *58
  *197 -> *58
  *153 -> *58
  *154 -> *58
  *198 -> *58
  *199 -> *58
  *155 -> *91
  else -> *58
}
$has_field_at0 -> {
  *91 *20 -> true
  *117 *144 -> true
  else -> true
}
$function_entry -> {
  *63 -> true
  else -> true
}
$good_state_ext -> {
  *146 *63 -> true
  *143 *86 -> true
  else -> true
}
$f_owner -> {
  *86 -> *318
  *122 -> *318
  *63 -> *318
  else -> *318
}
$type_project_0 -> {
  *5 -> *91
  else -> *91
}
Select_[$ptr]$ptr -> {
  *318 *12 -> *49
  *213 *12 -> *12
  *214 *12 -> *12
  *318 *152 -> *55
  else -> *12
}
$type_branch -> {
  *88 -> *21
  *138 -> *21
  *107 -> *21
  *124 -> *21
  *116 -> *21
  *39 -> *21
  *30 -> *21
  *81 -> *21
  *42 -> *21
  *75 -> *21
  *50 -> *21
  *94 -> *21
  *89 -> *21
  *16 -> *21
  *3 -> *21
  *45 -> *21
  *32 -> *21
  *60 -> *21
  *31 -> *21
  *58 -> *21
  *27 -> *21
  *28 -> *21
  *139 -> *21
  *137 -> *21
  *132 -> *21
  *59 -> *21
  *91 -> *21
  *117 -> *21
  *44 -> *21
  *151 -> *21
  *140 -> *21
  *9 -> *21
  *115 -> *21
  *149 -> *21
  *70 -> *21
  *5 -> *83
  else -> *21
}
$set_in_pos -> {
  *12 *156 -> true
  else -> true
}
$in_range_t -> {
  *30 4294967296 -> false
  *30 0 -> true
  *81 18446744073709551616 -> false
  *81 0 -> true
  *30 -1 -> false
  *30 4294967295 -> true
  *81 -1 -> false
  *81 18446744073709551615 -> true
  *107 -10000 -> true
  *81 -7802 -> false
  *81 361 -> true
  *81 296 -> true
  *81 1329 -> true
  *81 -8136 -> false
  *81 7539 -> true
  *107 -874 -> true
  *81 -3679 -> false
  *81 857 -> true
  else -> true
}
$set_eq -> {
  *82 *82 -> true
  else -> true
}
$spec_ptr_cast -> {
  *49 *139 -> *49
  *55 *137 -> *55
  *11 *139 -> *11
  else -> *49
}
$maybe_emb -> {
  *12 -> *12
  else -> *12
}
$is_union_type -> {
  *91 -> false
  *117 -> false
  else -> false
}
$field_parent_type -> {
  *20 -> *91
  *144 -> *117
  *130 -> *117
  *46 -> *117
  *162 -> *139
  *164 -> *137
  *158 -> *118
  *196 -> *45
  *197 -> *32
  *153 -> *139
  *154 -> *137
  *198 -> *91
  *199 -> *117
  *155 -> *91
  else -> *117
}
$sizeof -> {
  *88 -> 1
  *138 -> 2
  *107 -> 4
  *124 -> 8
  *116 -> 1
  *39 -> 2
  *30 -> 4
  *81 -> 8
  *42 -> 4
  *75 -> 8
  *50 -> 1
  *94 -> 1
  *89 -> 1
  *16 -> 1
  *3 -> 1
  *45 -> 1
  *32 -> 1
  *60 -> 1
  *31 -> 1
  *58 -> 1
  *27 -> 1
  *28 -> 1
  *139 -> 1
  *137 -> 1
  *132 -> 1
  *59 -> 1
  *91 -> 4
  *117 -> 24
  *44 -> 8
  *151 -> 8
  *140 -> 8
  *9 -> 8
  *115 -> 8
  *149 -> 8
  *70 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *196 -> true
  *197 -> true
  *153 -> true
  *154 -> true
  *198 -> true
  *199 -> true
  else -> true
}
$in_range_spec_ptr -> {
  *49 -> true
  *55 -> true
  *11 -> true
  else -> true
}
$is_fnptr_type -> {
  *44 -> true
  *151 -> true
  *140 -> true
  *9 -> true
  *115 -> true
  *149 -> true
  *70 -> true
  else -> true
}
$f_root -> {
  *94 -> *158
  *139 -> *162
  *137 -> *164
  *91 -> *155
  else -> *158
}
$owns -> {
  *63 *12 -> *82
  *86 *12 -> *82
  else -> *82
}
$pre_static_unwrap -> {
  *63 -> true
  else -> true
}
$int_to_ptrset -> {
  88 -> *82
  else -> *82
}
$is_span_sequential -> {
  *91 -> true
  *117 -> true
  else -> true
}
$good_state -> {
  *316 -> true
  *63 -> true
  *86 -> true
  *122 -> false
  else -> true
}
$typemap -> {
  *318 -> *319
  else -> *319
}
$field_offset -> {
  *20 -> 0
  *144 -> 0
  *130 -> 8
  *46 -> 16
  *160 -> -18446744073709565479
  *162 -> 0
  *164 -> 0
  *158 -> 0
  *167 -> -18446744073709561153
  *155 -> 0
  *170 -> -18446744073709559012
  else -> 0
}
$base -> {
  *106 -> 0
  *49 -> 361
  *55 -> 296
  *11 -> 1329
  *119 -> 18446744073709557677
  *51 -> 18446744073709553017
  *12 -> 7539
  *152 -> 857
  *131 -> 18446744073709555333
  else -> 0
}
$as_in_range_t -> {
  *88 -> *88
  *138 -> *138
  *107 -> *107
  *124 -> *124
  *116 -> *116
  *39 -> *39
  *30 -> *30
  *81 -> *81
  *31 -> *31
  else -> *88
}
$field_arr_root -> {
  *20 -> *20
  *144 -> *144
  *130 -> *130
  *46 -> *46
  *158 -> *158
  *162 -> *162
  *164 -> *164
  *196 -> *196
  *197 -> *197
  *153 -> *153
  *154 -> *154
  *198 -> *198
  *199 -> *199
  *155 -> *155
  else -> *20
}
*** STATE <initial>
  $s -> *63
  $cev_pc -> **$cev_pc
  P#a -> *51
  P#b -> *131
  P#amount -> 799
  owns#14 -> **owns#14
  staticWrapState#12 -> **staticWrapState#12
  prestate#11 -> **prestate#11
  owns#10 -> **owns#10
  staticWrapState#8 -> **staticWrapState#8
  prestate#7 -> **prestate#7
  prestate#6 -> **prestate#6
  prestate#4 -> **prestate#4
  owns#5 -> **owns#5
  prestate#3 -> **prestate#3
  prestate#1 -> **prestate#1
  owns#2 -> **owns#2
  #wrTime$1^13.1 -> 695
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(13,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#2 -> *82
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#1 -> *63
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
  prestate#3 -> *63
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#3 -> *122
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,5)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *86
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#5 -> *82
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#4 -> *86
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  prestate#6 -> *86
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@39326 -> true
%lbl%+38915 -> true
%lbl%+1480 -> true
%lbl%@39054 -> true
$position_marker -> true
%lbl%@39073 -> true
%lbl%@39344 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
^$#_onexit_t#4 -> *9
unique-value!79 -> *10
$untyped_owner_owner -> *11
call914formal@o@0 -> *12
$max.u4 -> 4294967295
#tok$2^41.3 -> *14
$fk_ref_cnt -> *15
^^field -> *16
$max.u2 -> 65535
loop_entered -> *18
unique-value!59 -> *19
Account.amount -> *20
$ctype_flat -> *21
$fk_as_array_first -> *22
unique-value!56 -> *23
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *24
unique-value!67 -> *25
#tok$1^26.5 -> *26
^$#state_t -> *27
^$#struct -> *28
^$#seq_version -> *29
^^u4 -> *30
^^nat -> *31
^$#volatile_version_t -> *32
$ctype_blob -> *33
$max.i2 -> 32767
unique-value!72 -> *35
unique-value!75 -> *36
P#amount -> 799
unique-value!90 -> *38
^^u2 -> *39
$min.i8 -> -9223372036854775808
unique-value!85 -> *41
^^f4 -> *42
unique-value!92 -> *43
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *44
^^claim -> *45
AccountGroup.total -> *46
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *48
$me -> *49
^^bool -> *50
P#a -> *51
$max.i1 -> 127
cev_parameter -> *53
unique-value!55 -> *54
$untyped_owner -> *55
unique-value!63 -> *56
unique-value!74 -> *57
^$#ptrset -> *58
^$##club -> *59
^^mathint -> *60
unique-value!66 -> *61
unique-value!60 -> *62
prestate#1@0 -> *63
prestate#3@0 -> *63
$s -> *63
$arch_ptr_size -> 8
$struct_zero -> *65
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *66
unique-value!80 -> *67
unique-value!88 -> *68
unique-value!84 -> *69
^$#_invalid_parameter_handler#7 -> *70
$min.i1 -> -128
unique-value!61 -> *72
conditional_moment -> *73
unique-value!65 -> *74
^^f8 -> *75
unique-value!87 -> *76
unique-value!89 -> *77
#tok$1^23.16 -> *78
$fk_base -> *79
#tok$1^28.5 -> *80
^^u8 -> *81
$arch_ptr_type -> *81
$set_empty -> *82
owns#2@0 -> *82
owns#5@0 -> *82
lambda@13 -> *82
$ctype_ptr -> *83
unique-value!82 -> *84
$fk_vol_version -> *85
prestate#6@0 -> *86
$s@0@@0 -> *86
prestate#4@0 -> *86
$max.u1 -> 255
^^i1 -> *88
^^object -> *89
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *91
$ctype_spec_ptr -> *92
unique-value!58 -> *93
^^void -> *94
unique-value!62 -> *95
unique-value!70 -> *96
unique-value!93 -> *97
$fk_active_option -> *98
$ctype_array -> *99
unique-value!77 -> *100
cev_local -> *101
#tok$2^47.3 -> *102
@MV_state_const -> 74
$ctype_map -> *104
loop_register -> *105
$null -> *106
^^i4 -> *107
$fk_allocation_root -> *108
unique-value!68 -> *109
unique-value!57 -> *110
loop_exited -> *111
$min.i2 -> -32768
cev_implicit -> *113
#tok$1^6.1 -> *114
^$#account2.c..36689#5 -> *115
^^u1 -> *116
^AccountGroup -> *117
$primitive_emb_type -> *118
$no_claim -> *119
unique-value!71 -> *120
lambda@20 -> *121
prestate#3@1 -> *122
took_else_branch -> *123
^^i8 -> *124
took_then_branch -> *125
#tok$2^42.3 -> *126
unique-value!76 -> *127
unique-value!83 -> *128
#wrTime$1^13.1 -> 695
AccountGroup.creditCard -> *130
P#b -> *131
^$##thread_id -> *132
$min.i4 -> -2147483648
unique-value!64 -> *134
unique-value!69 -> *135
#tok$2^46.3 -> *136
$untyped_owner_type -> *137
^^i2 -> *138
^$#thread_id_t -> *139
^$#account2.c..36585#3 -> *140
unique-value!91 -> *141
unique-value!73 -> *142
#tok$1^22.5 -> *143
AccountGroup.giro -> *144
^$#vol_version -> *145
#tok$1^13.1 -> *146
unique-value!86 -> *147
#tok$2^25.1 -> *148
^$#_purecall_handler#6 -> *149
unique-value!78 -> *150
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *151
$cev_pc -> **$cev_pc
owns#14 -> **owns#14
staticWrapState#12 -> **staticWrapState#12
prestate#11 -> **prestate#11
owns#10 -> **owns#10
staticWrapState#8 -> **staticWrapState#8
prestate#7 -> **prestate#7
prestate#6 -> **prestate#6
prestate#4 -> **prestate#4
owns#5 -> **owns#5
prestate#3 -> **prestate#3
prestate#1 -> **prestate#1
owns#2 -> **owns#2
#stackframe -> **#stackframe
$owner -> {
  *63 *12 -> *49
  *86 *12 -> *49
  *86 *152 -> *49
  else -> *49
}
$ptr_to -> {
  *91 -> *5
  else -> *5
}
$is_volatile_field -> {
  *153 -> true
  *154 -> true
  else -> true
}
$is_phys_field -> {
  *20 -> true
  *144 -> true
  *130 -> true
  *46 -> true
  *155 -> true
  else -> true
}
Store_[$ptr]$bool -> {
  *156 *12 false -> *157
  else -> *157
}
$ptr -> {
  *158 0 -> *106
  *160 18446744073709560132 -> *119
  *162 361 -> *49
  *164 296 -> *55
  *162 6392 -> *11
  *167 18446744073709553564 -> *51
  *155 1451 -> *12
  *170 18446744073709559026 -> *131
  *155 711 -> *152
  else -> *106
}
$closed -> {
  *63 *12 -> true
  *86 *12 -> false
  *86 *152 -> true
  else -> true
}
$addr0 -> {
  *106 -> 0
  *119 -> 0
  *49 -> 361
  *55 -> 296
  *11 -> 6392
  *51 -> 1451
  *12 -> 1451
  *131 -> 711
  *152 -> 711
  else -> 0
}
$is_proper -> {
  *49 -> true
  *55 -> true
  *11 -> true
  *12 -> true
  *152 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *12 -> true
  *152 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  74 11 -> true
  74 12 -> true
  74 13 -> true
  74 14 -> true
  74 15 -> true
  74 16 -> true
  74 17 -> true
  74 18 -> true
  74 19 -> true
  74 20 -> true
  74 21 -> true
  74 22 -> true
  74 23 -> true
  74 24 -> true
  else -> true
}
$current_timestamp -> {
  *63 -> 695
  *86 -> 696
  *122 -> 696
  else -> 696
}
$as_primitive_field -> {
  *20 -> *20
  *144 -> *144
  *130 -> *130
  *46 -> *46
  *158 -> *158
  *197 -> *197
  *198 -> *198
  *153 -> *153
  *154 -> *154
  *199 -> *199
  *200 -> *200
  else -> *20
}
$start_release -> {
  *63 *63 -> *122
  else -> *122
}
$f_timestamp -> {
  *86 -> *201
  *122 -> *202
  *63 -> *202
  else -> *202
}
Select_[$ptr]$int -> {
  *202 *12 -> 695
  *203 *12 -> -874
  *205 *12 -> 88
  *201 *12 -> 696
  *201 *152 -> -613
  *202 *152 -> -613
  else -> -613
}
$inv2 -> {
  *63 *63 *12 *91 -> true
  else -> true
}
$unchecked -> {
  *30 4294967296 -> 0
  *81 18446744073709551616 -> 0
  *30 -1 -> 4294967295
  *81 -1 -> 18446744073709551615
  *107 -10000 -> -10000
  *81 0 -> 0
  *81 -1315 -> 0
  *81 361 -> 361
  *81 296 -> 296
  *81 6392 -> 6392
  *81 -4685 -> 1451
  *81 1451 -> 1451
  *81 -1289 -> 711
  *81 711 -> 711
  else -> 0
}
$is_unwrapped -> {
  *63 *86 *12 -> true
  else -> true
}
$mutable -> {
  *86 *12 -> true
  else -> true
}
$is_primitive -> {
  *88 -> true
  *138 -> true
  *107 -> true
  *124 -> true
  *116 -> true
  *39 -> true
  *30 -> true
  *81 -> true
  *42 -> true
  *75 -> true
  *50 -> true
  *94 -> true
  *89 -> true
  *16 -> true
  *3 -> true
  *45 -> false
  *32 -> false
  *60 -> true
  *31 -> true
  *58 -> true
  *27 -> true
  *28 -> true
  *139 -> false
  *137 -> false
  *132 -> true
  *59 -> true
  *91 -> false
  *117 -> false
  *5 -> true
  *44 -> true
  *151 -> true
  *140 -> true
  *9 -> true
  *115 -> true
  *149 -> true
  *70 -> true
  *118 -> false
  else -> true
}
$as_field_with_type -> {
  *20 *107 -> *20
  *144 *5 -> *144
  *130 *5 -> *130
  *46 *107 -> *46
  *158 *94 -> *158
  *162 *139 -> *162
  *164 *137 -> *164
  *197 *58 -> *197
  *198 *58 -> *198
  *153 *58 -> *153
  *154 *58 -> *154
  *199 *58 -> *199
  *200 *58 -> *200
  *155 *91 -> *155
  else -> *20
}
$is -> {
  *12 *91 -> true
  *152 *91 -> true
  else -> true
}
$post_unwrap -> {
  *63 *86 -> true
  else -> true
}
$invok_state -> {
  *63 -> true
  *86 -> true
  else -> true
}
$roots -> {
  *63 -> *215
  *86 -> *216
  else -> *215
}
$is_sequential_field -> {
  *197 -> true
  *198 -> true
  *199 -> true
  *20 -> true
  *200 -> true
  *144 -> true
  *130 -> true
  *46 -> true
  *158 -> true
  *153 -> false
  else -> true
}
$is_math_type -> {
  *89 -> true
  *16 -> true
  *3 -> true
  *60 -> true
  *31 -> true
  *58 -> true
  *27 -> true
  *28 -> true
  *132 -> true
  *59 -> true
  else -> true
}
$file_name_is -> {
  2 *24 -> true
  1 *66 -> true
  else -> true
}
$unchk_add -> {
  *81 0 0 -> 0
  *81 18446744073709560132 -18446744073709561447 -> 0
  *81 361 0 -> 361
  *81 296 0 -> 296
  *81 6392 0 -> 6392
  *81 18446744073709553564 -18446744073709558249 -> 1451
  *81 1451 0 -> 1451
  *81 18446744073709559026 -18446744073709560315 -> 711
  *81 711 0 -> 711
  else -> 0
}
$full_stop -> {
  *63 -> true
  *86 -> true
  else -> true
}
$writes_at -> {
  695 -> *121
  else -> *121
}
$call_transition -> {
  *63 *86 -> true
  else -> true
}
$set_cardinality -> {
  *82 -> 0
  else -> 0
}
$is_claimable -> {
  *45 -> true
  *32 -> false
  *139 -> false
  *137 -> false
  *91 -> false
  *117 -> false
  *88 -> false
  *138 -> false
  *107 -> false
  *124 -> false
  *116 -> false
  *39 -> false
  *30 -> false
  *81 -> false
  *42 -> false
  *75 -> false
  *50 -> false
  *94 -> false
  *89 -> false
  *16 -> false
  *3 -> false
  *60 -> false
  *31 -> false
  *58 -> false
  *27 -> false
  *28 -> false
  *132 -> false
  *59 -> false
  *44 -> false
  *151 -> false
  *140 -> false
  *9 -> false
  *115 -> false
  *149 -> false
  *70 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *20 -> true
  *144 -> true
  *130 -> true
  *46 -> true
  *162 -> true
  *164 -> true
  *158 -> true
  *197 -> true
  *198 -> true
  *153 -> true
  *154 -> true
  *199 -> true
  *200 -> true
  *155 -> true
  else -> true
}
$wrapped -> {
  *63 *12 *91 -> true
  *86 *152 *91 -> true
  else -> true
}
$top_writable -> {
  *63 695 *12 -> true
  *86 695 *152 -> false
  else -> true
}
$f_closed -> {
  *63 -> *156
  *86 -> *157
  else -> *156
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$ptr]$bool -> {
  *156 *12 -> true
  *157 *12 -> false
  *157 *152 -> true
  *156 *152 -> true
  *121 *152 -> false
  else -> true
}
$field_kind -> {
  *20 -> *79
  *144 -> *79
  *130 -> *79
  *46 -> *79
  *158 -> *108
  *162 -> *108
  *164 -> *108
  *197 -> *6
  *198 -> *6
  *153 -> *6
  *154 -> *6
  *199 -> *6
  *200 -> *6
  *155 -> *108
  else -> *6
}
Select_[$field][$ptr]$int -> {
  *316 *20 -> *203
  *316 *199 -> *205
  else -> *203
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *162 -> *162
  *164 -> *164
  *155 -> *155
  else -> *162
}
$in_writes_at -> {
  695 *152 -> false
  else -> false
}
$phys_ptr_cast -> {
  *51 *91 -> *12
  *131 *91 -> *152
  *12 *91 -> *12
  *152 *91 -> *152
  else -> *12
}
Store_[$ptr]$int -> {
  *202 *12 696 -> *201
  else -> *201
}
$vs_state -> {
  *65 -> *317
  else -> *317
}
$trans_call_transition -> {
  *63 *86 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *118 -> *54
  *88 -> *23
  *138 -> *110
  *107 -> *93
  *124 -> *19
  *116 -> *62
  *39 -> *72
  *30 -> *95
  *81 -> *56
  *94 -> *134
  *50 -> *74
  *42 -> *61
  *75 -> *25
  *89 -> *109
  *16 -> *135
  *3 -> *96
  *45 -> *120
  *60 -> *35
  *31 -> *142
  *58 -> *57
  *27 -> *36
  *32 -> *127
  *28 -> *100
  *29 -> *150
  *145 -> *10
  *139 -> *67
  *137 -> *2
  *132 -> *84
  *59 -> *128
  *91 -> *69
  *117 -> *41
  *44 -> *147
  *151 -> *76
  *140 -> *68
  *9 -> *77
  *115 -> *38
  *149 -> *141
  *70 -> *43
  *5 -> *97
  else -> *54
}
$instantiate_int -> {
  -874 -> true
  88 -> true
  else -> true
}
$unchk_sub -> {
  *107 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *49 -> *162
  *55 -> *164
  *11 -> *162
  *119 -> *160
  *106 -> *158
  *51 -> *167
  *12 -> *155
  *131 -> *170
  *152 -> *155
  else -> *162
}
$heap -> {
  *63 -> *316
  *86 -> *316
  else -> *316
}
$f_owns -> {
  *45 -> *197
  *32 -> *198
  *139 -> *153
  *137 -> *154
  *91 -> *199
  *117 -> *200
  else -> *197
}
$field_type -> {
  *160 -> *45
  *20 -> *107
  *144 -> *5
  *130 -> *5
  *46 -> *107
  *162 -> *139
  *164 -> *137
  *158 -> *94
  *197 -> *58
  *198 -> *58
  *153 -> *58
  *154 -> *58
  *199 -> *58
  *200 -> *58
  *155 -> *91
  else -> *58
}
$has_field_at0 -> {
  *91 *20 -> true
  *117 *144 -> true
  else -> true
}
$function_entry -> {
  *63 -> true
  else -> true
}
$good_state_ext -> {
  *146 *63 -> true
  *143 *86 -> true
  else -> true
}
$f_owner -> {
  *86 -> *319
  *122 -> *319
  *63 -> *319
  else -> *319
}
$type_project_0 -> {
  *5 -> *91
  else -> *91
}
Select_[$ptr]$ptr -> {
  *319 *12 -> *49
  *215 *12 -> *12
  *216 *12 -> *12
  *319 *152 -> *49
  *216 *152 -> *152
  *215 *152 -> *152
  else -> *12
}
$type_branch -> {
  *88 -> *21
  *138 -> *21
  *107 -> *21
  *124 -> *21
  *116 -> *21
  *39 -> *21
  *30 -> *21
  *81 -> *21
  *42 -> *21
  *75 -> *21
  *50 -> *21
  *94 -> *21
  *89 -> *21
  *16 -> *21
  *3 -> *21
  *45 -> *21
  *32 -> *21
  *60 -> *21
  *31 -> *21
  *58 -> *21
  *27 -> *21
  *28 -> *21
  *139 -> *21
  *137 -> *21
  *132 -> *21
  *59 -> *21
  *91 -> *21
  *117 -> *21
  *44 -> *21
  *151 -> *21
  *140 -> *21
  *9 -> *21
  *115 -> *21
  *149 -> *21
  *70 -> *21
  *5 -> *83
  else -> *21
}
$set_in_pos -> {
  *12 *156 -> true
  *152 *157 -> true
  *152 *156 -> true
  else -> true
}
$in_range_t -> {
  *30 4294967296 -> false
  *30 0 -> true
  *81 18446744073709551616 -> false
  *81 0 -> true
  *30 -1 -> false
  *30 4294967295 -> true
  *81 -1 -> false
  *81 18446744073709551615 -> true
  *107 -10000 -> true
  *81 -1315 -> false
  *81 361 -> true
  *81 296 -> true
  *81 6392 -> true
  *81 -4685 -> false
  *81 1451 -> true
  *107 -874 -> true
  *81 -1289 -> false
  *81 711 -> true
  else -> true
}
$set_eq -> {
  *82 *82 -> true
  else -> true
}
$spec_ptr_cast -> {
  *49 *139 -> *49
  *55 *137 -> *55
  *11 *139 -> *11
  else -> *49
}
$maybe_emb -> {
  *12 -> *12
  else -> *12
}
$is_union_type -> {
  *91 -> false
  *117 -> false
  else -> false
}
$field_parent_type -> {
  *20 -> *91
  *144 -> *117
  *130 -> *117
  *46 -> *117
  *162 -> *139
  *164 -> *137
  *158 -> *118
  *197 -> *45
  *198 -> *32
  *153 -> *139
  *154 -> *137
  *199 -> *91
  *200 -> *117
  *155 -> *91
  else -> *117
}
$sizeof -> {
  *88 -> 1
  *138 -> 2
  *107 -> 4
  *124 -> 8
  *116 -> 1
  *39 -> 2
  *30 -> 4
  *81 -> 8
  *42 -> 4
  *75 -> 8
  *50 -> 1
  *94 -> 1
  *89 -> 1
  *16 -> 1
  *3 -> 1
  *45 -> 1
  *32 -> 1
  *60 -> 1
  *31 -> 1
  *58 -> 1
  *27 -> 1
  *28 -> 1
  *139 -> 1
  *137 -> 1
  *132 -> 1
  *59 -> 1
  *91 -> 4
  *117 -> 24
  *44 -> 8
  *151 -> 8
  *140 -> 8
  *9 -> 8
  *115 -> 8
  *149 -> 8
  *70 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *197 -> true
  *198 -> true
  *153 -> true
  *154 -> true
  *199 -> true
  *200 -> true
  else -> true
}
$in_range_spec_ptr -> {
  *49 -> true
  *55 -> true
  *11 -> true
  else -> true
}
$is_fnptr_type -> {
  *44 -> true
  *151 -> true
  *140 -> true
  *9 -> true
  *115 -> true
  *149 -> true
  *70 -> true
  else -> true
}
$f_root -> {
  *94 -> *158
  *139 -> *162
  *137 -> *164
  *91 -> *155
  else -> *158
}
$owns -> {
  *63 *12 -> *82
  *86 *12 -> *82
  else -> *82
}
$pre_static_unwrap -> {
  *63 -> true
  else -> true
}
$int_to_ptrset -> {
  88 -> *82
  else -> *82
}
$is_span_sequential -> {
  *91 -> true
  *117 -> true
  else -> true
}
$good_state -> {
  *317 -> true
  *63 -> true
  *86 -> true
  *122 -> false
  else -> true
}
$typemap -> {
  *319 -> *320
  else -> *320
}
$field_offset -> {
  *20 -> 0
  *144 -> 0
  *130 -> 8
  *46 -> 16
  *160 -> -18446744073709561447
  *162 -> 0
  *164 -> 0
  *158 -> 0
  *167 -> -18446744073709558249
  *155 -> 0
  *170 -> -18446744073709560315
  else -> 0
}
$base -> {
  *106 -> 0
  *49 -> 361
  *55 -> 296
  *11 -> 6392
  *119 -> 18446744073709560132
  *51 -> 18446744073709553564
  *12 -> 1451
  *131 -> 18446744073709559026
  *152 -> 711
  else -> 0
}
$as_in_range_t -> {
  *88 -> *88
  *138 -> *138
  *107 -> *107
  *124 -> *124
  *116 -> *116
  *39 -> *39
  *30 -> *30
  *81 -> *81
  *31 -> *31
  else -> *88
}
$field_arr_root -> {
  *20 -> *20
  *144 -> *144
  *130 -> *130
  *46 -> *46
  *158 -> *158
  *162 -> *162
  *164 -> *164
  *197 -> *197
  *198 -> *198
  *153 -> *153
  *154 -> *154
  *199 -> *199
  *200 -> *200
  *155 -> *155
  else -> *20
}
*** STATE <initial>
  $s -> *63
  $cev_pc -> **$cev_pc
  P#a -> *51
  P#b -> *131
  P#amount -> 799
  owns#14 -> **owns#14
  staticWrapState#12 -> **staticWrapState#12
  prestate#11 -> **prestate#11
  owns#10 -> **owns#10
  staticWrapState#8 -> **staticWrapState#8
  prestate#7 -> **prestate#7
  prestate#6 -> **prestate#6
  prestate#4 -> **prestate#4
  owns#5 -> **owns#5
  prestate#3 -> **prestate#3
  prestate#1 -> **prestate#1
  owns#2 -> **owns#2
  #wrTime$1^13.1 -> 695
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(13,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#2 -> *82
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#1 -> *63
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
  prestate#3 -> *63
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#3 -> *122
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,5)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *86
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#5 -> *82
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#4 -> *86
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  prestate#6 -> *86
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@39344 -> true
%lbl%@39326 -> true
%lbl%+38915 -> true
%lbl%+1480 -> true
%lbl%@39054 -> true
$position_marker -> true
%lbl%@39073 -> true
%lbl%@39544 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
^$#_onexit_t#4 -> *9
$s@1@@0 -> *10
unique-value!79 -> *11
$untyped_owner_owner -> *12
call914formal@o@0 -> *13
$max.u4 -> 4294967295
#tok$2^41.3 -> *15
$fk_ref_cnt -> *16
^^field -> *17
$max.u2 -> 65535
loop_entered -> *19
unique-value!59 -> *20
Account.amount -> *21
$ctype_flat -> *22
$fk_as_array_first -> *23
unique-value!56 -> *24
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *25
unique-value!67 -> *26
#tok$1^26.5 -> *27
^$#state_t -> *28
^$#struct -> *29
^$#seq_version -> *30
^^u4 -> *31
^^nat -> *32
^$#volatile_version_t -> *33
$ctype_blob -> *34
$max.i2 -> 32767
unique-value!72 -> *36
unique-value!75 -> *37
P#amount -> 2147480714
unique-value!90 -> *39
^^u2 -> *40
$min.i8 -> -9223372036854775808
prestate#6@1 -> *42
unique-value!85 -> *43
^^f4 -> *44
unique-value!92 -> *45
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *46
^^claim -> *47
AccountGroup.total -> *48
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *50
$me -> *51
^^bool -> *52
P#a -> *53
$max.i1 -> 127
cev_parameter -> *55
unique-value!55 -> *56
$untyped_owner -> *57
unique-value!63 -> *58
unique-value!74 -> *59
^$#ptrset -> *60
^$##club -> *61
^^mathint -> *62
unique-value!66 -> *63
unique-value!60 -> *64
prestate#1@0 -> *65
prestate#3@0 -> *65
$s -> *65
$arch_ptr_size -> 8
$struct_zero -> *67
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *68
unique-value!80 -> *69
unique-value!88 -> *70
unique-value!84 -> *71
^$#_invalid_parameter_handler#7 -> *72
$min.i1 -> -128
unique-value!61 -> *74
conditional_moment -> *75
unique-value!65 -> *76
^^f8 -> *77
unique-value!87 -> *78
unique-value!89 -> *79
#tok$1^23.16 -> *80
$fk_base -> *81
#tok$1^28.5 -> *82
^^u8 -> *83
$arch_ptr_type -> *83
$set_empty -> *84
owns#2@0 -> *84
owns#5@0 -> *84
lambda@13 -> *84
$ctype_ptr -> *85
unique-value!82 -> *86
$fk_vol_version -> *87
prestate#6@0 -> *88
$s@0@@0 -> *88
prestate#4@0 -> *88
$max.u1 -> 255
^^i1 -> *90
^^object -> *91
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *93
$ctype_spec_ptr -> *94
unique-value!58 -> *95
^^void -> *96
unique-value!62 -> *97
unique-value!70 -> *98
unique-value!93 -> *99
$fk_active_option -> *100
$ctype_array -> *101
unique-value!77 -> *102
cev_local -> *103
#tok$2^47.3 -> *104
@MV_state_const -> 74
$ctype_map -> *106
loop_register -> *107
$null -> *108
^^i4 -> *109
$fk_allocation_root -> *110
unique-value!68 -> *111
call1050formal@o@0 -> *112
unique-value!57 -> *113
loop_exited -> *114
$min.i2 -> -32768
cev_implicit -> *116
#tok$1^6.1 -> *117
^$#account2.c..36689#5 -> *118
^^u1 -> *119
^AccountGroup -> *120
$primitive_emb_type -> *121
$no_claim -> *122
unique-value!71 -> *123
lambda@20 -> *124
prestate#3@1 -> *125
took_else_branch -> *126
^^i8 -> *127
took_then_branch -> *128
#tok$2^42.3 -> *129
unique-value!76 -> *130
unique-value!83 -> *131
#wrTime$1^13.1 -> 695
AccountGroup.creditCard -> *133
P#b -> *134
^$##thread_id -> *135
$min.i4 -> -2147483648
unique-value!64 -> *137
unique-value!69 -> *138
#tok$2^46.3 -> *139
$untyped_owner_type -> *140
^^i2 -> *141
^$#thread_id_t -> *142
^$#account2.c..36585#3 -> *143
unique-value!91 -> *144
unique-value!73 -> *145
#tok$1^22.5 -> *146
AccountGroup.giro -> *147
^$#vol_version -> *148
#tok$1^13.1 -> *149
unique-value!86 -> *150
#tok$2^25.1 -> *151
^$#_purecall_handler#6 -> *152
unique-value!78 -> *153
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *154
$cev_pc -> **$cev_pc
owns#14 -> **owns#14
staticWrapState#12 -> **staticWrapState#12
prestate#11 -> **prestate#11
owns#10 -> **owns#10
staticWrapState#8 -> **staticWrapState#8
prestate#7 -> **prestate#7
prestate#6 -> **prestate#6
prestate#4 -> **prestate#4
owns#5 -> **owns#5
prestate#3 -> **prestate#3
prestate#1 -> **prestate#1
owns#2 -> **owns#2
#stackframe -> **#stackframe
$owner -> {
  *65 *13 -> *51
  *88 *13 -> *51
  *88 *112 -> *51
  *10 *13 -> *51
  *10 *112 -> *51
  else -> *51
}
$ptr_to -> {
  *93 -> *5
  else -> *5
}
$is_volatile_field -> {
  *155 -> true
  *156 -> true
  else -> true
}
$is_phys_field -> {
  *21 -> true
  *147 -> true
  *133 -> true
  *48 -> true
  *157 -> true
  else -> true
}
Store_[$ptr]$bool -> {
  *158 *13 false -> *159
  *159 *112 false -> *160
  else -> *159
}
$ptr -> {
  *161 0 -> *108
  *163 18446744073709557687 -> *122
  *165 361 -> *51
  *167 296 -> *57
  *165 1920 -> *12
  *170 18446744073709556475 -> *53
  *157 9569 -> *13
  *173 18446744073709556247 -> *134
  *157 711 -> *112
  *21 9569 -> *176
  else -> *108
}
$closed -> {
  *65 *13 -> true
  *88 *13 -> false
  *88 *112 -> true
  *10 *112 -> false
  *10 *13 -> false
  else -> false
}
$dot -> {
  *13 *21 -> *176
  else -> *176
}
$addr0 -> {
  *108 -> 0
  *122 -> 0
  *51 -> 361
  *57 -> 296
  *12 -> 1920
  *53 -> 9569
  *13 -> 9569
  *134 -> 711
  *112 -> 711
  *176 -> 9569
  else -> 9569
}
$is_proper -> {
  *51 -> true
  *57 -> true
  *12 -> true
  *176 -> true
  *13 -> true
  *112 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *13 -> true
  *112 -> true
  *176 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  74 11 -> true
  74 12 -> true
  74 13 -> true
  74 14 -> true
  74 15 -> true
  74 16 -> true
  74 17 -> true
  74 18 -> true
  74 19 -> true
  74 20 -> true
  74 21 -> true
  74 22 -> true
  74 23 -> true
  74 24 -> true
  74 25 -> true
  74 26 -> true
  74 27 -> true
  74 28 -> true
  74 29 -> true
  74 30 -> true
  74 31 -> true
  74 32 -> true
  else -> true
}
$current_timestamp -> {
  *65 -> 695
  *88 -> 696
  *125 -> 696
  *10 -> 697
  *42 -> 697
  else -> 696
}
$as_primitive_field -> {
  *21 -> *21
  *147 -> *147
  *133 -> *133
  *48 -> *48
  *161 -> *161
  *210 -> *210
  *211 -> *211
  *155 -> *155
  *156 -> *156
  *212 -> *212
  *213 -> *213
  else -> *21
}
$start_release -> {
  *65 *65 -> *125
  *88 *88 -> *42
  else -> *125
}
$f_timestamp -> {
  *88 -> *214
  *125 -> *215
  *10 -> *216
  *42 -> *214
  *65 -> *215
  else -> *214
}
Select_[$ptr]$int -> {
  *216 *13 -> 696
  *215 *13 -> 695
  *217 *13 -> -2935
  *219 *13 -> 91
  *214 *13 -> 696
  *217 *112 -> 958
  *214 *112 -> 695
  *219 *112 -> 101
  *216 *112 -> 697
  *215 *112 -> 695
  else -> 695
}
$inv2 -> {
  *65 *65 *13 *93 -> true
  *88 *88 *112 *93 -> true
  else -> true
}
$unchecked -> {
  *31 4294967296 -> 0
  *83 18446744073709551616 -> 0
  *31 -1 -> 4294967295
  *83 -1 -> 18446744073709551615
  *109 -10000 -> -10000
  *83 0 -> 0
  *83 -7722 -> 0
  *83 361 -> 361
  *83 296 -> 296
  *83 1920 -> 1920
  *83 -2062 -> 9569
  *83 9569 -> 9569
  *83 -1768 -> 711
  *83 711 -> 711
  else -> 0
}
$is_unwrapped -> {
  *65 *88 *13 -> true
  *88 *10 *112 -> true
  else -> true
}
$mutable -> {
  *10 *13 -> true
  *88 *13 -> true
  *10 *112 -> true
  else -> true
}
$is_primitive -> {
  *90 -> true
  *141 -> true
  *109 -> true
  *127 -> true
  *119 -> true
  *40 -> true
  *31 -> true
  *83 -> true
  *44 -> true
  *77 -> true
  *52 -> true
  *96 -> true
  *91 -> true
  *17 -> true
  *3 -> true
  *47 -> false
  *33 -> false
  *62 -> true
  *32 -> true
  *60 -> true
  *28 -> true
  *29 -> true
  *142 -> false
  *140 -> false
  *135 -> true
  *61 -> true
  *93 -> false
  *120 -> false
  *5 -> true
  *46 -> true
  *154 -> true
  *143 -> true
  *9 -> true
  *118 -> true
  *152 -> true
  *72 -> true
  *121 -> false
  else -> true
}
$as_field_with_type -> {
  *21 *109 -> *21
  *147 *5 -> *147
  *133 *5 -> *133
  *48 *109 -> *48
  *161 *96 -> *161
  *165 *142 -> *165
  *167 *140 -> *167
  *210 *60 -> *210
  *211 *60 -> *211
  *155 *60 -> *155
  *156 *60 -> *156
  *212 *60 -> *212
  *213 *60 -> *213
  *157 *93 -> *157
  else -> *21
}
$is -> {
  *13 *93 -> true
  *112 *93 -> true
  else -> true
}
$post_unwrap -> {
  *65 *88 -> true
  *88 *10 -> true
  else -> true
}
$roots -> {
  *10 -> *230
  *65 -> *231
  *88 -> *232
  else -> *230
}
$invok_state -> {
  *65 -> true
  *88 -> true
  *10 -> true
  else -> true
}
$is_sequential_field -> {
  *210 -> true
  *211 -> true
  *212 -> true
  *21 -> true
  *213 -> true
  *147 -> true
  *133 -> true
  *48 -> true
  *161 -> true
  *155 -> false
  else -> true
}
$is_math_type -> {
  *91 -> true
  *17 -> true
  *3 -> true
  *62 -> true
  *32 -> true
  *60 -> true
  *28 -> true
  *29 -> true
  *135 -> true
  *61 -> true
  else -> true
}
$file_name_is -> {
  2 *25 -> true
  1 *68 -> true
  else -> true
}
$unchk_add -> {
  *83 0 0 -> 0
  *83 18446744073709557687 -18446744073709565409 -> 0
  *83 361 0 -> 361
  *83 296 0 -> 296
  *83 1920 0 -> 1920
  *83 18446744073709556475 -18446744073709558537 -> 9569
  *83 9569 0 -> 9569
  *83 18446744073709556247 -18446744073709558015 -> 711
  *83 711 0 -> 711
  else -> 0
}
$full_stop -> {
  *65 -> true
  *88 -> true
  *10 -> true
  else -> true
}
$writes_at -> {
  695 -> *124
  else -> *124
}
$call_transition -> {
  *65 *88 -> true
  *88 *10 -> true
  else -> true
}
$set_cardinality -> {
  *84 -> 0
  else -> 0
}
$is_claimable -> {
  *47 -> true
  *33 -> false
  *142 -> false
  *140 -> false
  *93 -> false
  *120 -> false
  *90 -> false
  *141 -> false
  *109 -> false
  *127 -> false
  *119 -> false
  *40 -> false
  *31 -> false
  *83 -> false
  *44 -> false
  *77 -> false
  *52 -> false
  *96 -> false
  *91 -> false
  *17 -> false
  *3 -> false
  *62 -> false
  *32 -> false
  *60 -> false
  *28 -> false
  *29 -> false
  *135 -> false
  *61 -> false
  *46 -> false
  *154 -> false
  *143 -> false
  *9 -> false
  *118 -> false
  *152 -> false
  *72 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *21 -> true
  *147 -> true
  *133 -> true
  *48 -> true
  *165 -> true
  *167 -> true
  *161 -> true
  *210 -> true
  *211 -> true
  *155 -> true
  *156 -> true
  *212 -> true
  *213 -> true
  *157 -> true
  else -> true
}
$wrapped -> {
  *65 *13 *93 -> true
  *88 *112 *93 -> true
  else -> true
}
$top_writable -> {
  *65 695 *13 -> true
  *88 695 *112 -> true
  else -> true
}
$f_closed -> {
  *10 -> *160
  *65 -> *158
  *88 -> *159
  else -> *160
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$ptr]$bool -> {
  *158 *13 -> true
  *159 *13 -> false
  *159 *112 -> true
  *158 *112 -> true
  *160 *112 -> false
  *160 *13 -> false
  else -> true
}
$field_kind -> {
  *21 -> *81
  *147 -> *81
  *133 -> *81
  *48 -> *81
  *161 -> *110
  *165 -> *110
  *167 -> *110
  *210 -> *6
  *211 -> *6
  *155 -> *6
  *156 -> *6
  *212 -> *6
  *213 -> *6
  *157 -> *110
  else -> *6
}
Select_[$field][$ptr]$int -> {
  *324 *21 -> *217
  *324 *212 -> *219
  else -> *217
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *165 -> *165
  *167 -> *167
  *157 -> *157
  else -> *165
}
$phys_ptr_cast -> {
  *53 *93 -> *13
  *134 *93 -> *112
  *13 *93 -> *13
  *112 *93 -> *112
  *176 *109 -> *176
  else -> *13
}
Store_[$ptr]$int -> {
  *215 *13 696 -> *214
  *214 *112 697 -> *216
  else -> *214
}
$prim_emb -> {
  *176 -> *13
  else -> *13
}
$vs_state -> {
  *67 -> *325
  else -> *325
}
$trans_call_transition -> {
  *65 *88 -> true
  *65 *10 -> true
  *88 *10 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *121 -> *56
  *90 -> *24
  *141 -> *113
  *109 -> *95
  *127 -> *20
  *119 -> *64
  *40 -> *74
  *31 -> *97
  *83 -> *58
  *96 -> *137
  *52 -> *76
  *44 -> *63
  *77 -> *26
  *91 -> *111
  *17 -> *138
  *3 -> *98
  *47 -> *123
  *62 -> *36
  *32 -> *145
  *60 -> *59
  *28 -> *37
  *33 -> *130
  *29 -> *102
  *30 -> *153
  *148 -> *11
  *142 -> *69
  *140 -> *2
  *135 -> *86
  *61 -> *131
  *93 -> *71
  *120 -> *43
  *46 -> *150
  *154 -> *78
  *143 -> *70
  *9 -> *79
  *118 -> *39
  *152 -> *144
  *72 -> *45
  *5 -> *99
  else -> *56
}
$instantiate_int -> {
  -2935 -> true
  91 -> true
  101 -> true
  958 -> true
  else -> true
}
$unchk_sub -> {
  *109 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *51 -> *165
  *57 -> *167
  *12 -> *165
  *122 -> *163
  *108 -> *161
  *176 -> *21
  *53 -> *170
  *13 -> *157
  *134 -> *173
  *112 -> *157
  else -> *165
}
$heap -> {
  *10 -> *324
  *65 -> *324
  *88 -> *324
  else -> *324
}
$f_owns -> {
  *47 -> *210
  *33 -> *211
  *142 -> *155
  *140 -> *156
  *93 -> *212
  *120 -> *213
  else -> *210
}
$field_type -> {
  *163 -> *47
  *21 -> *109
  *147 -> *5
  *133 -> *5
  *48 -> *109
  *165 -> *142
  *167 -> *140
  *161 -> *96
  *210 -> *60
  *211 -> *60
  *155 -> *60
  *156 -> *60
  *212 -> *60
  *213 -> *60
  *157 -> *93
  else -> *60
}
$has_field_at0 -> {
  *93 *21 -> true
  *120 *147 -> true
  else -> true
}
$function_entry -> {
  *65 -> true
  else -> true
}
$good_state_ext -> {
  *149 *65 -> true
  *146 *88 -> true
  *80 *10 -> true
  else -> true
}
$f_owner -> {
  *88 -> *327
  *125 -> *327
  *10 -> *327
  *42 -> *327
  *65 -> *327
  else -> *327
}
$type_project_0 -> {
  *5 -> *93
  else -> *93
}
Select_[$ptr]$ptr -> {
  *327 *13 -> *51
  *231 *13 -> *13
  *232 *13 -> *13
  *327 *112 -> *51
  *232 *112 -> *112
  *231 *112 -> *112
  *230 *13 -> *13
  *230 *112 -> *112
  else -> *13
}
$type_branch -> {
  *90 -> *22
  *141 -> *22
  *109 -> *22
  *127 -> *22
  *119 -> *22
  *40 -> *22
  *31 -> *22
  *83 -> *22
  *44 -> *22
  *77 -> *22
  *52 -> *22
  *96 -> *22
  *91 -> *22
  *17 -> *22
  *3 -> *22
  *47 -> *22
  *33 -> *22
  *62 -> *22
  *32 -> *22
  *60 -> *22
  *28 -> *22
  *29 -> *22
  *142 -> *22
  *140 -> *22
  *135 -> *22
  *61 -> *22
  *93 -> *22
  *120 -> *22
  *46 -> *22
  *154 -> *22
  *143 -> *22
  *9 -> *22
  *118 -> *22
  *152 -> *22
  *72 -> *22
  *5 -> *85
  else -> *22
}
$set_in_pos -> {
  *13 *158 -> true
  *112 *159 -> true
  *112 *158 -> true
  else -> true
}
$in_range_t -> {
  *31 4294967296 -> false
  *31 0 -> true
  *83 18446744073709551616 -> false
  *83 0 -> true
  *31 -1 -> false
  *31 4294967295 -> true
  *83 -1 -> false
  *83 18446744073709551615 -> true
  *109 -10000 -> true
  *83 -7722 -> false
  *83 361 -> true
  *83 296 -> true
  *83 1920 -> true
  *83 -2062 -> false
  *83 9569 -> true
  *109 -2935 -> true
  *83 -1768 -> false
  *83 711 -> true
  *109 958 -> true
  else -> true
}
$set_eq -> {
  *84 *84 -> true
  else -> true
}
$spec_ptr_cast -> {
  *51 *142 -> *51
  *57 *140 -> *57
  *12 *142 -> *12
  else -> *51
}
$maybe_emb -> {
  *13 -> *13
  *112 -> *112
  else -> *13
}
$is_union_type -> {
  *93 -> false
  *120 -> false
  else -> false
}
$field_parent_type -> {
  *21 -> *93
  *147 -> *120
  *133 -> *120
  *48 -> *120
  *165 -> *142
  *167 -> *140
  *161 -> *121
  *210 -> *47
  *211 -> *33
  *155 -> *142
  *156 -> *140
  *212 -> *93
  *213 -> *120
  *157 -> *93
  else -> *120
}
$sizeof -> {
  *90 -> 1
  *141 -> 2
  *109 -> 4
  *127 -> 8
  *119 -> 1
  *40 -> 2
  *31 -> 4
  *83 -> 8
  *44 -> 4
  *77 -> 8
  *52 -> 1
  *96 -> 1
  *91 -> 1
  *17 -> 1
  *3 -> 1
  *47 -> 1
  *33 -> 1
  *62 -> 1
  *32 -> 1
  *60 -> 1
  *28 -> 1
  *29 -> 1
  *142 -> 1
  *140 -> 1
  *135 -> 1
  *61 -> 1
  *93 -> 4
  *120 -> 24
  *46 -> 8
  *154 -> 8
  *143 -> 8
  *9 -> 8
  *118 -> 8
  *152 -> 8
  *72 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *210 -> true
  *211 -> true
  *155 -> true
  *156 -> true
  *212 -> true
  *213 -> true
  *21 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *51 -> true
  *57 -> true
  *12 -> true
  *13 -> false
  else -> true
}
$is_fnptr_type -> {
  *46 -> true
  *154 -> true
  *143 -> true
  *9 -> true
  *118 -> true
  *152 -> true
  *72 -> true
  else -> true
}
$f_root -> {
  *96 -> *161
  *142 -> *165
  *140 -> *167
  *93 -> *157
  else -> *161
}
$owns -> {
  *65 *13 -> *84
  *88 *112 -> *84
  *88 *13 -> *84
  *10 *112 -> *84
  else -> *84
}
$pre_static_unwrap -> {
  *65 -> true
  *88 -> true
  else -> true
}
$int_to_ptrset -> {
  91 -> *84
  101 -> *84
  else -> *84
}
$is_span_sequential -> {
  *93 -> true
  *120 -> true
  else -> true
}
$good_state -> {
  *325 -> true
  *65 -> true
  *88 -> true
  *125 -> false
  *10 -> true
  *42 -> false
  else -> true
}
$typemap -> {
  *327 -> *328
  else -> *328
}
$field_offset -> {
  *21 -> 0
  *147 -> 0
  *133 -> 8
  *48 -> 16
  *163 -> -18446744073709565409
  *165 -> 0
  *167 -> 0
  *161 -> 0
  *170 -> -18446744073709558537
  *157 -> 0
  *173 -> -18446744073709558015
  else -> 0
}
$base -> {
  *108 -> 0
  *51 -> 361
  *57 -> 296
  *12 -> 1920
  *122 -> 18446744073709557687
  *53 -> 18446744073709556475
  *13 -> 9569
  *134 -> 18446744073709556247
  *112 -> 711
  *176 -> 9569
  else -> 9569
}
$as_in_range_t -> {
  *90 -> *90
  *141 -> *141
  *109 -> *109
  *127 -> *127
  *119 -> *119
  *40 -> *40
  *31 -> *31
  *83 -> *83
  *32 -> *32
  else -> *90
}
$field_arr_root -> {
  *21 -> *21
  *147 -> *147
  *133 -> *133
  *48 -> *48
  *161 -> *161
  *165 -> *165
  *167 -> *167
  *210 -> *210
  *211 -> *211
  *155 -> *155
  *156 -> *156
  *212 -> *212
  *213 -> *213
  *157 -> *157
  else -> *21
}
*** STATE <initial>
  $s -> *65
  $cev_pc -> **$cev_pc
  P#a -> *53
  P#b -> *134
  P#amount -> 2147480714
  owns#14 -> **owns#14
  staticWrapState#12 -> **staticWrapState#12
  prestate#11 -> **prestate#11
  owns#10 -> **owns#10
  staticWrapState#8 -> **staticWrapState#8
  prestate#7 -> **prestate#7
  prestate#6 -> **prestate#6
  prestate#4 -> **prestate#4
  owns#5 -> **owns#5
  prestate#3 -> **prestate#3
  prestate#1 -> **prestate#1
  owns#2 -> **owns#2
  #wrTime$1^13.1 -> 695
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(13,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#2 -> *84
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#1 -> *65
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
  prestate#3 -> *65
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#3 -> *125
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,5)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *88
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#5 -> *84
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#4 -> *88
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  prestate#6 -> *88
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#6 -> *42
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *10
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,5)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,17)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@39344 -> true
%lbl%@39544 -> true
%lbl%@39326 -> true
%lbl%+38915 -> true
%lbl%+1480 -> true
%lbl%@39054 -> true
$position_marker -> true
%lbl%@39073 -> true
%lbl%@39680 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
^$#_onexit_t#4 -> *9
$s@1@@0 -> *10
unique-value!79 -> *11
$untyped_owner_owner -> *12
call914formal@o@0 -> *13
call1128formal@p@0 -> *13
$max.u4 -> 4294967295
#tok$2^41.3 -> *15
$fk_ref_cnt -> *16
^^field -> *17
$max.u2 -> 65535
loop_entered -> *19
unique-value!59 -> *20
Account.amount -> *21
$ctype_flat -> *22
$fk_as_array_first -> *23
unique-value!56 -> *24
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *25
unique-value!67 -> *26
#tok$1^26.5 -> *27
^$#state_t -> *28
^$#struct -> *29
^$#seq_version -> *30
^^u4 -> *31
^^nat -> *32
^$#volatile_version_t -> *33
$ctype_blob -> *34
$max.i2 -> 32767
unique-value!72 -> *36
unique-value!75 -> *37
P#amount -> -2147476312
unique-value!90 -> *39
^^u2 -> *40
$min.i8 -> -9223372036854775808
prestate#6@1 -> *42
unique-value!85 -> *43
^^f4 -> *44
unique-value!92 -> *45
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *46
^^claim -> *47
AccountGroup.total -> *48
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *50
$me -> *51
^^bool -> *52
P#a -> *53
$max.i1 -> 127
cev_parameter -> *55
unique-value!55 -> *56
$untyped_owner -> *57
unique-value!63 -> *58
unique-value!74 -> *59
^$#ptrset -> *60
^$##club -> *61
^^mathint -> *62
unique-value!66 -> *63
unique-value!60 -> *64
prestate#1@0 -> *65
prestate#3@0 -> *65
$s -> *65
$arch_ptr_size -> 8
$struct_zero -> *67
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *68
unique-value!80 -> *69
unique-value!88 -> *70
unique-value!84 -> *71
^$#_invalid_parameter_handler#7 -> *72
$min.i1 -> -128
unique-value!61 -> *74
conditional_moment -> *75
unique-value!65 -> *76
^^f8 -> *77
unique-value!87 -> *78
unique-value!89 -> *79
#tok$1^23.16 -> *80
$fk_base -> *81
#tok$1^28.5 -> *82
^^u8 -> *83
$arch_ptr_type -> *83
$set_empty -> *84
owns#2@0 -> *84
owns#5@0 -> *84
lambda@13 -> *84
$ctype_ptr -> *85
unique-value!82 -> *86
$fk_vol_version -> *87
prestate#6@0 -> *88
$s@0@@0 -> *88
prestate#4@0 -> *88
$max.u1 -> 255
^^i1 -> *90
^^object -> *91
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *93
$ctype_spec_ptr -> *94
unique-value!58 -> *95
^^void -> *96
unique-value!62 -> *97
unique-value!70 -> *98
unique-value!93 -> *99
$fk_active_option -> *100
$ctype_array -> *101
unique-value!77 -> *102
cev_local -> *103
#tok$2^47.3 -> *104
@MV_state_const -> 74
$ctype_map -> *106
loop_register -> *107
$null -> *108
^^i4 -> *109
$fk_allocation_root -> *110
unique-value!68 -> *111
call1050formal@o@0 -> *112
unique-value!57 -> *113
loop_exited -> *114
$min.i2 -> -32768
cev_implicit -> *116
#tok$1^6.1 -> *117
$s@2@@0 -> *118
^$#account2.c..36689#5 -> *119
^^u1 -> *120
^AccountGroup -> *121
$primitive_emb_type -> *122
$no_claim -> *123
unique-value!71 -> *124
lambda@20 -> *125
prestate#3@1 -> *126
took_else_branch -> *127
^^i8 -> *128
took_then_branch -> *129
#tok$2^42.3 -> *130
unique-value!76 -> *131
unique-value!83 -> *132
#wrTime$1^13.1 -> 695
AccountGroup.creditCard -> *134
P#b -> *135
^$##thread_id -> *136
$min.i4 -> -2147483648
unique-value!64 -> *138
unique-value!69 -> *139
#tok$2^46.3 -> *140
$untyped_owner_type -> *141
^^i2 -> *142
^$#thread_id_t -> *143
^$#account2.c..36585#3 -> *144
unique-value!91 -> *145
unique-value!73 -> *146
#tok$1^22.5 -> *147
AccountGroup.giro -> *148
^$#vol_version -> *149
#tok$1^13.1 -> *150
unique-value!86 -> *151
call1128formal@v@0 -> 2147470669
#tok$2^25.1 -> *153
^$#_purecall_handler#6 -> *154
unique-value!78 -> *155
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *156
$cev_pc -> **$cev_pc
owns#14 -> **owns#14
staticWrapState#12 -> **staticWrapState#12
prestate#11 -> **prestate#11
owns#10 -> **owns#10
staticWrapState#8 -> **staticWrapState#8
prestate#7 -> **prestate#7
prestate#6 -> **prestate#6
prestate#4 -> **prestate#4
owns#5 -> **owns#5
prestate#3 -> **prestate#3
prestate#1 -> **prestate#1
owns#2 -> **owns#2
#stackframe -> **#stackframe
$thread_local -> {
  *10 *13 -> true
  else -> true
}
$ptr_to -> {
  *93 -> *5
  else -> *5
}
$is_volatile_field -> {
  *157 -> true
  *158 -> true
  else -> true
}
$is_phys_field -> {
  *21 -> true
  *148 -> true
  *134 -> true
  *48 -> true
  *159 -> true
  else -> true
}
$owner -> {
  *65 *13 -> *51
  *88 *13 -> *51
  *88 *112 -> *51
  *10 *13 -> *51
  *10 *112 -> *51
  *118 *112 -> *51
  else -> *51
}
Store_[$ptr]$bool -> {
  *160 *13 false -> *161
  *161 *112 false -> *162
  else -> *161
}
$ptr -> {
  *163 0 -> *108
  *165 18446744073709552659 -> *123
  *167 361 -> *51
  *169 296 -> *57
  *167 2769 -> *12
  *172 18446744073709556692 -> *53
  *159 878 -> *13
  *175 18446744073709560913 -> *135
  *159 711 -> *112
  *21 878 -> *178
  *21 711 -> *179
  else -> *108
}
$closed -> {
  *65 *13 -> true
  *88 *13 -> false
  *88 *112 -> true
  *10 *112 -> false
  *10 *13 -> false
  *118 *112 -> false
  else -> false
}
$dot -> {
  *13 *21 -> *178
  *112 *21 -> *179
  else -> *178
}
$addr0 -> {
  *108 -> 0
  *123 -> 0
  *51 -> 361
  *57 -> 296
  *12 -> 2769
  *53 -> 878
  *13 -> 878
  *135 -> 711
  *112 -> 711
  *178 -> 878
  *179 -> 711
  else -> 878
}
$is_proper -> {
  *51 -> true
  *57 -> true
  *12 -> true
  *178 -> true
  *13 -> true
  *112 -> true
  *179 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *13 -> true
  *112 -> true
  *178 -> true
  *179 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  74 11 -> true
  74 12 -> true
  74 13 -> true
  74 14 -> true
  74 15 -> true
  74 16 -> true
  74 17 -> true
  74 18 -> true
  74 19 -> true
  74 20 -> true
  74 21 -> true
  74 22 -> true
  74 23 -> true
  74 24 -> true
  74 25 -> true
  74 26 -> true
  74 27 -> true
  74 28 -> true
  74 29 -> true
  74 30 -> true
  74 31 -> true
  74 32 -> true
  74 33 -> true
  74 34 -> true
  74 35 -> true
  74 36 -> true
  else -> true
}
$current_timestamp -> {
  *65 -> 695
  *88 -> 696
  *126 -> 696
  *10 -> 697
  *42 -> 697
  *118 -> 698
  else -> 696
}
$as_primitive_field -> {
  *21 -> *21
  *148 -> *148
  *134 -> *134
  *48 -> *48
  *163 -> *163
  *218 -> *218
  *219 -> *219
  *157 -> *157
  *158 -> *158
  *220 -> *220
  *221 -> *221
  else -> *21
}
$start_release -> {
  *65 *65 -> *126
  *88 *88 -> *42
  else -> *126
}
$f_timestamp -> {
  *88 -> *222
  *126 -> *223
  *10 -> *224
  *42 -> *222
  *118 -> *224
  *65 -> *223
  else -> *222
}
Select_[$ptr]$int -> {
  *224 *13 -> 696
  *225 *112 -> -7337
  *223 *13 -> 695
  *227 *13 -> -5643
  *229 *13 -> 96
  *222 *13 -> 696
  *227 *112 -> -7337
  *222 *112 -> 695
  *229 *112 -> 106
  *224 *112 -> 697
  *225 *13 -> 2147470669
  *223 *112 -> 695
  else -> 695
}
$inv2 -> {
  *65 *65 *13 *93 -> true
  *88 *88 *112 *93 -> true
  else -> true
}
$unchecked -> {
  *31 4294967296 -> 0
  *83 18446744073709551616 -> 0
  *31 -1 -> 4294967295
  *83 -1 -> 18446744073709551615
  *109 -10000 -> -10000
  *83 0 -> 0
  *83 -3721 -> 0
  *83 361 -> 361
  *83 296 -> 296
  *83 2769 -> 2769
  *83 -9004 -> 878
  *83 878 -> 878
  *83 -8297 -> 711
  *83 711 -> 711
  else -> 0
}
$is_unwrapped -> {
  *65 *88 *13 -> true
  *88 *10 *112 -> true
  else -> true
}
$mutable -> {
  *10 *13 -> true
  *118 *112 -> true
  *88 *13 -> true
  *10 *112 -> true
  else -> true
}
$is_primitive -> {
  *90 -> true
  *142 -> true
  *109 -> true
  *128 -> true
  *120 -> true
  *40 -> true
  *31 -> true
  *83 -> true
  *44 -> true
  *77 -> true
  *52 -> true
  *96 -> true
  *91 -> true
  *17 -> true
  *3 -> true
  *47 -> false
  *33 -> false
  *62 -> true
  *32 -> true
  *60 -> true
  *28 -> true
  *29 -> true
  *143 -> false
  *141 -> false
  *136 -> true
  *61 -> true
  *93 -> false
  *121 -> false
  *5 -> true
  *46 -> true
  *156 -> true
  *144 -> true
  *9 -> true
  *119 -> true
  *154 -> true
  *72 -> true
  *122 -> false
  else -> true
}
$as_field_with_type -> {
  *21 *109 -> *21
  *148 *5 -> *148
  *134 *5 -> *134
  *48 *109 -> *48
  *163 *96 -> *163
  *167 *143 -> *167
  *169 *141 -> *169
  *218 *60 -> *218
  *219 *60 -> *219
  *157 *60 -> *157
  *158 *60 -> *158
  *220 *60 -> *220
  *221 *60 -> *221
  *159 *93 -> *159
  else -> *21
}
$is -> {
  *13 *93 -> true
  *112 *93 -> true
  else -> true
}
$post_unwrap -> {
  *65 *88 -> true
  *88 *10 -> true
  else -> true
}
$roots -> {
  *10 -> *239
  *118 -> *239
  *65 -> *240
  *88 -> *241
  else -> *239
}
$invok_state -> {
  *65 -> true
  *88 -> true
  *10 -> true
  *118 -> true
  else -> true
}
$is_sequential_field -> {
  *218 -> true
  *219 -> true
  *220 -> true
  *21 -> true
  *221 -> true
  *148 -> true
  *134 -> true
  *48 -> true
  *163 -> true
  *157 -> false
  else -> true
}
$is_math_type -> {
  *91 -> true
  *17 -> true
  *3 -> true
  *62 -> true
  *32 -> true
  *60 -> true
  *28 -> true
  *29 -> true
  *136 -> true
  *61 -> true
  else -> true
}
$file_name_is -> {
  2 *25 -> true
  1 *68 -> true
  else -> true
}
$unchk_add -> {
  *83 0 0 -> 0
  *83 18446744073709552659 -18446744073709556380 -> 0
  *83 361 0 -> 361
  *83 296 0 -> 296
  *83 2769 0 -> 2769
  *83 18446744073709556692 -18446744073709565696 -> 878
  *83 878 0 -> 878
  *83 18446744073709560913 -18446744073709569210 -> 711
  *83 711 0 -> 711
  else -> 0
}
$full_stop -> {
  *65 -> true
  *88 -> true
  *10 -> true
  *118 -> true
  else -> true
}
$writes_at -> {
  695 -> *125
  else -> *125
}
$call_transition -> {
  *10 *118 -> true
  *65 *88 -> true
  *88 *10 -> true
  else -> true
}
$set_cardinality -> {
  *84 -> 0
  else -> 0
}
$is_claimable -> {
  *47 -> true
  *33 -> false
  *143 -> false
  *141 -> false
  *93 -> false
  *121 -> false
  *90 -> false
  *142 -> false
  *109 -> false
  *128 -> false
  *120 -> false
  *40 -> false
  *31 -> false
  *83 -> false
  *44 -> false
  *77 -> false
  *52 -> false
  *96 -> false
  *91 -> false
  *17 -> false
  *3 -> false
  *62 -> false
  *32 -> false
  *60 -> false
  *28 -> false
  *29 -> false
  *136 -> false
  *61 -> false
  *46 -> false
  *156 -> false
  *144 -> false
  *9 -> false
  *119 -> false
  *154 -> false
  *72 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *21 -> true
  *148 -> true
  *134 -> true
  *48 -> true
  *167 -> true
  *169 -> true
  *163 -> true
  *218 -> true
  *219 -> true
  *157 -> true
  *158 -> true
  *220 -> true
  *221 -> true
  *159 -> true
  else -> true
}
$wrapped -> {
  *65 *13 *93 -> true
  *88 *112 *93 -> true
  else -> true
}
$top_writable -> {
  *65 695 *13 -> true
  *88 695 *112 -> true
  else -> true
}
$f_closed -> {
  *10 -> *162
  *118 -> *162
  *65 -> *160
  *88 -> *161
  else -> *162
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *329 *21 -> *225
  *330 *21 -> *227
  *330 *220 -> *229
  else -> *225
}
$field_kind -> {
  *21 -> *81
  *148 -> *81
  *134 -> *81
  *48 -> *81
  *163 -> *110
  *167 -> *110
  *169 -> *110
  *218 -> *6
  *219 -> *6
  *157 -> *6
  *158 -> *6
  *220 -> *6
  *221 -> *6
  *159 -> *110
  else -> *6
}
Select_[$ptr]$bool -> {
  *160 *13 -> true
  *161 *13 -> false
  *161 *112 -> true
  *160 *112 -> true
  *162 *112 -> false
  *162 *13 -> false
  else -> true
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *167 -> *167
  *169 -> *169
  *159 -> *159
  else -> *167
}
$phys_ptr_cast -> {
  *53 *93 -> *13
  *135 *93 -> *112
  *13 *93 -> *13
  *112 *93 -> *112
  *178 *109 -> *178
  *179 *109 -> *179
  else -> *13
}
Store_[$ptr]$int -> {
  *223 *13 696 -> *222
  *222 *112 697 -> *224
  *227 *13 2147470669 -> *225
  else -> *222
}
$prim_emb -> {
  *178 -> *13
  *179 -> *112
  else -> *13
}
$vs_state -> {
  *67 -> *331
  else -> *331
}
$trans_call_transition -> {
  *65 *88 -> true
  *65 *10 -> true
  *88 *10 -> true
  *65 *118 -> true
  *88 *118 -> true
  *10 *118 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *122 -> *56
  *90 -> *24
  *142 -> *113
  *109 -> *95
  *128 -> *20
  *120 -> *64
  *40 -> *74
  *31 -> *97
  *83 -> *58
  *96 -> *138
  *52 -> *76
  *44 -> *63
  *77 -> *26
  *91 -> *111
  *17 -> *139
  *3 -> *98
  *47 -> *124
  *62 -> *36
  *32 -> *146
  *60 -> *59
  *28 -> *37
  *33 -> *131
  *29 -> *102
  *30 -> *155
  *149 -> *11
  *143 -> *69
  *141 -> *2
  *136 -> *86
  *61 -> *132
  *93 -> *71
  *121 -> *43
  *46 -> *151
  *156 -> *78
  *144 -> *70
  *9 -> *79
  *119 -> *39
  *154 -> *145
  *72 -> *45
  *5 -> *99
  else -> *56
}
$instantiate_int -> {
  -5643 -> true
  96 -> true
  106 -> true
  -7337 -> true
  else -> true
}
$unchk_sub -> {
  *109 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *51 -> *167
  *57 -> *169
  *12 -> *167
  *123 -> *165
  *108 -> *163
  *178 -> *21
  *179 -> *21
  *53 -> *172
  *13 -> *159
  *135 -> *175
  *112 -> *159
  else -> *167
}
$heap -> {
  *10 -> *330
  *118 -> *329
  *65 -> *330
  *88 -> *330
  else -> *330
}
$f_owns -> {
  *47 -> *218
  *33 -> *219
  *143 -> *157
  *141 -> *158
  *93 -> *220
  *121 -> *221
  else -> *218
}
$field_type -> {
  *165 -> *47
  *21 -> *109
  *148 -> *5
  *134 -> *5
  *48 -> *109
  *167 -> *143
  *169 -> *141
  *163 -> *96
  *218 -> *60
  *219 -> *60
  *157 -> *60
  *158 -> *60
  *220 -> *60
  *221 -> *60
  *159 -> *93
  else -> *60
}
$has_field_at0 -> {
  *93 *21 -> true
  *121 *148 -> true
  else -> true
}
$function_entry -> {
  *65 -> true
  else -> true
}
$good_state_ext -> {
  *150 *65 -> true
  *147 *88 -> true
  *80 *10 -> true
  *50 *118 -> true
  else -> true
}
$f_owner -> {
  *88 -> *333
  *126 -> *333
  *10 -> *333
  *42 -> *333
  *118 -> *333
  *65 -> *333
  else -> *333
}
$type_project_0 -> {
  *5 -> *93
  else -> *93
}
Store_[$field][$ptr]$int -> {
  *330 *21 *225 -> *329
  else -> *329
}
$type_branch -> {
  *90 -> *22
  *142 -> *22
  *109 -> *22
  *128 -> *22
  *120 -> *22
  *40 -> *22
  *31 -> *22
  *83 -> *22
  *44 -> *22
  *77 -> *22
  *52 -> *22
  *96 -> *22
  *91 -> *22
  *17 -> *22
  *3 -> *22
  *47 -> *22
  *33 -> *22
  *62 -> *22
  *32 -> *22
  *60 -> *22
  *28 -> *22
  *29 -> *22
  *143 -> *22
  *141 -> *22
  *136 -> *22
  *61 -> *22
  *93 -> *22
  *121 -> *22
  *46 -> *22
  *156 -> *22
  *144 -> *22
  *9 -> *22
  *119 -> *22
  *154 -> *22
  *72 -> *22
  *5 -> *85
  else -> *22
}
Select_[$ptr]$ptr -> {
  *333 *13 -> *51
  *240 *13 -> *13
  *241 *13 -> *13
  *333 *112 -> *51
  *241 *112 -> *112
  *240 *112 -> *112
  *239 *13 -> *13
  *239 *112 -> *112
  else -> *13
}
$in_range_t -> {
  *31 4294967296 -> false
  *31 0 -> true
  *83 18446744073709551616 -> false
  *83 0 -> true
  *31 -1 -> false
  *31 4294967295 -> true
  *83 -1 -> false
  *83 18446744073709551615 -> true
  *109 -10000 -> true
  *83 -3721 -> false
  *83 361 -> true
  *83 296 -> true
  *83 2769 -> true
  *83 -9004 -> false
  *83 878 -> true
  *109 -5643 -> true
  *83 -8297 -> false
  *83 711 -> true
  *109 -7337 -> true
  *109 2147470669 -> true
  else -> true
}
$set_in_pos -> {
  *13 *160 -> true
  *112 *161 -> true
  *112 *160 -> true
  else -> true
}
$spec_ptr_cast -> {
  *51 *143 -> *51
  *57 *141 -> *57
  *12 *143 -> *12
  else -> *51
}
$set_eq -> {
  *84 *84 -> true
  else -> true
}
$is_union_type -> {
  *93 -> false
  *121 -> false
  else -> false
}
$field_parent_type -> {
  *21 -> *93
  *148 -> *121
  *134 -> *121
  *48 -> *121
  *167 -> *143
  *169 -> *141
  *163 -> *122
  *218 -> *47
  *219 -> *33
  *157 -> *143
  *158 -> *141
  *220 -> *93
  *221 -> *121
  *159 -> *93
  else -> *121
}
$sizeof -> {
  *90 -> 1
  *142 -> 2
  *109 -> 4
  *128 -> 8
  *120 -> 1
  *40 -> 2
  *31 -> 4
  *83 -> 8
  *44 -> 4
  *77 -> 8
  *52 -> 1
  *96 -> 1
  *91 -> 1
  *17 -> 1
  *3 -> 1
  *47 -> 1
  *33 -> 1
  *62 -> 1
  *32 -> 1
  *60 -> 1
  *28 -> 1
  *29 -> 1
  *143 -> 1
  *141 -> 1
  *136 -> 1
  *61 -> 1
  *93 -> 4
  *121 -> 24
  *46 -> 8
  *156 -> 8
  *144 -> 8
  *9 -> 8
  *119 -> 8
  *154 -> 8
  *72 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *218 -> true
  *219 -> true
  *157 -> true
  *158 -> true
  *220 -> true
  *221 -> true
  *21 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *51 -> true
  *57 -> true
  *12 -> true
  *13 -> false
  *112 -> false
  else -> true
}
$is_fnptr_type -> {
  *46 -> true
  *156 -> true
  *144 -> true
  *9 -> true
  *119 -> true
  *154 -> true
  *72 -> true
  else -> true
}
$f_root -> {
  *96 -> *163
  *143 -> *167
  *141 -> *169
  *93 -> *159
  else -> *163
}
$owns -> {
  *65 *13 -> *84
  *88 *112 -> *84
  *88 *13 -> *84
  *10 *112 -> *84
  else -> *84
}
$pre_static_unwrap -> {
  *65 -> true
  *88 -> true
  else -> true
}
$int_to_ptrset -> {
  96 -> *84
  106 -> *84
  else -> *84
}
$maybe_emb -> {
  *13 -> *13
  *112 -> *112
  else -> *13
}
$is_span_sequential -> {
  *93 -> true
  *121 -> true
  else -> true
}
$good_state -> {
  *331 -> true
  *65 -> true
  *88 -> true
  *126 -> false
  *10 -> true
  *42 -> false
  *118 -> true
  else -> true
}
$typemap -> {
  *333 -> *334
  else -> *334
}
$field_offset -> {
  *21 -> 0
  *148 -> 0
  *134 -> 8
  *48 -> 16
  *165 -> -18446744073709556380
  *167 -> 0
  *169 -> 0
  *163 -> 0
  *172 -> -18446744073709565696
  *159 -> 0
  *175 -> -18446744073709569210
  else -> 0
}
$base -> {
  *108 -> 0
  *51 -> 361
  *57 -> 296
  *12 -> 2769
  *123 -> 18446744073709552659
  *53 -> 18446744073709556692
  *13 -> 878
  *135 -> 18446744073709560913
  *112 -> 711
  *178 -> 878
  *179 -> 711
  else -> 878
}
$as_in_range_t -> {
  *90 -> *90
  *142 -> *142
  *109 -> *109
  *128 -> *128
  *120 -> *120
  *40 -> *40
  *31 -> *31
  *83 -> *83
  *32 -> *32
  else -> *90
}
$field_arr_root -> {
  *21 -> *21
  *148 -> *148
  *134 -> *134
  *48 -> *48
  *163 -> *163
  *167 -> *167
  *169 -> *169
  *218 -> *218
  *219 -> *219
  *157 -> *157
  *158 -> *158
  *220 -> *220
  *221 -> *221
  *159 -> *159
  else -> *21
}
*** STATE <initial>
  $s -> *65
  $cev_pc -> **$cev_pc
  P#a -> *53
  P#b -> *135
  P#amount -> -2147476312
  owns#14 -> **owns#14
  staticWrapState#12 -> **staticWrapState#12
  prestate#11 -> **prestate#11
  owns#10 -> **owns#10
  staticWrapState#8 -> **staticWrapState#8
  prestate#7 -> **prestate#7
  prestate#6 -> **prestate#6
  prestate#4 -> **prestate#4
  owns#5 -> **owns#5
  prestate#3 -> **prestate#3
  prestate#1 -> **prestate#1
  owns#2 -> **owns#2
  #wrTime$1^13.1 -> 695
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(13,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#2 -> *84
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#1 -> *65
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
  prestate#3 -> *65
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#3 -> *126
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,5)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *88
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#5 -> *84
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#4 -> *88
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  prestate#6 -> *88
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#6 -> *42
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *10
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,5)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,5)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,5)
  $s -> *118
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,17)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@39344 -> true
%lbl%@39544 -> true
%lbl%@39326 -> true
%lbl%+38915 -> true
%lbl%+1480 -> true
%lbl%@39680 -> true
%lbl%@39054 -> true
$position_marker -> true
%lbl%@39073 -> true
%lbl%@39988 -> false
call1198formal@p@0 -> *2
call1276formal@o@0 -> *2
call1050formal@o@0 -> *2
unique-value!81 -> *3
^^null_type -> *4
$max.i8 -> 9223372036854775807
#distTp1 -> *6
$fk_owns -> *7
cev_global -> *8
$fk_emb_array -> *9
call1198formal@v@0 -> -2147483648
$min.i4 -> -2147483648
^$#_onexit_t#4 -> *11
$s@1@@0 -> *12
unique-value!79 -> *13
$untyped_owner_owner -> *14
call914formal@o@0 -> *15
call1128formal@p@0 -> *15
$max.u4 -> 4294967295
#tok$2^41.3 -> *17
prestate#7@0 -> *18
$s@3 -> *18
staticWrapState#8@0 -> *18
$fk_ref_cnt -> *19
^^field -> *20
$max.u2 -> 65535
loop_entered -> *22
unique-value!59 -> *23
Account.amount -> *24
$ctype_flat -> *25
$fk_as_array_first -> *26
unique-value!56 -> *27
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *28
unique-value!67 -> *29
#tok$1^26.5 -> *30
^$#state_t -> *31
^$#struct -> *32
^$#seq_version -> *33
^^u4 -> *34
^^nat -> *35
^$#volatile_version_t -> *36
$ctype_blob -> *37
$max.i2 -> 32767
unique-value!72 -> *39
unique-value!75 -> *40
P#amount -> -2147473649
unique-value!90 -> *42
^^u2 -> *43
$min.i8 -> -9223372036854775808
prestate#6@1 -> *45
unique-value!85 -> *46
^^f4 -> *47
unique-value!92 -> *48
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *49
^^claim -> *50
AccountGroup.total -> *51
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *53
$me -> *54
^^bool -> *55
P#a -> *56
$max.i1 -> 127
cev_parameter -> *58
unique-value!55 -> *59
$untyped_owner -> *60
unique-value!63 -> *61
unique-value!74 -> *62
^$#ptrset -> *63
owns#10@0 -> *64
$set_empty -> *64
owns#2@0 -> *64
owns#5@0 -> *64
lambda@13 -> *64
^$##club -> *65
^^mathint -> *66
unique-value!66 -> *67
unique-value!60 -> *68
prestate#1@0 -> *69
prestate#3@0 -> *69
$s -> *69
$arch_ptr_size -> 8
$struct_zero -> *71
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *72
unique-value!80 -> *73
unique-value!88 -> *74
unique-value!84 -> *75
^$#_invalid_parameter_handler#7 -> *76
$min.i1 -> -128
unique-value!61 -> *78
conditional_moment -> *79
unique-value!65 -> *80
^^f8 -> *81
unique-value!87 -> *82
unique-value!89 -> *83
#tok$1^23.16 -> *84
$fk_base -> *85
#tok$1^28.5 -> *86
^^u8 -> *87
$arch_ptr_type -> *87
$ctype_ptr -> *88
unique-value!82 -> *89
$fk_vol_version -> *90
prestate#6@0 -> *91
$s@0@@0 -> *91
prestate#4@0 -> *91
$max.u1 -> 255
^^i1 -> *93
^^object -> *94
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *96
$ctype_spec_ptr -> *97
unique-value!58 -> *98
^^void -> *99
unique-value!62 -> *100
unique-value!70 -> *101
unique-value!93 -> *102
$fk_active_option -> *103
$ctype_array -> *104
unique-value!77 -> *105
cev_local -> *106
#tok$2^47.3 -> *107
@MV_state_const -> 74
$ctype_map -> *109
loop_register -> *110
$null -> *111
^^i4 -> *112
$fk_allocation_root -> *113
unique-value!68 -> *114
unique-value!57 -> *115
loop_exited -> *116
$min.i2 -> -32768
cev_implicit -> *118
#tok$1^6.1 -> *119
$s@2@@0 -> *120
^$#account2.c..36689#5 -> *121
^^u1 -> *122
^AccountGroup -> *123
$primitive_emb_type -> *124
$no_claim -> *125
unique-value!71 -> *126
lambda@20 -> *127
prestate#3@1 -> *128
$s@4 -> *129
took_else_branch -> *130
^^i8 -> *131
took_then_branch -> *132
#tok$2^42.3 -> *133
unique-value!76 -> *134
unique-value!83 -> *135
#wrTime$1^13.1 -> 695
AccountGroup.creditCard -> *137
P#b -> *138
^$##thread_id -> *139
unique-value!64 -> *140
unique-value!69 -> *141
#tok$2^46.3 -> *142
$untyped_owner_type -> *143
^^i2 -> *144
^$#thread_id_t -> *145
^$#account2.c..36585#3 -> *146
unique-value!91 -> *147
unique-value!73 -> *148
#tok$1^22.5 -> *149
AccountGroup.giro -> *150
^$#vol_version -> *151
#tok$1^13.1 -> *152
unique-value!86 -> *153
call1128formal@v@0 -> 2147463649
#tok$2^25.1 -> *155
^$#_purecall_handler#6 -> *156
unique-value!78 -> *157
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *158
$cev_pc -> **$cev_pc
owns#14 -> **owns#14
staticWrapState#12 -> **staticWrapState#12
prestate#11 -> **prestate#11
owns#10 -> **owns#10
staticWrapState#8 -> **staticWrapState#8
prestate#7 -> **prestate#7
prestate#6 -> **prestate#6
prestate#4 -> **prestate#4
owns#5 -> **owns#5
prestate#3 -> **prestate#3
prestate#1 -> **prestate#1
owns#2 -> **owns#2
#stackframe -> **#stackframe
$thread_local -> {
  *12 *15 -> true
  *120 *2 -> true
  else -> true
}
$ptr_to -> {
  *96 -> *6
  else -> *6
}
$is_volatile_field -> {
  *159 -> true
  *160 -> true
  else -> true
}
$is_phys_field -> {
  *24 -> true
  *150 -> true
  *137 -> true
  *51 -> true
  *161 -> true
  else -> true
}
$owner -> {
  *69 *15 -> *54
  *91 *15 -> *54
  *91 *2 -> *54
  *12 *15 -> *54
  *12 *2 -> *54
  *120 *2 -> *54
  *18 *2 -> *54
  *129 *2 -> *54
  else -> *54
}
Store_[$ptr]$bool -> {
  *162 *15 false -> *163
  *163 *2 false -> *164
  *164 *2 true -> *165
  else -> *163
}
$ptr -> {
  *166 0 -> *111
  *168 18446744073709557126 -> *125
  *170 361 -> *54
  *172 296 -> *60
  *170 4330 -> *14
  *175 18446744073709561304 -> *56
  *161 6159 -> *15
  *178 18446744073709552186 -> *138
  *161 711 -> *2
  *24 6159 -> *181
  *24 711 -> *182
  else -> *111
}
$closed -> {
  *69 *15 -> true
  *91 *15 -> false
  *91 *2 -> true
  *12 *2 -> false
  *12 *15 -> false
  *120 *2 -> false
  *18 *2 -> false
  *129 *2 -> true
  else -> false
}
$dot -> {
  *15 *24 -> *181
  *2 *24 -> *182
  else -> *181
}
$addr0 -> {
  *111 -> 0
  *125 -> 0
  *54 -> 361
  *60 -> 296
  *14 -> 4330
  *56 -> 6159
  *15 -> 6159
  *138 -> 711
  *2 -> 711
  *181 -> 6159
  *182 -> 711
  else -> 6159
}
$is_proper -> {
  *54 -> true
  *60 -> true
  *14 -> true
  *181 -> true
  *15 -> true
  *2 -> true
  *182 -> true
  else -> true
}
$is_wrapped -> {
  *18 *129 *2 *64 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *15 -> true
  *2 -> true
  *181 -> true
  *182 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  74 11 -> true
  74 12 -> true
  74 13 -> true
  74 14 -> true
  74 15 -> true
  74 16 -> true
  74 17 -> true
  74 18 -> true
  74 19 -> true
  74 20 -> true
  74 21 -> true
  74 22 -> true
  74 23 -> true
  74 24 -> true
  74 25 -> true
  74 26 -> true
  74 27 -> true
  74 28 -> true
  74 29 -> true
  74 30 -> true
  74 31 -> true
  74 32 -> true
  74 33 -> true
  74 34 -> true
  74 35 -> true
  74 36 -> true
  74 37 -> true
  74 38 -> true
  74 39 -> true
  74 40 -> true
  74 41 -> true
  74 42 -> true
  74 43 -> true
  74 44 -> true
  74 45 -> true
  74 46 -> true
  74 47 -> true
  74 48 -> true
  74 49 -> true
  else -> true
}
$current_timestamp -> {
  *69 -> 695
  *91 -> 696
  *128 -> 696
  *12 -> 697
  *45 -> 697
  *120 -> 698
  *18 -> 699
  *129 -> 700
  else -> 696
}
$as_primitive_field -> {
  *24 -> *24
  *150 -> *150
  *137 -> *137
  *51 -> *51
  *166 -> *166
  *236 -> *236
  *237 -> *237
  *159 -> *159
  *160 -> *160
  *238 -> *238
  *239 -> *239
  else -> *24
}
$start_release -> {
  *69 *69 -> *128
  *91 *91 -> *45
  else -> *128
}
$f_timestamp -> {
  *91 -> *240
  *128 -> *241
  *12 -> *242
  *45 -> *240
  *120 -> *242
  *18 -> *242
  *69 -> *241
  *129 -> *243
  else -> *242
}
Select_[$ptr]$int -> {
  *242 *15 -> 696
  *244 *2 -> -9999
  *241 *15 -> 695
  *246 *15 -> -10000
  *248 *15 -> 100
  *240 *15 -> 696
  *246 *2 -> -9999
  *240 *2 -> 695
  *242 *2 -> 697
  *244 *15 -> 2147463649
  *250 *2 -> -2147483648
  *251 *2 -> 87
  *243 *2 -> 700
  *248 *2 -> 116
  *241 *2 -> 695
  else -> 695
}
$inv2 -> {
  *69 *69 *15 *96 -> true
  *91 *91 *2 *96 -> true
  else -> true
}
$unchecked -> {
  *34 4294967296 -> 0
  *87 18446744073709551616 -> 0
  *34 -1 -> 4294967295
  *87 -1 -> 18446744073709551615
  *112 -10000 -> -10000
  *87 0 -> 0
  *87 -5806 -> 0
  *87 361 -> 361
  *87 296 -> 296
  *87 4330 -> 4330
  *87 -4289 -> 6159
  *87 6159 -> 6159
  *87 -4988 -> 711
  *87 711 -> 711
  else -> 0
}
$is_unwrapped -> {
  *69 *91 *15 -> true
  *91 *12 *2 -> true
  else -> true
}
$mutable -> {
  *12 *15 -> true
  *120 *2 -> true
  *18 *2 -> true
  *91 *15 -> true
  *12 *2 -> true
  else -> true
}
$is_primitive -> {
  *93 -> true
  *144 -> true
  *112 -> true
  *131 -> true
  *122 -> true
  *43 -> true
  *34 -> true
  *87 -> true
  *47 -> true
  *81 -> true
  *55 -> true
  *99 -> true
  *94 -> true
  *20 -> true
  *4 -> true
  *50 -> false
  *36 -> false
  *66 -> true
  *35 -> true
  *63 -> true
  *31 -> true
  *32 -> true
  *145 -> false
  *143 -> false
  *139 -> true
  *65 -> true
  *96 -> false
  *123 -> false
  *6 -> true
  *49 -> true
  *158 -> true
  *146 -> true
  *11 -> true
  *121 -> true
  *156 -> true
  *76 -> true
  *124 -> false
  else -> true
}
$as_field_with_type -> {
  *24 *112 -> *24
  *150 *6 -> *150
  *137 *6 -> *137
  *51 *112 -> *51
  *166 *99 -> *166
  *170 *145 -> *170
  *172 *143 -> *172
  *236 *63 -> *236
  *237 *63 -> *237
  *159 *63 -> *159
  *160 *63 -> *160
  *238 *63 -> *238
  *239 *63 -> *239
  *161 *96 -> *161
  else -> *24
}
$is -> {
  *15 *96 -> true
  *2 *96 -> true
  else -> true
}
$post_unwrap -> {
  *69 *91 -> true
  *91 *12 -> true
  else -> true
}
$roots -> {
  *12 -> *260
  *120 -> *260
  *18 -> *260
  *69 -> *261
  *91 -> *262
  *129 -> *263
  else -> *260
}
$invok_state -> {
  *69 -> true
  *91 -> true
  *12 -> true
  *120 -> true
  *18 -> true
  else -> true
}
$is_sequential_field -> {
  *236 -> true
  *237 -> true
  *238 -> true
  *24 -> true
  *239 -> true
  *150 -> true
  *137 -> true
  *51 -> true
  *166 -> true
  *159 -> false
  else -> true
}
$is_math_type -> {
  *94 -> true
  *20 -> true
  *4 -> true
  *66 -> true
  *35 -> true
  *63 -> true
  *31 -> true
  *32 -> true
  *139 -> true
  *65 -> true
  else -> true
}
$file_name_is -> {
  2 *28 -> true
  1 *72 -> true
  else -> true
}
$unchk_add -> {
  *87 0 0 -> 0
  *87 18446744073709557126 -18446744073709562932 -> 0
  *87 361 0 -> 361
  *87 296 0 -> 296
  *87 4330 0 -> 4330
  *87 18446744073709561304 -18446744073709565593 -> 6159
  *87 6159 0 -> 6159
  *87 18446744073709552186 -18446744073709557174 -> 711
  *87 711 0 -> 711
  else -> 0
}
$full_stop -> {
  *69 -> true
  *91 -> true
  *12 -> true
  *120 -> true
  *18 -> true
  else -> true
}
$writes_at -> {
  695 -> *127
  else -> *127
}
$call_transition -> {
  *12 *120 -> true
  *120 *18 -> true
  *69 *91 -> true
  *91 *12 -> true
  *18 *129 -> true
  else -> true
}
$set_cardinality -> {
  *64 -> 0
  else -> 0
}
$is_claimable -> {
  *50 -> true
  *36 -> false
  *145 -> false
  *143 -> false
  *96 -> false
  *123 -> false
  *93 -> false
  *144 -> false
  *112 -> false
  *131 -> false
  *122 -> false
  *43 -> false
  *34 -> false
  *87 -> false
  *47 -> false
  *81 -> false
  *55 -> false
  *99 -> false
  *94 -> false
  *20 -> false
  *4 -> false
  *66 -> false
  *35 -> false
  *63 -> false
  *31 -> false
  *32 -> false
  *139 -> false
  *65 -> false
  *49 -> false
  *158 -> false
  *146 -> false
  *11 -> false
  *121 -> false
  *156 -> false
  *76 -> false
  *6 -> false
  else -> false
}
$is_proper_field -> {
  *24 -> true
  *150 -> true
  *137 -> true
  *51 -> true
  *170 -> true
  *172 -> true
  *166 -> true
  *236 -> true
  *237 -> true
  *159 -> true
  *160 -> true
  *238 -> true
  *239 -> true
  *161 -> true
  else -> true
}
$wrapped -> {
  *69 *15 *96 -> true
  *91 *2 *96 -> true
  *129 *2 *96 -> true
  else -> true
}
$top_writable -> {
  *69 695 *15 -> true
  *91 695 *2 -> true
  *18 695 *2 -> true
  else -> true
}
$f_closed -> {
  *12 -> *164
  *120 -> *164
  *18 -> *164
  *69 -> *162
  *91 -> *163
  *129 -> *165
  else -> *164
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *338 *24 -> *244
  *339 *238 -> *248
  *340 *24 -> *250
  *341 *24 -> *246
  *341 *238 -> *248
  *339 *24 -> *250
  *340 *238 -> *251
  *338 *238 -> *248
  else -> *248
}
$field_kind -> {
  *24 -> *85
  *150 -> *85
  *137 -> *85
  *51 -> *85
  *166 -> *113
  *170 -> *113
  *172 -> *113
  *236 -> *7
  *237 -> *7
  *159 -> *7
  *160 -> *7
  *238 -> *7
  *239 -> *7
  *161 -> *113
  else -> *7
}
Select_[$ptr]$bool -> {
  *162 *15 -> true
  *163 *15 -> false
  *163 *2 -> true
  *162 *2 -> true
  *164 *2 -> false
  *164 *15 -> false
  *165 *2 -> true
  else -> true
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *170 -> *170
  *172 -> *172
  *161 -> *161
  else -> *170
}
$pre_static_wrap -> {
  *18 -> true
  else -> true
}
$phys_ptr_cast -> {
  *56 *96 -> *15
  *138 *96 -> *2
  *15 *96 -> *15
  *2 *96 -> *2
  *181 *112 -> *181
  *182 *112 -> *182
  else -> *15
}
Store_[$ptr]$int -> {
  *241 *15 696 -> *240
  *240 *2 697 -> *242
  *246 *15 2147463649 -> *244
  *244 *2 -2147483648 -> *250
  *248 *2 87 -> *251
  *242 *2 700 -> *243
  else -> *240
}
$prim_emb -> {
  *181 -> *15
  *182 -> *2
  else -> *15
}
$vs_state -> {
  *71 -> *342
  else -> *342
}
$trans_call_transition -> {
  *69 *91 -> true
  *69 *12 -> true
  *91 *12 -> true
  *69 *120 -> true
  *91 *120 -> true
  *12 *120 -> true
  *69 *18 -> true
  *91 *18 -> true
  *12 *18 -> true
  *120 *18 -> true
  *69 *129 -> true
  *91 *129 -> true
  *12 *129 -> true
  *120 *129 -> true
  *18 *129 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *124 -> *59
  *93 -> *27
  *144 -> *115
  *112 -> *98
  *131 -> *23
  *122 -> *68
  *43 -> *78
  *34 -> *100
  *87 -> *61
  *99 -> *140
  *55 -> *80
  *47 -> *67
  *81 -> *29
  *94 -> *114
  *20 -> *141
  *4 -> *101
  *50 -> *126
  *66 -> *39
  *35 -> *148
  *63 -> *62
  *31 -> *40
  *36 -> *134
  *32 -> *105
  *33 -> *157
  *151 -> *13
  *145 -> *73
  *143 -> *3
  *139 -> *89
  *65 -> *135
  *96 -> *75
  *123 -> *46
  *49 -> *153
  *158 -> *82
  *146 -> *74
  *11 -> *83
  *121 -> *42
  *156 -> *147
  *76 -> *48
  *6 -> *102
  else -> *59
}
$instantiate_int -> {
  -10000 -> true
  100 -> true
  -9999 -> true
  116 -> true
  -2147483648 -> true
  else -> true
}
$unchk_sub -> {
  *112 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *54 -> *170
  *60 -> *172
  *14 -> *170
  *125 -> *168
  *111 -> *166
  *181 -> *24
  *182 -> *24
  *56 -> *175
  *15 -> *161
  *138 -> *178
  *2 -> *161
  else -> *170
}
$heap -> {
  *12 -> *341
  *120 -> *338
  *18 -> *339
  *129 -> *340
  *69 -> *341
  *91 -> *341
  else -> *341
}
$f_owns -> {
  *50 -> *236
  *36 -> *237
  *145 -> *159
  *143 -> *160
  *96 -> *238
  *123 -> *239
  else -> *236
}
$field_type -> {
  *168 -> *50
  *24 -> *112
  *150 -> *6
  *137 -> *6
  *51 -> *112
  *170 -> *145
  *172 -> *143
  *166 -> *99
  *236 -> *63
  *237 -> *63
  *159 -> *63
  *160 -> *63
  *238 -> *63
  *239 -> *63
  *161 -> *96
  else -> *63
}
$has_field_at0 -> {
  *96 *24 -> true
  *123 *150 -> true
  else -> true
}
$function_entry -> {
  *69 -> true
  else -> true
}
$good_state_ext -> {
  *152 *69 -> true
  *149 *91 -> true
  *84 *12 -> true
  *53 *120 -> true
  *30 *18 -> true
  *84 *129 -> true
  else -> true
}
$f_owner -> {
  *91 -> *344
  *128 -> *344
  *12 -> *344
  *45 -> *344
  *120 -> *344
  *18 -> *344
  *129 -> *344
  *69 -> *344
  else -> *344
}
$type_project_0 -> {
  *6 -> *96
  else -> *96
}
Store_[$field][$ptr]$int -> {
  *341 *24 *244 -> *338
  *338 *24 *250 -> *339
  *339 *238 *251 -> *340
  else -> *338
}
$type_branch -> {
  *93 -> *25
  *144 -> *25
  *112 -> *25
  *131 -> *25
  *122 -> *25
  *43 -> *25
  *34 -> *25
  *87 -> *25
  *47 -> *25
  *81 -> *25
  *55 -> *25
  *99 -> *25
  *94 -> *25
  *20 -> *25
  *4 -> *25
  *50 -> *25
  *36 -> *25
  *66 -> *25
  *35 -> *25
  *63 -> *25
  *31 -> *25
  *32 -> *25
  *145 -> *25
  *143 -> *25
  *139 -> *25
  *65 -> *25
  *96 -> *25
  *123 -> *25
  *49 -> *25
  *158 -> *25
  *146 -> *25
  *11 -> *25
  *121 -> *25
  *156 -> *25
  *76 -> *25
  *6 -> *88
  else -> *25
}
$ptrset_to_int -> {
  *64 -> 87
  else -> 87
}
$in_range_t -> {
  *34 4294967296 -> false
  *34 0 -> true
  *87 18446744073709551616 -> false
  *87 0 -> true
  *34 -1 -> false
  *34 4294967295 -> true
  *87 -1 -> false
  *87 18446744073709551615 -> true
  *112 -10000 -> true
  *87 -5806 -> false
  *87 361 -> true
  *87 296 -> true
  *87 4330 -> true
  *87 -4289 -> false
  *87 6159 -> true
  *87 -4988 -> false
  *87 711 -> true
  *112 -9999 -> true
  *112 2147463649 -> true
  *112 -2147483648 -> true
  else -> true
}
Select_[$ptr]$ptr -> {
  *344 *15 -> *54
  *261 *15 -> *15
  *262 *15 -> *15
  *344 *2 -> *54
  *262 *2 -> *2
  *261 *2 -> *2
  *260 *15 -> *15
  *260 *2 -> *2
  *263 *15 -> *15
  *263 *2 -> *2
  else -> *15
}
$spec_ptr_cast -> {
  *54 *145 -> *54
  *60 *143 -> *60
  *14 *145 -> *14
  else -> *54
}
$set_in_pos -> {
  *15 *162 -> true
  *2 *163 -> true
  *2 *162 -> true
  *2 *165 -> true
  else -> true
}
$is_union_type -> {
  *96 -> false
  *123 -> false
  else -> false
}
$field_parent_type -> {
  *24 -> *96
  *150 -> *123
  *137 -> *123
  *51 -> *123
  *170 -> *145
  *172 -> *143
  *166 -> *124
  *236 -> *50
  *237 -> *36
  *159 -> *145
  *160 -> *143
  *238 -> *96
  *239 -> *123
  *161 -> *96
  else -> *123
}
$sizeof -> {
  *93 -> 1
  *144 -> 2
  *112 -> 4
  *131 -> 8
  *122 -> 1
  *43 -> 2
  *34 -> 4
  *87 -> 8
  *47 -> 4
  *81 -> 8
  *55 -> 1
  *99 -> 1
  *94 -> 1
  *20 -> 1
  *4 -> 1
  *50 -> 1
  *36 -> 1
  *66 -> 1
  *35 -> 1
  *63 -> 1
  *31 -> 1
  *32 -> 1
  *145 -> 1
  *143 -> 1
  *139 -> 1
  *65 -> 1
  *96 -> 4
  *123 -> 24
  *49 -> 8
  *158 -> 8
  *146 -> 8
  *11 -> 8
  *121 -> 8
  *156 -> 8
  *76 -> 8
  *6 -> 8
  else -> 1
}
$is_ghost_field -> {
  *236 -> true
  *237 -> true
  *159 -> true
  *160 -> true
  *238 -> true
  *239 -> true
  *24 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *54 -> true
  *60 -> true
  *14 -> true
  *15 -> false
  *2 -> false
  else -> true
}
$is_fnptr_type -> {
  *49 -> true
  *158 -> true
  *146 -> true
  *11 -> true
  *121 -> true
  *156 -> true
  *76 -> true
  else -> true
}
$f_root -> {
  *99 -> *166
  *145 -> *170
  *143 -> *172
  *96 -> *161
  else -> *166
}
$owns -> {
  *69 *15 -> *64
  *91 *2 -> *64
  *129 *2 -> *64
  *91 *15 -> *64
  *12 *2 -> *64
  else -> *64
}
$pre_static_unwrap -> {
  *69 -> true
  *91 -> true
  else -> true
}
$set_eq -> {
  *64 *64 -> true
  else -> true
}
$int_to_ptrset -> {
  100 -> *64
  116 -> *64
  87 -> *64
  else -> *64
}
$maybe_emb -> {
  *15 -> *15
  *2 -> *2
  else -> *15
}
$is_span_sequential -> {
  *96 -> true
  *123 -> true
  else -> true
}
$good_state -> {
  *342 -> true
  *69 -> true
  *91 -> true
  *128 -> false
  *12 -> true
  *45 -> false
  *120 -> true
  *18 -> true
  *129 -> true
  else -> true
}
$typemap -> {
  *344 -> *345
  else -> *345
}
$field_offset -> {
  *24 -> 0
  *150 -> 0
  *137 -> 8
  *51 -> 16
  *168 -> -18446744073709562932
  *170 -> 0
  *172 -> 0
  *166 -> 0
  *175 -> -18446744073709565593
  *161 -> 0
  *178 -> -18446744073709557174
  else -> 0
}
$base -> {
  *111 -> 0
  *54 -> 361
  *60 -> 296
  *14 -> 4330
  *125 -> 18446744073709557126
  *56 -> 18446744073709561304
  *15 -> 6159
  *138 -> 18446744073709552186
  *2 -> 711
  *181 -> 6159
  *182 -> 711
  else -> 6159
}
$as_in_range_t -> {
  *93 -> *93
  *144 -> *144
  *112 -> *112
  *131 -> *131
  *122 -> *122
  *43 -> *43
  *34 -> *34
  *87 -> *87
  *35 -> *35
  else -> *93
}
$field_arr_root -> {
  *24 -> *24
  *150 -> *150
  *137 -> *137
  *51 -> *51
  *166 -> *166
  *170 -> *170
  *172 -> *172
  *236 -> *236
  *237 -> *237
  *159 -> *159
  *160 -> *160
  *238 -> *238
  *239 -> *239
  *161 -> *161
  else -> *24
}
*** STATE <initial>
  $s -> *69
  $cev_pc -> **$cev_pc
  P#a -> *56
  P#b -> *138
  P#amount -> -2147473649
  owns#14 -> **owns#14
  staticWrapState#12 -> **staticWrapState#12
  prestate#11 -> **prestate#11
  owns#10 -> **owns#10
  staticWrapState#8 -> **staticWrapState#8
  prestate#7 -> **prestate#7
  prestate#6 -> **prestate#6
  prestate#4 -> **prestate#4
  owns#5 -> **owns#5
  prestate#3 -> **prestate#3
  prestate#1 -> **prestate#1
  owns#2 -> **owns#2
  #wrTime$1^13.1 -> 695
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(13,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#2 -> *64
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#1 -> *69
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
  prestate#3 -> *69
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#3 -> *128
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,5)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *91
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#5 -> *64
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#4 -> *91
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  prestate#6 -> *91
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#6 -> *45
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *12
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,5)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,5)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,5)
  $s -> *120
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,5)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *18
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#7 -> *18
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  staticWrapState#8 -> *18
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  owns#10 -> *64
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  $s -> *129
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@39344 -> true
%lbl%@39544 -> true
%lbl%@39326 -> true
%lbl%@39988 -> true
%lbl%+38915 -> true
%lbl%+1480 -> true
%lbl%@39680 -> true
%lbl%@39054 -> true
$position_marker -> true
%lbl%@39073 -> true
%lbl%@40010 -> false
call1198formal@p@0 -> *2
call1276formal@o@0 -> *2
call1050formal@o@0 -> *2
unique-value!81 -> *3
^^null_type -> *4
$max.i8 -> 9223372036854775807
#distTp1 -> *6
$fk_owns -> *7
$fk_emb_array -> *8
cev_global -> *9
call1198formal@v@0 -> 25001
^$#_onexit_t#4 -> *11
$s@1@@0 -> *12
unique-value!79 -> *13
$untyped_owner_owner -> *14
call914formal@o@0 -> *15
call1128formal@p@0 -> *15
$max.u4 -> 4294967295
#tok$2^41.3 -> *17
prestate#7@0 -> *18
$s@3 -> *18
staticWrapState#8@0 -> *18
$fk_ref_cnt -> *19
^^field -> *20
$max.u2 -> 65535
loop_entered -> *22
unique-value!59 -> *23
Account.amount -> *24
$ctype_flat -> *25
$fk_as_array_first -> *26
unique-value!56 -> *27
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *28
unique-value!67 -> *29
#tok$1^26.5 -> *30
^$#state_t -> *31
^$#struct -> *32
^$#seq_version -> *33
^^u4 -> *34
^^nat -> *35
^$#volatile_version_t -> *36
$ctype_blob -> *37
$max.i2 -> 32767
unique-value!72 -> *39
unique-value!75 -> *40
P#amount -> 34098
unique-value!90 -> *42
^^u2 -> *43
$min.i8 -> -9223372036854775808
prestate#6@1 -> *45
unique-value!85 -> *46
^^f4 -> *47
unique-value!92 -> *48
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *49
^^claim -> *50
AccountGroup.total -> *51
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *53
$me -> *54
^^bool -> *55
P#a -> *56
$max.i1 -> 127
cev_parameter -> *58
unique-value!55 -> *59
$untyped_owner -> *60
unique-value!63 -> *61
unique-value!74 -> *62
^$#ptrset -> *63
owns#10@0 -> *64
$set_empty -> *64
owns#2@0 -> *64
owns#5@0 -> *64
lambda@13 -> *64
^$##club -> *65
^^mathint -> *66
unique-value!66 -> *67
unique-value!60 -> *68
prestate#1@0 -> *69
prestate#3@0 -> *69
$s -> *69
$arch_ptr_size -> 8
$struct_zero -> *71
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *72
unique-value!80 -> *73
unique-value!88 -> *74
unique-value!84 -> *75
^$#_invalid_parameter_handler#7 -> *76
$min.i1 -> -128
unique-value!61 -> *78
conditional_moment -> *79
unique-value!65 -> *80
^^f8 -> *81
unique-value!87 -> *82
unique-value!89 -> *83
#tok$1^23.16 -> *84
$fk_base -> *85
#tok$1^28.5 -> *86
^^u8 -> *87
$arch_ptr_type -> *87
$ctype_ptr -> *88
unique-value!82 -> *89
$fk_vol_version -> *90
prestate#6@0 -> *91
$s@0@@0 -> *91
prestate#4@0 -> *91
$max.u1 -> 255
^^i1 -> *93
^^object -> *94
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *96
$ctype_spec_ptr -> *97
unique-value!58 -> *98
^^void -> *99
unique-value!62 -> *100
unique-value!70 -> *101
unique-value!93 -> *102
$fk_active_option -> *103
$ctype_array -> *104
unique-value!77 -> *105
cev_local -> *106
#tok$2^47.3 -> *107
@MV_state_const -> 74
$ctype_map -> *109
loop_register -> *110
$null -> *111
^^i4 -> *112
$fk_allocation_root -> *113
unique-value!68 -> *114
unique-value!57 -> *115
loop_exited -> *116
$min.i2 -> -32768
cev_implicit -> *118
#tok$1^6.1 -> *119
$s@2@@0 -> *120
^$#account2.c..36689#5 -> *121
^^u1 -> *122
^AccountGroup -> *123
$primitive_emb_type -> *124
$no_claim -> *125
unique-value!71 -> *126
lambda@20 -> *127
prestate#3@1 -> *128
$s@4 -> *129
took_else_branch -> *130
^^i8 -> *131
took_then_branch -> *132
#tok$2^42.3 -> *133
unique-value!76 -> *134
unique-value!83 -> *135
#wrTime$1^13.1 -> 695
AccountGroup.creditCard -> *137
P#b -> *138
^$##thread_id -> *139
$min.i4 -> -2147483648
unique-value!64 -> *141
unique-value!69 -> *142
#tok$2^46.3 -> *143
$untyped_owner_type -> *144
^^i2 -> *145
^$#thread_id_t -> *146
^$#account2.c..36585#3 -> *147
unique-value!91 -> *148
unique-value!73 -> *149
#tok$1^22.5 -> *150
AccountGroup.giro -> *151
^$#vol_version -> *152
#tok$1^13.1 -> *153
unique-value!86 -> *154
call1128formal@v@0 -> -9098
#tok$2^25.1 -> *156
^$#_purecall_handler#6 -> *157
unique-value!78 -> *158
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *159
$cev_pc -> **$cev_pc
owns#14 -> **owns#14
staticWrapState#12 -> **staticWrapState#12
prestate#11 -> **prestate#11
owns#10 -> **owns#10
staticWrapState#8 -> **staticWrapState#8
prestate#7 -> **prestate#7
prestate#6 -> **prestate#6
prestate#4 -> **prestate#4
owns#5 -> **owns#5
prestate#3 -> **prestate#3
prestate#1 -> **prestate#1
owns#2 -> **owns#2
#stackframe -> **#stackframe
$thread_local -> {
  *12 *15 -> true
  *120 *2 -> true
  else -> true
}
$ptr_to -> {
  *96 -> *6
  else -> *6
}
$is_volatile_field -> {
  *160 -> true
  *161 -> true
  else -> true
}
$is_phys_field -> {
  *24 -> true
  *151 -> true
  *137 -> true
  *51 -> true
  *162 -> true
  else -> true
}
$owner -> {
  *69 *15 -> *54
  *91 *15 -> *54
  *91 *2 -> *54
  *12 *15 -> *54
  *12 *2 -> *54
  *120 *2 -> *54
  *18 *2 -> *54
  *129 *2 -> *54
  else -> *54
}
Store_[$ptr]$bool -> {
  *163 *15 false -> *164
  *164 *2 false -> *165
  *165 *2 true -> *166
  else -> *164
}
$ptr -> {
  *167 0 -> *111
  *169 18446744073709557126 -> *125
  *171 361 -> *54
  *173 296 -> *60
  *171 4330 -> *14
  *176 18446744073709561304 -> *56
  *162 6159 -> *15
  *179 18446744073709552186 -> *138
  *162 711 -> *2
  *24 6159 -> *182
  *24 711 -> *183
  else -> *111
}
$closed -> {
  *69 *15 -> true
  *91 *15 -> false
  *91 *2 -> true
  *12 *2 -> false
  *12 *15 -> false
  *120 *2 -> false
  *18 *2 -> false
  *129 *2 -> true
  else -> false
}
$dot -> {
  *15 *24 -> *182
  *2 *24 -> *183
  else -> *182
}
$addr0 -> {
  *111 -> 0
  *125 -> 0
  *54 -> 361
  *60 -> 296
  *14 -> 4330
  *56 -> 6159
  *15 -> 6159
  *138 -> 711
  *2 -> 711
  *182 -> 6159
  *183 -> 711
  else -> 6159
}
$is_proper -> {
  *54 -> true
  *60 -> true
  *14 -> true
  *182 -> true
  *15 -> true
  *2 -> true
  *183 -> true
  else -> true
}
$is_wrapped -> {
  *18 *129 *2 *64 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *15 -> true
  *2 -> true
  *182 -> true
  *183 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  74 11 -> true
  74 12 -> true
  74 13 -> true
  74 14 -> true
  74 15 -> true
  74 16 -> true
  74 17 -> true
  74 18 -> true
  74 19 -> true
  74 20 -> true
  74 21 -> true
  74 22 -> true
  74 23 -> true
  74 24 -> true
  74 25 -> true
  74 26 -> true
  74 27 -> true
  74 28 -> true
  74 29 -> true
  74 30 -> true
  74 31 -> true
  74 32 -> true
  74 33 -> true
  74 34 -> true
  74 35 -> true
  74 36 -> true
  74 37 -> true
  74 38 -> true
  74 39 -> true
  74 40 -> true
  74 41 -> true
  74 42 -> true
  74 43 -> true
  74 44 -> true
  74 45 -> true
  74 46 -> true
  74 47 -> true
  74 48 -> true
  74 49 -> true
  74 50 -> true
  else -> true
}
$current_timestamp -> {
  *69 -> 695
  *91 -> 696
  *128 -> 696
  *12 -> 697
  *45 -> 697
  *120 -> 698
  *18 -> 699
  *129 -> 700
  else -> 696
}
$as_primitive_field -> {
  *24 -> *24
  *151 -> *151
  *137 -> *137
  *51 -> *51
  *167 -> *167
  *238 -> *238
  *239 -> *239
  *160 -> *160
  *161 -> *161
  *240 -> *240
  *241 -> *241
  else -> *24
}
$start_release -> {
  *69 *69 -> *128
  *91 *91 -> *45
  else -> *128
}
$f_timestamp -> {
  *91 -> *242
  *128 -> *243
  *12 -> *244
  *45 -> *242
  *120 -> *244
  *18 -> *244
  *69 -> *243
  *129 -> *245
  else -> *244
}
Select_[$ptr]$int -> {
  *244 *15 -> 696
  *246 *2 -> -9097
  *243 *15 -> 695
  *248 *15 -> 25000
  *250 *15 -> 100
  *242 *15 -> 696
  *248 *2 -> -9097
  *242 *2 -> 695
  *250 *2 -> 110
  *244 *2 -> 697
  *246 *15 -> -9098
  *253 *2 -> 25001
  *254 *2 -> 87
  *245 *2 -> 700
  *243 *2 -> 695
  else -> 695
}
$inv2 -> {
  *69 *69 *15 *96 -> true
  *91 *91 *2 *96 -> true
  else -> true
}
$unchecked -> {
  *34 4294967296 -> 0
  *87 18446744073709551616 -> 0
  *34 -1 -> 4294967295
  *87 -1 -> 18446744073709551615
  *112 -10000 -> -10000
  *87 0 -> 0
  *87 -5806 -> 0
  *87 361 -> 361
  *87 296 -> 296
  *87 4330 -> 4330
  *87 -4289 -> 6159
  *87 6159 -> 6159
  *87 -4988 -> 711
  *87 711 -> 711
  else -> 0
}
$is_unwrapped -> {
  *69 *91 *15 -> true
  *91 *12 *2 -> true
  else -> true
}
$mutable -> {
  *12 *15 -> true
  *120 *2 -> true
  *18 *2 -> true
  *91 *15 -> true
  *12 *2 -> true
  else -> true
}
$is_primitive -> {
  *93 -> true
  *145 -> true
  *112 -> true
  *131 -> true
  *122 -> true
  *43 -> true
  *34 -> true
  *87 -> true
  *47 -> true
  *81 -> true
  *55 -> true
  *99 -> true
  *94 -> true
  *20 -> true
  *4 -> true
  *50 -> false
  *36 -> false
  *66 -> true
  *35 -> true
  *63 -> true
  *31 -> true
  *32 -> true
  *146 -> false
  *144 -> false
  *139 -> true
  *65 -> true
  *96 -> false
  *123 -> false
  *6 -> true
  *49 -> true
  *159 -> true
  *147 -> true
  *11 -> true
  *121 -> true
  *157 -> true
  *76 -> true
  *124 -> false
  else -> true
}
$as_field_with_type -> {
  *24 *112 -> *24
  *151 *6 -> *151
  *137 *6 -> *137
  *51 *112 -> *51
  *167 *99 -> *167
  *171 *146 -> *171
  *173 *144 -> *173
  *238 *63 -> *238
  *239 *63 -> *239
  *160 *63 -> *160
  *161 *63 -> *161
  *240 *63 -> *240
  *241 *63 -> *241
  *162 *96 -> *162
  else -> *24
}
$is -> {
  *15 *96 -> true
  *2 *96 -> true
  else -> true
}
$post_unwrap -> {
  *69 *91 -> true
  *91 *12 -> true
  else -> true
}
$roots -> {
  *12 -> *263
  *120 -> *263
  *18 -> *263
  *69 -> *264
  *91 -> *265
  *129 -> *266
  else -> *263
}
$invok_state -> {
  *69 -> true
  *91 -> true
  *12 -> true
  *120 -> true
  *18 -> true
  else -> true
}
$is_sequential_field -> {
  *238 -> true
  *239 -> true
  *240 -> true
  *24 -> true
  *241 -> true
  *151 -> true
  *137 -> true
  *51 -> true
  *167 -> true
  *160 -> false
  else -> true
}
$is_math_type -> {
  *94 -> true
  *20 -> true
  *4 -> true
  *66 -> true
  *35 -> true
  *63 -> true
  *31 -> true
  *32 -> true
  *139 -> true
  *65 -> true
  else -> true
}
$file_name_is -> {
  2 *28 -> true
  1 *72 -> true
  else -> true
}
$unchk_add -> {
  *87 0 0 -> 0
  *87 18446744073709557126 -18446744073709562932 -> 0
  *87 361 0 -> 361
  *87 296 0 -> 296
  *87 4330 0 -> 4330
  *87 18446744073709561304 -18446744073709565593 -> 6159
  *87 6159 0 -> 6159
  *87 18446744073709552186 -18446744073709557174 -> 711
  *87 711 0 -> 711
  else -> 0
}
$full_stop -> {
  *69 -> true
  *91 -> true
  *12 -> true
  *120 -> true
  *18 -> true
  else -> true
}
$writes_at -> {
  695 -> *127
  else -> *127
}
$call_transition -> {
  *12 *120 -> true
  *120 *18 -> true
  *69 *91 -> true
  *91 *12 -> true
  *18 *129 -> true
  else -> true
}
$set_cardinality -> {
  *64 -> 0
  else -> 0
}
$is_claimable -> {
  *50 -> true
  *36 -> false
  *146 -> false
  *144 -> false
  *96 -> false
  *123 -> false
  *93 -> false
  *145 -> false
  *112 -> false
  *131 -> false
  *122 -> false
  *43 -> false
  *34 -> false
  *87 -> false
  *47 -> false
  *81 -> false
  *55 -> false
  *99 -> false
  *94 -> false
  *20 -> false
  *4 -> false
  *66 -> false
  *35 -> false
  *63 -> false
  *31 -> false
  *32 -> false
  *139 -> false
  *65 -> false
  *49 -> false
  *159 -> false
  *147 -> false
  *11 -> false
  *121 -> false
  *157 -> false
  *76 -> false
  *6 -> false
  else -> false
}
$is_proper_field -> {
  *24 -> true
  *151 -> true
  *137 -> true
  *51 -> true
  *171 -> true
  *173 -> true
  *167 -> true
  *238 -> true
  *239 -> true
  *160 -> true
  *161 -> true
  *240 -> true
  *241 -> true
  *162 -> true
  else -> true
}
$wrapped -> {
  *69 *15 *96 -> true
  *91 *2 *96 -> true
  *129 *2 *96 -> true
  else -> true
}
$top_writable -> {
  *69 695 *15 -> true
  *91 695 *2 -> true
  *18 695 *2 -> true
  else -> true
}
$f_closed -> {
  *12 -> *165
  *120 -> *165
  *18 -> *165
  *69 -> *163
  *91 -> *164
  *129 -> *166
  else -> *165
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *340 *24 -> *246
  *341 *240 -> *250
  *342 *24 -> *253
  *343 *24 -> *248
  *343 *240 -> *250
  *341 *24 -> *253
  *340 *240 -> *250
  *342 *240 -> *254
  else -> *250
}
$field_kind -> {
  *24 -> *85
  *151 -> *85
  *137 -> *85
  *51 -> *85
  *167 -> *113
  *171 -> *113
  *173 -> *113
  *238 -> *7
  *239 -> *7
  *160 -> *7
  *161 -> *7
  *240 -> *7
  *241 -> *7
  *162 -> *113
  else -> *7
}
Select_[$ptr]$bool -> {
  *163 *15 -> true
  *164 *15 -> false
  *164 *2 -> true
  *163 *2 -> true
  *165 *2 -> false
  *165 *15 -> false
  *166 *2 -> true
  else -> true
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *171 -> *171
  *173 -> *173
  *162 -> *162
  else -> *171
}
$pre_static_wrap -> {
  *18 -> true
  else -> true
}
$phys_ptr_cast -> {
  *56 *96 -> *15
  *138 *96 -> *2
  *15 *96 -> *15
  *2 *96 -> *2
  *182 *112 -> *182
  *183 *112 -> *183
  else -> *15
}
Store_[$ptr]$int -> {
  *243 *15 696 -> *242
  *242 *2 697 -> *244
  *248 *15 -9098 -> *246
  *246 *2 25001 -> *253
  *250 *2 87 -> *254
  *244 *2 700 -> *245
  else -> *242
}
$prim_emb -> {
  *182 -> *15
  *183 -> *2
  else -> *15
}
$vs_state -> {
  *71 -> *344
  else -> *344
}
$trans_call_transition -> {
  *69 *91 -> true
  *69 *12 -> true
  *91 *12 -> true
  *69 *120 -> true
  *91 *120 -> true
  *12 *120 -> true
  *69 *18 -> true
  *91 *18 -> true
  *12 *18 -> true
  *120 *18 -> true
  *69 *129 -> true
  *91 *129 -> true
  *12 *129 -> true
  *120 *129 -> true
  *18 *129 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *124 -> *59
  *93 -> *27
  *145 -> *115
  *112 -> *98
  *131 -> *23
  *122 -> *68
  *43 -> *78
  *34 -> *100
  *87 -> *61
  *99 -> *141
  *55 -> *80
  *47 -> *67
  *81 -> *29
  *94 -> *114
  *20 -> *142
  *4 -> *101
  *50 -> *126
  *66 -> *39
  *35 -> *149
  *63 -> *62
  *31 -> *40
  *36 -> *134
  *32 -> *105
  *33 -> *158
  *152 -> *13
  *146 -> *73
  *144 -> *3
  *139 -> *89
  *65 -> *135
  *96 -> *75
  *123 -> *46
  *49 -> *154
  *159 -> *82
  *147 -> *74
  *11 -> *83
  *121 -> *42
  *157 -> *148
  *76 -> *48
  *6 -> *102
  else -> *59
}
$instantiate_int -> {
  25000 -> true
  100 -> true
  110 -> true
  -9097 -> true
  25001 -> true
  else -> true
}
$unchk_sub -> {
  *112 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *54 -> *171
  *60 -> *173
  *14 -> *171
  *125 -> *169
  *111 -> *167
  *182 -> *24
  *183 -> *24
  *56 -> *176
  *15 -> *162
  *138 -> *179
  *2 -> *162
  else -> *171
}
$heap -> {
  *12 -> *343
  *120 -> *340
  *18 -> *341
  *129 -> *342
  *69 -> *343
  *91 -> *343
  else -> *343
}
$f_owns -> {
  *50 -> *238
  *36 -> *239
  *146 -> *160
  *144 -> *161
  *96 -> *240
  *123 -> *241
  else -> *238
}
$field_type -> {
  *169 -> *50
  *24 -> *112
  *151 -> *6
  *137 -> *6
  *51 -> *112
  *171 -> *146
  *173 -> *144
  *167 -> *99
  *238 -> *63
  *239 -> *63
  *160 -> *63
  *161 -> *63
  *240 -> *63
  *241 -> *63
  *162 -> *96
  else -> *63
}
$has_field_at0 -> {
  *96 *24 -> true
  *123 *151 -> true
  else -> true
}
$function_entry -> {
  *69 -> true
  else -> true
}
$good_state_ext -> {
  *153 *69 -> true
  *150 *91 -> true
  *84 *12 -> true
  *53 *120 -> true
  *30 *18 -> true
  *84 *129 -> true
  else -> true
}
$f_owner -> {
  *91 -> *346
  *128 -> *346
  *12 -> *346
  *45 -> *346
  *120 -> *346
  *18 -> *346
  *129 -> *346
  *69 -> *346
  else -> *346
}
$type_project_0 -> {
  *6 -> *96
  else -> *96
}
Store_[$field][$ptr]$int -> {
  *343 *24 *246 -> *340
  *340 *24 *253 -> *341
  *341 *240 *254 -> *342
  else -> *340
}
$type_branch -> {
  *93 -> *25
  *145 -> *25
  *112 -> *25
  *131 -> *25
  *122 -> *25
  *43 -> *25
  *34 -> *25
  *87 -> *25
  *47 -> *25
  *81 -> *25
  *55 -> *25
  *99 -> *25
  *94 -> *25
  *20 -> *25
  *4 -> *25
  *50 -> *25
  *36 -> *25
  *66 -> *25
  *35 -> *25
  *63 -> *25
  *31 -> *25
  *32 -> *25
  *146 -> *25
  *144 -> *25
  *139 -> *25
  *65 -> *25
  *96 -> *25
  *123 -> *25
  *49 -> *25
  *159 -> *25
  *147 -> *25
  *11 -> *25
  *121 -> *25
  *157 -> *25
  *76 -> *25
  *6 -> *88
  else -> *25
}
$ptrset_to_int -> {
  *64 -> 87
  else -> 87
}
$in_range_t -> {
  *34 4294967296 -> false
  *34 0 -> true
  *87 18446744073709551616 -> false
  *87 0 -> true
  *34 -1 -> false
  *34 4294967295 -> true
  *87 -1 -> false
  *87 18446744073709551615 -> true
  *112 -10000 -> true
  *87 -5806 -> false
  *87 361 -> true
  *87 296 -> true
  *87 4330 -> true
  *87 -4289 -> false
  *87 6159 -> true
  *112 25000 -> true
  *87 -4988 -> false
  *87 711 -> true
  *112 -9097 -> true
  *112 -9098 -> true
  *112 25001 -> true
  else -> true
}
Select_[$ptr]$ptr -> {
  *346 *15 -> *54
  *264 *15 -> *15
  *265 *15 -> *15
  *346 *2 -> *54
  *265 *2 -> *2
  *264 *2 -> *2
  *263 *15 -> *15
  *263 *2 -> *2
  *266 *15 -> *15
  *266 *2 -> *2
  else -> *15
}
$spec_ptr_cast -> {
  *54 *146 -> *54
  *60 *144 -> *60
  *14 *146 -> *14
  else -> *54
}
$set_in_pos -> {
  *15 *163 -> true
  *2 *164 -> true
  *2 *163 -> true
  *2 *166 -> true
  else -> true
}
$is_union_type -> {
  *96 -> false
  *123 -> false
  else -> false
}
$field_parent_type -> {
  *24 -> *96
  *151 -> *123
  *137 -> *123
  *51 -> *123
  *171 -> *146
  *173 -> *144
  *167 -> *124
  *238 -> *50
  *239 -> *36
  *160 -> *146
  *161 -> *144
  *240 -> *96
  *241 -> *123
  *162 -> *96
  else -> *123
}
$sizeof -> {
  *93 -> 1
  *145 -> 2
  *112 -> 4
  *131 -> 8
  *122 -> 1
  *43 -> 2
  *34 -> 4
  *87 -> 8
  *47 -> 4
  *81 -> 8
  *55 -> 1
  *99 -> 1
  *94 -> 1
  *20 -> 1
  *4 -> 1
  *50 -> 1
  *36 -> 1
  *66 -> 1
  *35 -> 1
  *63 -> 1
  *31 -> 1
  *32 -> 1
  *146 -> 1
  *144 -> 1
  *139 -> 1
  *65 -> 1
  *96 -> 4
  *123 -> 24
  *49 -> 8
  *159 -> 8
  *147 -> 8
  *11 -> 8
  *121 -> 8
  *157 -> 8
  *76 -> 8
  *6 -> 8
  else -> 1
}
$is_ghost_field -> {
  *238 -> true
  *239 -> true
  *160 -> true
  *161 -> true
  *240 -> true
  *241 -> true
  *24 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *54 -> true
  *60 -> true
  *14 -> true
  *15 -> false
  *2 -> false
  else -> true
}
$is_fnptr_type -> {
  *49 -> true
  *159 -> true
  *147 -> true
  *11 -> true
  *121 -> true
  *157 -> true
  *76 -> true
  else -> true
}
$f_root -> {
  *99 -> *167
  *146 -> *171
  *144 -> *173
  *96 -> *162
  else -> *167
}
$owns -> {
  *69 *15 -> *64
  *91 *2 -> *64
  *129 *2 -> *64
  *91 *15 -> *64
  *12 *2 -> *64
  else -> *64
}
$pre_static_unwrap -> {
  *69 -> true
  *91 -> true
  else -> true
}
$set_eq -> {
  *64 *64 -> true
  else -> true
}
$int_to_ptrset -> {
  100 -> *64
  110 -> *64
  87 -> *64
  else -> *64
}
$maybe_emb -> {
  *15 -> *15
  *2 -> *2
  else -> *15
}
$is_span_sequential -> {
  *96 -> true
  *123 -> true
  else -> true
}
$good_state -> {
  *344 -> true
  *69 -> true
  *91 -> true
  *128 -> false
  *12 -> true
  *45 -> false
  *120 -> true
  *18 -> true
  *129 -> true
  else -> true
}
$typemap -> {
  *346 -> *347
  else -> *347
}
$field_offset -> {
  *24 -> 0
  *151 -> 0
  *137 -> 8
  *51 -> 16
  *169 -> -18446744073709562932
  *171 -> 0
  *173 -> 0
  *167 -> 0
  *176 -> -18446744073709565593
  *162 -> 0
  *179 -> -18446744073709557174
  else -> 0
}
$base -> {
  *111 -> 0
  *54 -> 361
  *60 -> 296
  *14 -> 4330
  *125 -> 18446744073709557126
  *56 -> 18446744073709561304
  *15 -> 6159
  *138 -> 18446744073709552186
  *2 -> 711
  *182 -> 6159
  *183 -> 711
  else -> 6159
}
$as_in_range_t -> {
  *93 -> *93
  *145 -> *145
  *112 -> *112
  *131 -> *131
  *122 -> *122
  *43 -> *43
  *34 -> *34
  *87 -> *87
  *35 -> *35
  else -> *93
}
$field_arr_root -> {
  *24 -> *24
  *151 -> *151
  *137 -> *137
  *51 -> *51
  *167 -> *167
  *171 -> *171
  *173 -> *173
  *238 -> *238
  *239 -> *239
  *160 -> *160
  *161 -> *161
  *240 -> *240
  *241 -> *241
  *162 -> *162
  else -> *24
}
*** STATE <initial>
  $s -> *69
  $cev_pc -> **$cev_pc
  P#a -> *56
  P#b -> *138
  P#amount -> 34098
  owns#14 -> **owns#14
  staticWrapState#12 -> **staticWrapState#12
  prestate#11 -> **prestate#11
  owns#10 -> **owns#10
  staticWrapState#8 -> **staticWrapState#8
  prestate#7 -> **prestate#7
  prestate#6 -> **prestate#6
  prestate#4 -> **prestate#4
  owns#5 -> **owns#5
  prestate#3 -> **prestate#3
  prestate#1 -> **prestate#1
  owns#2 -> **owns#2
  #wrTime$1^13.1 -> 695
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(13,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#2 -> *64
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#1 -> *69
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
  prestate#3 -> *69
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#3 -> *128
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,5)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *91
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#5 -> *64
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#4 -> *91
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  prestate#6 -> *91
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#6 -> *45
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *12
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,5)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,5)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,5)
  $s -> *120
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,5)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *18
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#7 -> *18
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  staticWrapState#8 -> *18
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  owns#10 -> *64
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  $s -> *129
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@40010 -> true
%lbl%@39344 -> true
%lbl%@39544 -> true
%lbl%@39326 -> true
%lbl%@39988 -> true
%lbl%+38915 -> true
%lbl%+1480 -> true
%lbl%@39680 -> true
%lbl%@39054 -> true
$position_marker -> true
%lbl%@39073 -> true
%lbl%@40236 -> false
call1198formal@p@0 -> *2
call1276formal@o@0 -> *2
call1050formal@o@0 -> *2
unique-value!81 -> *3
^^null_type -> *4
$max.i8 -> 9223372036854775807
#distTp1 -> *6
$fk_owns -> *7
$fk_emb_array -> *8
cev_global -> *9
call1198formal@v@0 -> 25000
^$#_onexit_t#4 -> *11
$s@1@@0 -> *12
unique-value!79 -> *13
$untyped_owner_owner -> *14
call914formal@o@0 -> *15
call1408formal@o@0 -> *15
call1128formal@p@0 -> *15
$max.u4 -> 4294967295
#tok$2^41.3 -> *17
prestate#7@0 -> *18
$s@3 -> *18
staticWrapState#8@0 -> *18
$fk_ref_cnt -> *19
^^field -> *20
$max.u2 -> 65535
loop_entered -> *22
unique-value!59 -> *23
Account.amount -> *24
$ctype_flat -> *25
$fk_as_array_first -> *26
unique-value!56 -> *27
$s@5 -> *28
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *29
unique-value!67 -> *30
#tok$1^26.5 -> *31
^$#state_t -> *32
^$#struct -> *33
^$#seq_version -> *34
^^u4 -> *35
^^nat -> *36
^$#volatile_version_t -> *37
$ctype_blob -> *38
$max.i2 -> 32767
unique-value!72 -> *40
unique-value!75 -> *41
P#amount -> 6515
unique-value!90 -> *43
^^u2 -> *44
$min.i8 -> -9223372036854775808
prestate#6@1 -> *46
unique-value!85 -> *47
^^f4 -> *48
unique-value!92 -> *49
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *50
^^claim -> *51
AccountGroup.total -> *52
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *54
$me -> *55
^^bool -> *56
P#a -> *57
$max.i1 -> 127
cev_parameter -> *59
unique-value!55 -> *60
$untyped_owner -> *61
unique-value!63 -> *62
unique-value!74 -> *63
^$#ptrset -> *64
owns#10@0 -> *65
$set_empty -> *65
owns#2@0 -> *65
owns#5@0 -> *65
lambda@13 -> *65
owns#14@0 -> *65
^$##club -> *66
^^mathint -> *67
unique-value!66 -> *68
unique-value!60 -> *69
prestate#1@0 -> *70
prestate#3@0 -> *70
$s -> *70
$arch_ptr_size -> 8
$struct_zero -> *72
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *73
unique-value!80 -> *74
unique-value!88 -> *75
unique-value!84 -> *76
^$#_invalid_parameter_handler#7 -> *77
$min.i1 -> -128
unique-value!61 -> *79
conditional_moment -> *80
unique-value!65 -> *81
^^f8 -> *82
unique-value!87 -> *83
unique-value!89 -> *84
#tok$1^23.16 -> *85
$fk_base -> *86
#tok$1^28.5 -> *87
^^u8 -> *88
$arch_ptr_type -> *88
$ctype_ptr -> *89
unique-value!82 -> *90
$fk_vol_version -> *91
prestate#6@0 -> *92
$s@0@@0 -> *92
prestate#4@0 -> *92
$max.u1 -> 255
^^i1 -> *94
^^object -> *95
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *97
$ctype_spec_ptr -> *98
unique-value!58 -> *99
^^void -> *100
unique-value!62 -> *101
unique-value!70 -> *102
unique-value!93 -> *103
$fk_active_option -> *104
$ctype_array -> *105
unique-value!77 -> *106
cev_local -> *107
#tok$2^47.3 -> *108
@MV_state_const -> 74
$ctype_map -> *110
loop_register -> *111
$null -> *112
^^i4 -> *113
$fk_allocation_root -> *114
unique-value!68 -> *115
unique-value!57 -> *116
loop_exited -> *117
$min.i2 -> -32768
cev_implicit -> *119
#tok$1^6.1 -> *120
$s@2@@0 -> *121
prestate#11@0 -> *122
$s@4 -> *122
staticWrapState#12@0 -> *122
^$#account2.c..36689#5 -> *123
^^u1 -> *124
^AccountGroup -> *125
$primitive_emb_type -> *126
$no_claim -> *127
unique-value!71 -> *128
lambda@20 -> *129
prestate#3@1 -> *130
took_else_branch -> *131
^^i8 -> *132
took_then_branch -> *133
#tok$2^42.3 -> *134
unique-value!76 -> *135
unique-value!83 -> *136
#wrTime$1^13.1 -> 695
AccountGroup.creditCard -> *138
P#b -> *139
^$##thread_id -> *140
$min.i4 -> -2147483648
unique-value!64 -> *142
unique-value!69 -> *143
#tok$2^46.3 -> *144
$untyped_owner_type -> *145
^^i2 -> *146
^$#thread_id_t -> *147
^$#account2.c..36585#3 -> *148
unique-value!91 -> *149
unique-value!73 -> *150
#tok$1^22.5 -> *151
AccountGroup.giro -> *152
^$#vol_version -> *153
#tok$1^13.1 -> *154
unique-value!86 -> *155
call1128formal@v@0 -> -10001
#tok$2^25.1 -> *157
^$#_purecall_handler#6 -> *158
unique-value!78 -> *159
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *160
$cev_pc -> **$cev_pc
owns#14 -> **owns#14
staticWrapState#12 -> **staticWrapState#12
prestate#11 -> **prestate#11
owns#10 -> **owns#10
staticWrapState#8 -> **staticWrapState#8
prestate#7 -> **prestate#7
prestate#6 -> **prestate#6
prestate#4 -> **prestate#4
owns#5 -> **owns#5
prestate#3 -> **prestate#3
prestate#1 -> **prestate#1
owns#2 -> **owns#2
#stackframe -> **#stackframe
$thread_local -> {
  *12 *15 -> true
  *121 *2 -> true
  else -> true
}
$ptr_to -> {
  *97 -> *6
  else -> *6
}
$is_volatile_field -> {
  *161 -> true
  *162 -> true
  else -> true
}
$is_phys_field -> {
  *24 -> true
  *152 -> true
  *138 -> true
  *52 -> true
  *163 -> true
  else -> true
}
$owner -> {
  *70 *15 -> *55
  *92 *15 -> *55
  *92 *2 -> *55
  *12 *15 -> *55
  *12 *2 -> *55
  *121 *2 -> *55
  *18 *2 -> *55
  *122 *2 -> *55
  *122 *15 -> *55
  *28 *15 -> *55
  else -> *55
}
Store_[$ptr]$bool -> {
  *164 *15 false -> *165
  *165 *2 false -> *166
  *166 *2 true -> *167
  *167 *15 true -> *168
  else -> *165
}
$ptr -> {
  *169 0 -> *112
  *171 18446744073709557126 -> *127
  *173 361 -> *55
  *175 296 -> *61
  *173 4330 -> *14
  *178 18446744073709561304 -> *57
  *163 6159 -> *15
  *181 18446744073709552186 -> *139
  *163 711 -> *2
  *24 6159 -> *184
  *24 711 -> *185
  else -> *112
}
$closed -> {
  *70 *15 -> true
  *92 *15 -> false
  *92 *2 -> true
  *12 *2 -> false
  *12 *15 -> false
  *121 *2 -> false
  *18 *2 -> false
  *122 *2 -> true
  *122 *15 -> false
  *28 *15 -> true
  else -> false
}
$dot -> {
  *15 *24 -> *184
  *2 *24 -> *185
  else -> *184
}
$addr0 -> {
  *112 -> 0
  *127 -> 0
  *55 -> 361
  *61 -> 296
  *14 -> 4330
  *57 -> 6159
  *15 -> 6159
  *139 -> 711
  *2 -> 711
  *184 -> 6159
  *185 -> 711
  else -> 6159
}
$is_proper -> {
  *55 -> true
  *61 -> true
  *14 -> true
  *184 -> true
  *15 -> true
  *2 -> true
  *185 -> true
  else -> true
}
$is_wrapped -> {
  *18 *122 *2 *65 -> true
  *122 *28 *15 *65 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *15 -> true
  *2 -> true
  *184 -> true
  *185 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  74 11 -> true
  74 12 -> true
  74 13 -> true
  74 14 -> true
  74 15 -> true
  74 16 -> true
  74 17 -> true
  74 18 -> true
  74 19 -> true
  74 20 -> true
  74 21 -> true
  74 22 -> true
  74 23 -> true
  74 24 -> true
  74 25 -> true
  74 26 -> true
  74 27 -> true
  74 28 -> true
  74 29 -> true
  74 30 -> true
  74 31 -> true
  74 32 -> true
  74 33 -> true
  74 34 -> true
  74 35 -> true
  74 36 -> true
  74 37 -> true
  74 38 -> true
  74 39 -> true
  74 40 -> true
  74 41 -> true
  74 42 -> true
  74 43 -> true
  74 44 -> true
  74 45 -> true
  74 46 -> true
  74 47 -> true
  74 48 -> true
  74 49 -> true
  74 50 -> true
  74 51 -> true
  74 52 -> true
  74 53 -> true
  74 54 -> true
  74 55 -> true
  74 56 -> true
  74 57 -> true
  74 58 -> true
  74 59 -> true
  74 60 -> true
  74 61 -> true
  74 62 -> true
  else -> true
}
$current_timestamp -> {
  *70 -> 695
  *92 -> 696
  *130 -> 696
  *12 -> 697
  *46 -> 697
  *121 -> 698
  *18 -> 699
  *122 -> 700
  *28 -> 701
  else -> 696
}
$as_primitive_field -> {
  *24 -> *24
  *152 -> *152
  *138 -> *138
  *52 -> *52
  *169 -> *169
  *253 -> *253
  *254 -> *254
  *161 -> *161
  *162 -> *162
  *255 -> *255
  *256 -> *256
  else -> *24
}
$start_release -> {
  *70 *70 -> *130
  *92 *92 -> *46
  else -> *130
}
$f_timestamp -> {
  *92 -> *257
  *130 -> *258
  *12 -> *259
  *46 -> *257
  *121 -> *259
  *18 -> *259
  *70 -> *258
  *122 -> *260
  *28 -> *261
  else -> *259
}
Select_[$ptr]$int -> {
  *259 *15 -> 696
  *262 *2 -> 18485
  *258 *15 -> 695
  *264 *15 -> -3486
  *266 *15 -> 100
  *257 *15 -> 696
  *264 *2 -> 18485
  *257 *2 -> 695
  *266 *2 -> 110
  *259 *2 -> 697
  *262 *15 -> -10001
  *269 *2 -> 25000
  *270 *2 -> 87
  *260 *2 -> 700
  *260 *15 -> 696
  *272 *15 -> 87
  *270 *15 -> 100
  *261 *15 -> 701
  *269 *15 -> -10001
  *258 *2 -> 695
  else -> 696
}
$inv2 -> {
  *70 *70 *15 *97 -> true
  *92 *92 *2 *97 -> true
  else -> true
}
$unchecked -> {
  *35 4294967296 -> 0
  *88 18446744073709551616 -> 0
  *35 -1 -> 4294967295
  *88 -1 -> 18446744073709551615
  *113 -10000 -> -10000
  *88 0 -> 0
  *88 -5806 -> 0
  *88 361 -> 361
  *88 296 -> 296
  *88 4330 -> 4330
  *88 -4289 -> 6159
  *88 6159 -> 6159
  *88 -4988 -> 711
  *88 711 -> 711
  else -> 0
}
$is_unwrapped -> {
  *70 *92 *15 -> true
  *92 *12 *2 -> true
  else -> true
}
$mutable -> {
  *12 *15 -> true
  *121 *2 -> true
  *18 *2 -> true
  *122 *15 -> true
  *92 *15 -> true
  *12 *2 -> true
  else -> true
}
$is_primitive -> {
  *94 -> true
  *146 -> true
  *113 -> true
  *132 -> true
  *124 -> true
  *44 -> true
  *35 -> true
  *88 -> true
  *48 -> true
  *82 -> true
  *56 -> true
  *100 -> true
  *95 -> true
  *20 -> true
  *4 -> true
  *51 -> false
  *37 -> false
  *67 -> true
  *36 -> true
  *64 -> true
  *32 -> true
  *33 -> true
  *147 -> false
  *145 -> false
  *140 -> true
  *66 -> true
  *97 -> false
  *125 -> false
  *6 -> true
  *50 -> true
  *160 -> true
  *148 -> true
  *11 -> true
  *123 -> true
  *158 -> true
  *77 -> true
  *126 -> false
  else -> true
}
$as_field_with_type -> {
  *24 *113 -> *24
  *152 *6 -> *152
  *138 *6 -> *138
  *52 *113 -> *52
  *169 *100 -> *169
  *173 *147 -> *173
  *175 *145 -> *175
  *253 *64 -> *253
  *254 *64 -> *254
  *161 *64 -> *161
  *162 *64 -> *162
  *255 *64 -> *255
  *256 *64 -> *256
  *163 *97 -> *163
  else -> *24
}
$is -> {
  *15 *97 -> true
  *2 *97 -> true
  else -> true
}
$post_unwrap -> {
  *70 *92 -> true
  *92 *12 -> true
  else -> true
}
$roots -> {
  *12 -> *280
  *121 -> *280
  *18 -> *280
  *70 -> *281
  *92 -> *282
  *122 -> *283
  *28 -> *284
  else -> *280
}
$invok_state -> {
  *70 -> true
  *92 -> true
  *12 -> true
  *121 -> true
  *18 -> true
  *122 -> true
  else -> true
}
$is_sequential_field -> {
  *253 -> true
  *254 -> true
  *255 -> true
  *24 -> true
  *256 -> true
  *152 -> true
  *138 -> true
  *52 -> true
  *169 -> true
  *161 -> false
  else -> true
}
$is_math_type -> {
  *95 -> true
  *20 -> true
  *4 -> true
  *67 -> true
  *36 -> true
  *64 -> true
  *32 -> true
  *33 -> true
  *140 -> true
  *66 -> true
  else -> true
}
$file_name_is -> {
  2 *29 -> true
  1 *73 -> true
  else -> true
}
$unchk_add -> {
  *88 0 0 -> 0
  *88 18446744073709557126 -18446744073709562932 -> 0
  *88 361 0 -> 361
  *88 296 0 -> 296
  *88 4330 0 -> 4330
  *88 18446744073709561304 -18446744073709565593 -> 6159
  *88 6159 0 -> 6159
  *88 18446744073709552186 -18446744073709557174 -> 711
  *88 711 0 -> 711
  else -> 0
}
$full_stop -> {
  *70 -> true
  *92 -> true
  *12 -> true
  *121 -> true
  *18 -> true
  *122 -> true
  else -> true
}
$writes_at -> {
  695 -> *129
  else -> *129
}
$call_transition -> {
  *12 *121 -> true
  *121 *18 -> true
  *70 *92 -> true
  *92 *12 -> true
  *18 *122 -> true
  *122 *28 -> true
  else -> true
}
$set_cardinality -> {
  *65 -> 0
  else -> 0
}
$is_claimable -> {
  *51 -> true
  *37 -> false
  *147 -> false
  *145 -> false
  *97 -> false
  *125 -> false
  *94 -> false
  *146 -> false
  *113 -> false
  *132 -> false
  *124 -> false
  *44 -> false
  *35 -> false
  *88 -> false
  *48 -> false
  *82 -> false
  *56 -> false
  *100 -> false
  *95 -> false
  *20 -> false
  *4 -> false
  *67 -> false
  *36 -> false
  *64 -> false
  *32 -> false
  *33 -> false
  *140 -> false
  *66 -> false
  *50 -> false
  *160 -> false
  *148 -> false
  *11 -> false
  *123 -> false
  *158 -> false
  *77 -> false
  *6 -> false
  else -> false
}
$is_proper_field -> {
  *24 -> true
  *152 -> true
  *138 -> true
  *52 -> true
  *173 -> true
  *175 -> true
  *169 -> true
  *253 -> true
  *254 -> true
  *161 -> true
  *162 -> true
  *255 -> true
  *256 -> true
  *163 -> true
  else -> true
}
$wrapped -> {
  *70 *15 *97 -> true
  *92 *2 *97 -> true
  *122 *2 *97 -> true
  *28 *15 *97 -> true
  else -> true
}
$top_writable -> {
  *70 695 *15 -> true
  *92 695 *2 -> true
  *18 695 *2 -> true
  *122 695 *15 -> true
  else -> true
}
$f_closed -> {
  *12 -> *166
  *121 -> *166
  *18 -> *166
  *70 -> *164
  *92 -> *165
  *122 -> *167
  *28 -> *168
  else -> *166
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *346 *24 -> *262
  *347 *255 -> *266
  *348 *24 -> *269
  *349 *24 -> *269
  *350 *24 -> *264
  *350 *255 -> *266
  *347 *24 -> *269
  *346 *255 -> *266
  *348 *255 -> *270
  *349 *255 -> *272
  else -> *269
}
$field_kind -> {
  *24 -> *86
  *152 -> *86
  *138 -> *86
  *52 -> *86
  *169 -> *114
  *173 -> *114
  *175 -> *114
  *253 -> *7
  *254 -> *7
  *161 -> *7
  *162 -> *7
  *255 -> *7
  *256 -> *7
  *163 -> *114
  else -> *7
}
Select_[$ptr]$bool -> {
  *164 *15 -> true
  *165 *15 -> false
  *165 *2 -> true
  *164 *2 -> true
  *166 *2 -> false
  *166 *15 -> false
  *167 *2 -> true
  *167 *15 -> false
  *168 *15 -> true
  else -> true
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *173 -> *173
  *175 -> *175
  *163 -> *163
  else -> *173
}
$pre_static_wrap -> {
  *18 -> true
  *122 -> true
  else -> true
}
$phys_ptr_cast -> {
  *57 *97 -> *15
  *139 *97 -> *2
  *15 *97 -> *15
  *2 *97 -> *2
  *184 *113 -> *184
  *185 *113 -> *185
  else -> *15
}
Store_[$ptr]$int -> {
  *258 *15 696 -> *257
  *257 *2 697 -> *259
  *264 *15 -10001 -> *262
  *262 *2 25000 -> *269
  *266 *2 87 -> *270
  *270 *15 87 -> *272
  *259 *2 700 -> *260
  *260 *15 701 -> *261
  else -> *257
}
$prim_emb -> {
  *184 -> *15
  *185 -> *2
  else -> *15
}
$vs_state -> {
  *72 -> *351
  else -> *351
}
$trans_call_transition -> {
  *70 *92 -> true
  *70 *12 -> true
  *92 *12 -> true
  *70 *121 -> true
  *92 *121 -> true
  *12 *121 -> true
  *70 *18 -> true
  *92 *18 -> true
  *12 *18 -> true
  *121 *18 -> true
  *70 *122 -> true
  *92 *122 -> true
  *12 *122 -> true
  *121 *122 -> true
  *18 *122 -> true
  *70 *28 -> true
  *92 *28 -> true
  *12 *28 -> true
  *121 *28 -> true
  *18 *28 -> true
  *122 *28 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *126 -> *60
  *94 -> *27
  *146 -> *116
  *113 -> *99
  *132 -> *23
  *124 -> *69
  *44 -> *79
  *35 -> *101
  *88 -> *62
  *100 -> *142
  *56 -> *81
  *48 -> *68
  *82 -> *30
  *95 -> *115
  *20 -> *143
  *4 -> *102
  *51 -> *128
  *67 -> *40
  *36 -> *150
  *64 -> *63
  *32 -> *41
  *37 -> *135
  *33 -> *106
  *34 -> *159
  *153 -> *13
  *147 -> *74
  *145 -> *3
  *140 -> *90
  *66 -> *136
  *97 -> *76
  *125 -> *47
  *50 -> *155
  *160 -> *83
  *148 -> *75
  *11 -> *84
  *123 -> *43
  *158 -> *149
  *77 -> *49
  *6 -> *103
  else -> *60
}
$instantiate_int -> {
  -3486 -> true
  100 -> true
  110 -> true
  18485 -> true
  25000 -> true
  -10001 -> true
  else -> true
}
$unchk_sub -> {
  *113 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *55 -> *173
  *61 -> *175
  *14 -> *173
  *127 -> *171
  *112 -> *169
  *184 -> *24
  *185 -> *24
  *57 -> *178
  *15 -> *163
  *139 -> *181
  *2 -> *163
  else -> *173
}
$heap -> {
  *12 -> *350
  *121 -> *346
  *18 -> *347
  *122 -> *348
  *28 -> *349
  *70 -> *350
  *92 -> *350
  else -> *350
}
$f_owns -> {
  *51 -> *253
  *37 -> *254
  *147 -> *161
  *145 -> *162
  *97 -> *255
  *125 -> *256
  else -> *253
}
$field_type -> {
  *171 -> *51
  *24 -> *113
  *152 -> *6
  *138 -> *6
  *52 -> *113
  *173 -> *147
  *175 -> *145
  *169 -> *100
  *253 -> *64
  *254 -> *64
  *161 -> *64
  *162 -> *64
  *255 -> *64
  *256 -> *64
  *163 -> *97
  else -> *64
}
$has_field_at0 -> {
  *97 *24 -> true
  *125 *152 -> true
  else -> true
}
$function_entry -> {
  *70 -> true
  else -> true
}
$good_state_ext -> {
  *154 *70 -> true
  *151 *92 -> true
  *85 *12 -> true
  *54 *121 -> true
  *31 *18 -> true
  *85 *122 -> true
  *87 *28 -> true
  else -> true
}
$f_owner -> {
  *92 -> *353
  *130 -> *353
  *12 -> *353
  *46 -> *353
  *121 -> *353
  *18 -> *353
  *122 -> *353
  *28 -> *353
  *70 -> *353
  else -> *353
}
$type_project_0 -> {
  *6 -> *97
  else -> *97
}
Store_[$field][$ptr]$int -> {
  *350 *24 *262 -> *346
  *346 *24 *269 -> *347
  *347 *255 *270 -> *348
  *348 *255 *272 -> *349
  else -> *346
}
$type_branch -> {
  *94 -> *25
  *146 -> *25
  *113 -> *25
  *132 -> *25
  *124 -> *25
  *44 -> *25
  *35 -> *25
  *88 -> *25
  *48 -> *25
  *82 -> *25
  *56 -> *25
  *100 -> *25
  *95 -> *25
  *20 -> *25
  *4 -> *25
  *51 -> *25
  *37 -> *25
  *67 -> *25
  *36 -> *25
  *64 -> *25
  *32 -> *25
  *33 -> *25
  *147 -> *25
  *145 -> *25
  *140 -> *25
  *66 -> *25
  *97 -> *25
  *125 -> *25
  *50 -> *25
  *160 -> *25
  *148 -> *25
  *11 -> *25
  *123 -> *25
  *158 -> *25
  *77 -> *25
  *6 -> *89
  else -> *25
}
$ptrset_to_int -> {
  *65 -> 87
  else -> 87
}
$in_range_t -> {
  *35 4294967296 -> false
  *35 0 -> true
  *88 18446744073709551616 -> false
  *88 0 -> true
  *35 -1 -> false
  *35 4294967295 -> true
  *88 -1 -> false
  *88 18446744073709551615 -> true
  *113 -10000 -> true
  *88 -5806 -> false
  *88 361 -> true
  *88 296 -> true
  *88 4330 -> true
  *88 -4289 -> false
  *88 6159 -> true
  *113 -3486 -> true
  *88 -4988 -> false
  *88 711 -> true
  *113 18485 -> true
  *113 25000 -> true
  *113 -10001 -> true
  else -> true
}
Select_[$ptr]$ptr -> {
  *353 *15 -> *55
  *281 *15 -> *15
  *282 *15 -> *15
  *353 *2 -> *55
  *282 *2 -> *2
  *281 *2 -> *2
  *280 *15 -> *15
  *280 *2 -> *2
  *283 *15 -> *15
  *283 *2 -> *2
  *284 *15 -> *15
  *284 *2 -> *2
  else -> *15
}
$spec_ptr_cast -> {
  *55 *147 -> *55
  *61 *145 -> *61
  *14 *147 -> *14
  else -> *55
}
$set_in_pos -> {
  *15 *164 -> true
  *2 *165 -> true
  *2 *164 -> true
  *2 *167 -> true
  *15 *168 -> true
  else -> true
}
$is_union_type -> {
  *97 -> false
  *125 -> false
  else -> false
}
$field_parent_type -> {
  *24 -> *97
  *152 -> *125
  *138 -> *125
  *52 -> *125
  *173 -> *147
  *175 -> *145
  *169 -> *126
  *253 -> *51
  *254 -> *37
  *161 -> *147
  *162 -> *145
  *255 -> *97
  *256 -> *125
  *163 -> *97
  else -> *125
}
$sizeof -> {
  *94 -> 1
  *146 -> 2
  *113 -> 4
  *132 -> 8
  *124 -> 1
  *44 -> 2
  *35 -> 4
  *88 -> 8
  *48 -> 4
  *82 -> 8
  *56 -> 1
  *100 -> 1
  *95 -> 1
  *20 -> 1
  *4 -> 1
  *51 -> 1
  *37 -> 1
  *67 -> 1
  *36 -> 1
  *64 -> 1
  *32 -> 1
  *33 -> 1
  *147 -> 1
  *145 -> 1
  *140 -> 1
  *66 -> 1
  *97 -> 4
  *125 -> 24
  *50 -> 8
  *160 -> 8
  *148 -> 8
  *11 -> 8
  *123 -> 8
  *158 -> 8
  *77 -> 8
  *6 -> 8
  else -> 1
}
$is_ghost_field -> {
  *253 -> true
  *254 -> true
  *161 -> true
  *162 -> true
  *255 -> true
  *256 -> true
  *24 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *55 -> true
  *61 -> true
  *14 -> true
  *15 -> false
  *2 -> false
  else -> true
}
$is_fnptr_type -> {
  *50 -> true
  *160 -> true
  *148 -> true
  *11 -> true
  *123 -> true
  *158 -> true
  *77 -> true
  else -> true
}
$f_root -> {
  *100 -> *169
  *147 -> *173
  *145 -> *175
  *97 -> *163
  else -> *169
}
$owns -> {
  *70 *15 -> *65
  *92 *2 -> *65
  *122 *2 -> *65
  *28 *15 -> *65
  *92 *15 -> *65
  *12 *2 -> *65
  else -> *65
}
$pre_static_unwrap -> {
  *70 -> true
  *92 -> true
  else -> true
}
$set_eq -> {
  *65 *65 -> true
  else -> true
}
$int_to_ptrset -> {
  100 -> *65
  110 -> *65
  87 -> *65
  else -> *65
}
$maybe_emb -> {
  *15 -> *15
  *2 -> *2
  else -> *15
}
$is_span_sequential -> {
  *97 -> true
  *125 -> true
  else -> true
}
$good_state -> {
  *351 -> true
  *70 -> true
  *92 -> true
  *130 -> false
  *12 -> true
  *46 -> false
  *121 -> true
  *18 -> true
  *122 -> true
  *28 -> true
  else -> true
}
$typemap -> {
  *353 -> *354
  else -> *354
}
$field_offset -> {
  *24 -> 0
  *152 -> 0
  *138 -> 8
  *52 -> 16
  *171 -> -18446744073709562932
  *173 -> 0
  *175 -> 0
  *169 -> 0
  *178 -> -18446744073709565593
  *163 -> 0
  *181 -> -18446744073709557174
  else -> 0
}
$base -> {
  *112 -> 0
  *55 -> 361
  *61 -> 296
  *14 -> 4330
  *127 -> 18446744073709557126
  *57 -> 18446744073709561304
  *15 -> 6159
  *139 -> 18446744073709552186
  *2 -> 711
  *184 -> 6159
  *185 -> 711
  else -> 6159
}
$as_in_range_t -> {
  *94 -> *94
  *146 -> *146
  *113 -> *113
  *132 -> *132
  *124 -> *124
  *44 -> *44
  *35 -> *35
  *88 -> *88
  *36 -> *36
  else -> *94
}
$field_arr_root -> {
  *24 -> *24
  *152 -> *152
  *138 -> *138
  *52 -> *52
  *169 -> *169
  *173 -> *173
  *175 -> *175
  *253 -> *253
  *254 -> *254
  *161 -> *161
  *162 -> *162
  *255 -> *255
  *256 -> *256
  *163 -> *163
  else -> *24
}
*** STATE <initial>
  $s -> *70
  $cev_pc -> **$cev_pc
  P#a -> *57
  P#b -> *139
  P#amount -> 6515
  owns#14 -> **owns#14
  staticWrapState#12 -> **staticWrapState#12
  prestate#11 -> **prestate#11
  owns#10 -> **owns#10
  staticWrapState#8 -> **staticWrapState#8
  prestate#7 -> **prestate#7
  prestate#6 -> **prestate#6
  prestate#4 -> **prestate#4
  owns#5 -> **owns#5
  prestate#3 -> **prestate#3
  prestate#1 -> **prestate#1
  owns#2 -> **owns#2
  #wrTime$1^13.1 -> 695
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(13,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#2 -> *65
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#1 -> *70
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
  prestate#3 -> *70
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#3 -> *130
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,5)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *92
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#5 -> *65
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#4 -> *92
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  prestate#6 -> *92
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#6 -> *46
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *12
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,5)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,5)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,5)
  $s -> *121
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,5)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *18
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#7 -> *18
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  staticWrapState#8 -> *18
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  owns#10 -> *65
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  $s -> *122
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#11 -> *122
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  staticWrapState#12 -> *122
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(28,10)
  owns#14 -> *65
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(28,5)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(28,10)
  $s -> *28
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(28,10)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@40010 -> true
%lbl%@39344 -> true
%lbl%@39544 -> true
%lbl%@39326 -> true
%lbl%@39988 -> true
%lbl%+38915 -> true
%lbl%+1480 -> true
%lbl%@40236 -> true
%lbl%@39680 -> true
%lbl%@39054 -> true
$position_marker -> true
%lbl%@39073 -> true
%lbl%@40258 -> false
call1198formal@p@0 -> *2
call1276formal@o@0 -> *2
call1050formal@o@0 -> *2
unique-value!81 -> *3
^^null_type -> *4
$max.i8 -> 9223372036854775807
#distTp1 -> *6
$fk_owns -> *7
$fk_emb_array -> *8
cev_global -> *9
call1198formal@v@0 -> -5829
^$#_onexit_t#4 -> *11
$s@1@@0 -> *12
unique-value!79 -> *13
$untyped_owner_owner -> *14
call914formal@o@0 -> *15
call1408formal@o@0 -> *15
call1128formal@p@0 -> *15
$max.u4 -> 4294967295
#tok$2^41.3 -> *17
prestate#7@0 -> *18
$s@3 -> *18
staticWrapState#8@0 -> *18
$fk_ref_cnt -> *19
^^field -> *20
$max.u2 -> 65535
loop_entered -> *22
unique-value!59 -> *23
Account.amount -> *24
$ctype_flat -> *25
$fk_as_array_first -> *26
unique-value!56 -> *27
$s@5 -> *28
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *29
unique-value!67 -> *30
#tok$1^26.5 -> *31
^$#state_t -> *32
^$#struct -> *33
^$#seq_version -> *34
^^u4 -> *35
^^nat -> *36
^$#volatile_version_t -> *37
$ctype_blob -> *38
$max.i2 -> 32767
unique-value!72 -> *40
unique-value!75 -> *41
P#amount -> -1
unique-value!90 -> *43
^^u2 -> *44
$min.i8 -> -9223372036854775808
prestate#6@1 -> *46
unique-value!85 -> *47
^^f4 -> *48
unique-value!92 -> *49
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *50
^^claim -> *51
AccountGroup.total -> *52
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *54
$me -> *55
^^bool -> *56
P#a -> *57
$max.i1 -> 127
cev_parameter -> *59
unique-value!55 -> *60
$untyped_owner -> *61
unique-value!63 -> *62
unique-value!74 -> *63
^$#ptrset -> *64
owns#10@0 -> *65
$set_empty -> *65
owns#2@0 -> *65
owns#5@0 -> *65
lambda@13 -> *65
owns#14@0 -> *65
^$##club -> *66
^^mathint -> *67
unique-value!66 -> *68
unique-value!60 -> *69
prestate#1@0 -> *70
prestate#3@0 -> *70
$s -> *70
$arch_ptr_size -> 8
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *72
$struct_zero -> *73
unique-value!80 -> *74
unique-value!88 -> *75
unique-value!84 -> *76
^$#_invalid_parameter_handler#7 -> *77
$min.i1 -> -128
unique-value!61 -> *79
conditional_moment -> *80
unique-value!65 -> *81
^^f8 -> *82
unique-value!87 -> *83
unique-value!89 -> *84
#tok$1^23.16 -> *85
$fk_base -> *86
#tok$1^28.5 -> *87
^^u8 -> *88
$arch_ptr_type -> *88
$ctype_ptr -> *89
unique-value!82 -> *90
$fk_vol_version -> *91
prestate#6@0 -> *92
$s@0@@0 -> *92
prestate#4@0 -> *92
$max.u1 -> 255
^^i1 -> *94
^^object -> *95
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *97
$ctype_spec_ptr -> *98
unique-value!58 -> *99
^^void -> *100
unique-value!62 -> *101
unique-value!70 -> *102
unique-value!93 -> *103
$fk_active_option -> *104
$ctype_array -> *105
unique-value!77 -> *106
cev_local -> *107
#tok$2^47.3 -> *108
@MV_state_const -> 74
$ctype_map -> *110
loop_register -> *111
$null -> *112
^^i4 -> *113
$fk_allocation_root -> *114
unique-value!68 -> *115
unique-value!57 -> *116
loop_exited -> *117
$min.i2 -> -32768
cev_implicit -> *119
#tok$1^6.1 -> *120
$s@2@@0 -> *121
prestate#11@0 -> *122
$s@4 -> *122
staticWrapState#12@0 -> *122
^$#account2.c..36689#5 -> *123
^^u1 -> *124
^AccountGroup -> *125
$primitive_emb_type -> *126
$no_claim -> *127
unique-value!71 -> *128
lambda@20 -> *129
prestate#3@1 -> *130
took_else_branch -> *131
^^i8 -> *132
took_then_branch -> *133
#tok$2^42.3 -> *134
unique-value!76 -> *135
unique-value!83 -> *136
#wrTime$1^13.1 -> 695
AccountGroup.creditCard -> *138
P#b -> *139
^$##thread_id -> *140
$min.i4 -> -2147483648
unique-value!64 -> *142
unique-value!69 -> *143
#tok$2^46.3 -> *144
$untyped_owner_type -> *145
^^i2 -> *146
^$#thread_id_t -> *147
^$#account2.c..36585#3 -> *148
unique-value!91 -> *149
unique-value!73 -> *150
#tok$1^22.5 -> *151
AccountGroup.giro -> *152
^$#vol_version -> *153
#tok$1^13.1 -> *154
unique-value!86 -> *155
call1128formal@v@0 -> 25001
#tok$2^25.1 -> *157
^$#_purecall_handler#6 -> *158
unique-value!78 -> *159
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *160
$cev_pc -> **$cev_pc
owns#14 -> **owns#14
staticWrapState#12 -> **staticWrapState#12
prestate#11 -> **prestate#11
owns#10 -> **owns#10
staticWrapState#8 -> **staticWrapState#8
prestate#7 -> **prestate#7
prestate#6 -> **prestate#6
prestate#4 -> **prestate#4
owns#5 -> **owns#5
prestate#3 -> **prestate#3
prestate#1 -> **prestate#1
owns#2 -> **owns#2
#stackframe -> **#stackframe
$thread_local -> {
  *12 *15 -> true
  *121 *2 -> true
  else -> true
}
$ptr_to -> {
  *97 -> *6
  else -> *6
}
$is_volatile_field -> {
  *161 -> true
  *162 -> true
  else -> true
}
$is_phys_field -> {
  *24 -> true
  *152 -> true
  *138 -> true
  *52 -> true
  *163 -> true
  else -> true
}
$owner -> {
  *70 *15 -> *55
  *92 *15 -> *55
  *92 *2 -> *55
  *12 *15 -> *55
  *12 *2 -> *55
  *121 *2 -> *55
  *18 *2 -> *55
  *122 *2 -> *55
  *122 *15 -> *55
  *28 *15 -> *55
  else -> *55
}
Store_[$ptr]$bool -> {
  *164 *15 false -> *165
  *165 *2 false -> *166
  *166 *2 true -> *167
  *167 *15 true -> *168
  else -> *165
}
$ptr -> {
  *169 0 -> *112
  *171 18446744073709557126 -> *127
  *173 361 -> *55
  *175 296 -> *61
  *173 4330 -> *14
  *178 18446744073709561304 -> *57
  *163 6159 -> *15
  *181 18446744073709552186 -> *139
  *163 711 -> *2
  *24 6159 -> *184
  *24 711 -> *185
  else -> *112
}
$closed -> {
  *70 *15 -> true
  *92 *15 -> false
  *92 *2 -> true
  *12 *2 -> false
  *12 *15 -> false
  *121 *2 -> false
  *18 *2 -> false
  *122 *2 -> true
  *122 *15 -> false
  *28 *15 -> true
  else -> false
}
$dot -> {
  *15 *24 -> *184
  *2 *24 -> *185
  else -> *184
}
$addr0 -> {
  *112 -> 0
  *127 -> 0
  *55 -> 361
  *61 -> 296
  *14 -> 4330
  *57 -> 6159
  *15 -> 6159
  *139 -> 711
  *2 -> 711
  *184 -> 6159
  *185 -> 711
  else -> 6159
}
$is_proper -> {
  *55 -> true
  *61 -> true
  *14 -> true
  *184 -> true
  *15 -> true
  *2 -> true
  *185 -> true
  else -> true
}
$is_wrapped -> {
  *18 *122 *2 *65 -> true
  *122 *28 *15 *65 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *15 -> true
  *2 -> true
  *184 -> true
  *185 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  74 11 -> true
  74 12 -> true
  74 13 -> true
  74 14 -> true
  74 15 -> true
  74 16 -> true
  74 17 -> true
  74 18 -> true
  74 19 -> true
  74 20 -> true
  74 21 -> true
  74 22 -> true
  74 23 -> true
  74 24 -> true
  74 25 -> true
  74 26 -> true
  74 27 -> true
  74 28 -> true
  74 29 -> true
  74 30 -> true
  74 31 -> true
  74 32 -> true
  74 33 -> true
  74 34 -> true
  74 35 -> true
  74 36 -> true
  74 37 -> true
  74 38 -> true
  74 39 -> true
  74 40 -> true
  74 41 -> true
  74 42 -> true
  74 43 -> true
  74 44 -> true
  74 45 -> true
  74 46 -> true
  74 47 -> true
  74 48 -> true
  74 49 -> true
  74 50 -> true
  74 51 -> true
  74 52 -> true
  74 53 -> true
  74 54 -> true
  74 55 -> true
  74 56 -> true
  74 57 -> true
  74 58 -> true
  74 59 -> true
  74 60 -> true
  74 61 -> true
  74 62 -> true
  74 63 -> true
  else -> true
}
$current_timestamp -> {
  *70 -> 695
  *92 -> 696
  *130 -> 696
  *12 -> 697
  *46 -> 697
  *121 -> 698
  *18 -> 699
  *122 -> 700
  *28 -> 701
  else -> 696
}
$as_primitive_field -> {
  *24 -> *24
  *152 -> *152
  *138 -> *138
  *52 -> *52
  *169 -> *169
  *254 -> *254
  *255 -> *255
  *161 -> *161
  *162 -> *162
  *256 -> *256
  *257 -> *257
  else -> *24
}
$start_release -> {
  *70 *70 -> *130
  *92 *92 -> *46
  else -> *130
}
$f_timestamp -> {
  *92 -> *258
  *130 -> *259
  *12 -> *260
  *46 -> *258
  *121 -> *260
  *18 -> *260
  *70 -> *259
  *122 -> *261
  *28 -> *262
  else -> *260
}
Select_[$ptr]$int -> {
  *260 *15 -> 696
  *263 *2 -> -5828
  *265 *15 -> 25001
  *259 *15 -> 695
  *266 *15 -> 25000
  *268 *15 -> 100
  *258 *15 -> 696
  *266 *2 -> -5828
  *258 *2 -> 695
  *268 *2 -> 110
  *260 *2 -> 697
  *263 *15 -> 25001
  *265 *2 -> -5829
  *271 *2 -> 87
  *261 *2 -> 700
  *261 *15 -> 696
  *273 *15 -> 87
  *271 *15 -> 100
  *262 *15 -> 701
  *259 *2 -> 695
  else -> 696
}
$inv2 -> {
  *70 *70 *15 *97 -> true
  *92 *92 *2 *97 -> true
  else -> true
}
$unchecked -> {
  *35 4294967296 -> 0
  *88 18446744073709551616 -> 0
  *35 -1 -> 4294967295
  *88 -1 -> 18446744073709551615
  *113 -10000 -> -10000
  *88 0 -> 0
  *88 -5806 -> 0
  *88 361 -> 361
  *88 296 -> 296
  *88 4330 -> 4330
  *88 -4289 -> 6159
  *88 6159 -> 6159
  *88 -4988 -> 711
  *88 711 -> 711
  else -> 0
}
$is_unwrapped -> {
  *70 *92 *15 -> true
  *92 *12 *2 -> true
  else -> true
}
$mutable -> {
  *12 *15 -> true
  *121 *2 -> true
  *18 *2 -> true
  *122 *15 -> true
  *92 *15 -> true
  *12 *2 -> true
  else -> true
}
$is_primitive -> {
  *94 -> true
  *146 -> true
  *113 -> true
  *132 -> true
  *124 -> true
  *44 -> true
  *35 -> true
  *88 -> true
  *48 -> true
  *82 -> true
  *56 -> true
  *100 -> true
  *95 -> true
  *20 -> true
  *4 -> true
  *51 -> false
  *37 -> false
  *67 -> true
  *36 -> true
  *64 -> true
  *32 -> true
  *33 -> true
  *147 -> false
  *145 -> false
  *140 -> true
  *66 -> true
  *97 -> false
  *125 -> false
  *6 -> true
  *50 -> true
  *160 -> true
  *148 -> true
  *11 -> true
  *123 -> true
  *158 -> true
  *77 -> true
  *126 -> false
  else -> true
}
$as_field_with_type -> {
  *24 *113 -> *24
  *152 *6 -> *152
  *138 *6 -> *138
  *52 *113 -> *52
  *169 *100 -> *169
  *173 *147 -> *173
  *175 *145 -> *175
  *254 *64 -> *254
  *255 *64 -> *255
  *161 *64 -> *161
  *162 *64 -> *162
  *256 *64 -> *256
  *257 *64 -> *257
  *163 *97 -> *163
  else -> *24
}
$is -> {
  *15 *97 -> true
  *2 *97 -> true
  else -> true
}
$post_unwrap -> {
  *70 *92 -> true
  *92 *12 -> true
  else -> true
}
$roots -> {
  *12 -> *280
  *121 -> *280
  *18 -> *280
  *70 -> *281
  *92 -> *282
  *122 -> *283
  *28 -> *284
  else -> *280
}
$invok_state -> {
  *70 -> true
  *92 -> true
  *12 -> true
  *121 -> true
  *18 -> true
  *122 -> true
  else -> true
}
$is_sequential_field -> {
  *254 -> true
  *255 -> true
  *256 -> true
  *24 -> true
  *257 -> true
  *152 -> true
  *138 -> true
  *52 -> true
  *169 -> true
  *161 -> false
  else -> true
}
$is_math_type -> {
  *95 -> true
  *20 -> true
  *4 -> true
  *67 -> true
  *36 -> true
  *64 -> true
  *32 -> true
  *33 -> true
  *140 -> true
  *66 -> true
  else -> true
}
$file_name_is -> {
  2 *29 -> true
  1 *72 -> true
  else -> true
}
$unchk_add -> {
  *88 0 0 -> 0
  *88 18446744073709557126 -18446744073709562932 -> 0
  *88 361 0 -> 361
  *88 296 0 -> 296
  *88 4330 0 -> 4330
  *88 18446744073709561304 -18446744073709565593 -> 6159
  *88 6159 0 -> 6159
  *88 18446744073709552186 -18446744073709557174 -> 711
  *88 711 0 -> 711
  else -> 0
}
$full_stop -> {
  *70 -> true
  *92 -> true
  *12 -> true
  *121 -> true
  *18 -> true
  *122 -> true
  else -> true
}
$writes_at -> {
  695 -> *129
  else -> *129
}
$call_transition -> {
  *12 *121 -> true
  *121 *18 -> true
  *70 *92 -> true
  *92 *12 -> true
  *18 *122 -> true
  *122 *28 -> true
  else -> true
}
$set_cardinality -> {
  *65 -> 0
  else -> 0
}
$is_claimable -> {
  *51 -> true
  *37 -> false
  *147 -> false
  *145 -> false
  *97 -> false
  *125 -> false
  *94 -> false
  *146 -> false
  *113 -> false
  *132 -> false
  *124 -> false
  *44 -> false
  *35 -> false
  *88 -> false
  *48 -> false
  *82 -> false
  *56 -> false
  *100 -> false
  *95 -> false
  *20 -> false
  *4 -> false
  *67 -> false
  *36 -> false
  *64 -> false
  *32 -> false
  *33 -> false
  *140 -> false
  *66 -> false
  *50 -> false
  *160 -> false
  *148 -> false
  *11 -> false
  *123 -> false
  *158 -> false
  *77 -> false
  *6 -> false
  else -> false
}
$is_proper_field -> {
  *24 -> true
  *152 -> true
  *138 -> true
  *52 -> true
  *173 -> true
  *175 -> true
  *169 -> true
  *254 -> true
  *255 -> true
  *161 -> true
  *162 -> true
  *256 -> true
  *257 -> true
  *163 -> true
  else -> true
}
$wrapped -> {
  *70 *15 *97 -> true
  *92 *2 *97 -> true
  *122 *2 *97 -> true
  *28 *15 *97 -> true
  else -> true
}
$top_writable -> {
  *70 695 *15 -> true
  *92 695 *2 -> true
  *18 695 *2 -> true
  *122 695 *15 -> true
  else -> true
}
$f_closed -> {
  *12 -> *166
  *121 -> *166
  *18 -> *166
  *70 -> *164
  *92 -> *165
  *122 -> *167
  *28 -> *168
  else -> *166
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *345 *24 -> *263
  *346 *256 -> *268
  *347 *24 -> *265
  *348 *24 -> *265
  *349 *24 -> *266
  *349 *256 -> *268
  *346 *24 -> *265
  *345 *256 -> *268
  *347 *256 -> *271
  *348 *256 -> *273
  else -> *265
}
$field_kind -> {
  *24 -> *86
  *152 -> *86
  *138 -> *86
  *52 -> *86
  *169 -> *114
  *173 -> *114
  *175 -> *114
  *254 -> *7
  *255 -> *7
  *161 -> *7
  *162 -> *7
  *256 -> *7
  *257 -> *7
  *163 -> *114
  else -> *7
}
Select_[$ptr]$bool -> {
  *164 *15 -> true
  *165 *15 -> false
  *165 *2 -> true
  *164 *2 -> true
  *166 *2 -> false
  *166 *15 -> false
  *167 *2 -> true
  *167 *15 -> false
  *168 *15 -> true
  else -> true
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *173 -> *173
  *175 -> *175
  *163 -> *163
  else -> *173
}
$pre_static_wrap -> {
  *18 -> true
  *122 -> true
  else -> true
}
$phys_ptr_cast -> {
  *57 *97 -> *15
  *139 *97 -> *2
  *15 *97 -> *15
  *2 *97 -> *2
  *184 *113 -> *184
  *185 *113 -> *185
  else -> *15
}
Store_[$ptr]$int -> {
  *259 *15 696 -> *258
  *258 *2 697 -> *260
  *266 *15 25001 -> *263
  *263 *2 -5829 -> *265
  *268 *2 87 -> *271
  *271 *15 87 -> *273
  *260 *2 700 -> *261
  *261 *15 701 -> *262
  else -> *258
}
$prim_emb -> {
  *184 -> *15
  *185 -> *2
  else -> *15
}
$vs_state -> {
  *73 -> *350
  else -> *350
}
$trans_call_transition -> {
  *70 *92 -> true
  *70 *12 -> true
  *92 *12 -> true
  *70 *121 -> true
  *92 *121 -> true
  *12 *121 -> true
  *70 *18 -> true
  *92 *18 -> true
  *12 *18 -> true
  *121 *18 -> true
  *70 *122 -> true
  *92 *122 -> true
  *12 *122 -> true
  *121 *122 -> true
  *18 *122 -> true
  *70 *28 -> true
  *92 *28 -> true
  *12 *28 -> true
  *121 *28 -> true
  *18 *28 -> true
  *122 *28 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *126 -> *60
  *94 -> *27
  *146 -> *116
  *113 -> *99
  *132 -> *23
  *124 -> *69
  *44 -> *79
  *35 -> *101
  *88 -> *62
  *100 -> *142
  *56 -> *81
  *48 -> *68
  *82 -> *30
  *95 -> *115
  *20 -> *143
  *4 -> *102
  *51 -> *128
  *67 -> *40
  *36 -> *150
  *64 -> *63
  *32 -> *41
  *37 -> *135
  *33 -> *106
  *34 -> *159
  *153 -> *13
  *147 -> *74
  *145 -> *3
  *140 -> *90
  *66 -> *136
  *97 -> *76
  *125 -> *47
  *50 -> *155
  *160 -> *83
  *148 -> *75
  *11 -> *84
  *123 -> *43
  *158 -> *149
  *77 -> *49
  *6 -> *103
  else -> *60
}
$instantiate_int -> {
  25000 -> true
  100 -> true
  110 -> true
  -5828 -> true
  -5829 -> true
  25001 -> true
  else -> true
}
$unchk_sub -> {
  *113 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *55 -> *173
  *61 -> *175
  *14 -> *173
  *127 -> *171
  *112 -> *169
  *184 -> *24
  *185 -> *24
  *57 -> *178
  *15 -> *163
  *139 -> *181
  *2 -> *163
  else -> *173
}
$heap -> {
  *12 -> *349
  *121 -> *345
  *18 -> *346
  *122 -> *347
  *28 -> *348
  *70 -> *349
  *92 -> *349
  else -> *349
}
$f_owns -> {
  *51 -> *254
  *37 -> *255
  *147 -> *161
  *145 -> *162
  *97 -> *256
  *125 -> *257
  else -> *254
}
$field_type -> {
  *171 -> *51
  *24 -> *113
  *152 -> *6
  *138 -> *6
  *52 -> *113
  *173 -> *147
  *175 -> *145
  *169 -> *100
  *254 -> *64
  *255 -> *64
  *161 -> *64
  *162 -> *64
  *256 -> *64
  *257 -> *64
  *163 -> *97
  else -> *64
}
$has_field_at0 -> {
  *97 *24 -> true
  *125 *152 -> true
  else -> true
}
$function_entry -> {
  *70 -> true
  else -> true
}
$good_state_ext -> {
  *154 *70 -> true
  *151 *92 -> true
  *85 *12 -> true
  *54 *121 -> true
  *31 *18 -> true
  *85 *122 -> true
  *87 *28 -> true
  else -> true
}
$f_owner -> {
  *92 -> *352
  *130 -> *352
  *12 -> *352
  *46 -> *352
  *121 -> *352
  *18 -> *352
  *122 -> *352
  *28 -> *352
  *70 -> *352
  else -> *352
}
$type_project_0 -> {
  *6 -> *97
  else -> *97
}
Store_[$field][$ptr]$int -> {
  *349 *24 *263 -> *345
  *345 *24 *265 -> *346
  *346 *256 *271 -> *347
  *347 *256 *273 -> *348
  else -> *345
}
$type_branch -> {
  *94 -> *25
  *146 -> *25
  *113 -> *25
  *132 -> *25
  *124 -> *25
  *44 -> *25
  *35 -> *25
  *88 -> *25
  *48 -> *25
  *82 -> *25
  *56 -> *25
  *100 -> *25
  *95 -> *25
  *20 -> *25
  *4 -> *25
  *51 -> *25
  *37 -> *25
  *67 -> *25
  *36 -> *25
  *64 -> *25
  *32 -> *25
  *33 -> *25
  *147 -> *25
  *145 -> *25
  *140 -> *25
  *66 -> *25
  *97 -> *25
  *125 -> *25
  *50 -> *25
  *160 -> *25
  *148 -> *25
  *11 -> *25
  *123 -> *25
  *158 -> *25
  *77 -> *25
  *6 -> *89
  else -> *25
}
$ptrset_to_int -> {
  *65 -> 87
  else -> 87
}
$in_range_t -> {
  *35 4294967296 -> false
  *35 0 -> true
  *88 18446744073709551616 -> false
  *88 0 -> true
  *35 -1 -> false
  *35 4294967295 -> true
  *88 -1 -> false
  *88 18446744073709551615 -> true
  *113 -10000 -> true
  *88 -5806 -> false
  *88 361 -> true
  *88 296 -> true
  *88 4330 -> true
  *88 -4289 -> false
  *88 6159 -> true
  *113 25000 -> true
  *88 -4988 -> false
  *88 711 -> true
  *113 -5828 -> true
  *113 -5829 -> true
  *113 25001 -> true
  else -> true
}
Select_[$ptr]$ptr -> {
  *352 *15 -> *55
  *281 *15 -> *15
  *282 *15 -> *15
  *352 *2 -> *55
  *282 *2 -> *2
  *281 *2 -> *2
  *280 *15 -> *15
  *280 *2 -> *2
  *283 *15 -> *15
  *283 *2 -> *2
  *284 *15 -> *15
  *284 *2 -> *2
  else -> *15
}
$spec_ptr_cast -> {
  *55 *147 -> *55
  *61 *145 -> *61
  *14 *147 -> *14
  else -> *55
}
$set_in_pos -> {
  *15 *164 -> true
  *2 *165 -> true
  *2 *164 -> true
  *2 *167 -> true
  *15 *168 -> true
  else -> true
}
$is_union_type -> {
  *97 -> false
  *125 -> false
  else -> false
}
$field_parent_type -> {
  *24 -> *97
  *152 -> *125
  *138 -> *125
  *52 -> *125
  *173 -> *147
  *175 -> *145
  *169 -> *126
  *254 -> *51
  *255 -> *37
  *161 -> *147
  *162 -> *145
  *256 -> *97
  *257 -> *125
  *163 -> *97
  else -> *125
}
$sizeof -> {
  *94 -> 1
  *146 -> 2
  *113 -> 4
  *132 -> 8
  *124 -> 1
  *44 -> 2
  *35 -> 4
  *88 -> 8
  *48 -> 4
  *82 -> 8
  *56 -> 1
  *100 -> 1
  *95 -> 1
  *20 -> 1
  *4 -> 1
  *51 -> 1
  *37 -> 1
  *67 -> 1
  *36 -> 1
  *64 -> 1
  *32 -> 1
  *33 -> 1
  *147 -> 1
  *145 -> 1
  *140 -> 1
  *66 -> 1
  *97 -> 4
  *125 -> 24
  *50 -> 8
  *160 -> 8
  *148 -> 8
  *11 -> 8
  *123 -> 8
  *158 -> 8
  *77 -> 8
  *6 -> 8
  else -> 1
}
$is_ghost_field -> {
  *254 -> true
  *255 -> true
  *161 -> true
  *162 -> true
  *256 -> true
  *257 -> true
  *24 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *55 -> true
  *61 -> true
  *14 -> true
  *15 -> false
  *2 -> false
  else -> true
}
$is_fnptr_type -> {
  *50 -> true
  *160 -> true
  *148 -> true
  *11 -> true
  *123 -> true
  *158 -> true
  *77 -> true
  else -> true
}
$f_root -> {
  *100 -> *169
  *147 -> *173
  *145 -> *175
  *97 -> *163
  else -> *169
}
$owns -> {
  *70 *15 -> *65
  *92 *2 -> *65
  *122 *2 -> *65
  *28 *15 -> *65
  *92 *15 -> *65
  *12 *2 -> *65
  else -> *65
}
$pre_static_unwrap -> {
  *70 -> true
  *92 -> true
  else -> true
}
$set_eq -> {
  *65 *65 -> true
  else -> true
}
$int_to_ptrset -> {
  100 -> *65
  110 -> *65
  87 -> *65
  else -> *65
}
$maybe_emb -> {
  *15 -> *15
  *2 -> *2
  else -> *15
}
$is_span_sequential -> {
  *97 -> true
  *125 -> true
  else -> true
}
$good_state -> {
  *350 -> true
  *70 -> true
  *92 -> true
  *130 -> false
  *12 -> true
  *46 -> false
  *121 -> true
  *18 -> true
  *122 -> true
  *28 -> true
  else -> true
}
$typemap -> {
  *352 -> *353
  else -> *353
}
$field_offset -> {
  *24 -> 0
  *152 -> 0
  *138 -> 8
  *52 -> 16
  *171 -> -18446744073709562932
  *173 -> 0
  *175 -> 0
  *169 -> 0
  *178 -> -18446744073709565593
  *163 -> 0
  *181 -> -18446744073709557174
  else -> 0
}
$base -> {
  *112 -> 0
  *55 -> 361
  *61 -> 296
  *14 -> 4330
  *127 -> 18446744073709557126
  *57 -> 18446744073709561304
  *15 -> 6159
  *139 -> 18446744073709552186
  *2 -> 711
  *184 -> 6159
  *185 -> 711
  else -> 6159
}
$as_in_range_t -> {
  *94 -> *94
  *146 -> *146
  *113 -> *113
  *132 -> *132
  *124 -> *124
  *44 -> *44
  *35 -> *35
  *88 -> *88
  *36 -> *36
  else -> *94
}
$field_arr_root -> {
  *24 -> *24
  *152 -> *152
  *138 -> *138
  *52 -> *52
  *169 -> *169
  *173 -> *173
  *175 -> *175
  *254 -> *254
  *255 -> *255
  *161 -> *161
  *162 -> *162
  *256 -> *256
  *257 -> *257
  *163 -> *163
  else -> *24
}
*** STATE <initial>
  $s -> *70
  $cev_pc -> **$cev_pc
  P#a -> *57
  P#b -> *139
  P#amount -> -1
  owns#14 -> **owns#14
  staticWrapState#12 -> **staticWrapState#12
  prestate#11 -> **prestate#11
  owns#10 -> **owns#10
  staticWrapState#8 -> **staticWrapState#8
  prestate#7 -> **prestate#7
  prestate#6 -> **prestate#6
  prestate#4 -> **prestate#4
  owns#5 -> **owns#5
  prestate#3 -> **prestate#3
  prestate#1 -> **prestate#1
  owns#2 -> **owns#2
  #wrTime$1^13.1 -> 695
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(13,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#2 -> *65
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#1 -> *70
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
  prestate#3 -> *70
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,12)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#3 -> *130
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(22,5)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *92
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  owns#5 -> *65
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#4 -> *92
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  prestate#6 -> *92
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#6 -> *46
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *12
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,5)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(25,5)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,5)
  $s -> *121
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,17)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(26,5)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *18
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#7 -> *18
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  staticWrapState#8 -> *18
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  owns#10 -> *65
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
  $s -> *122
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(23,16)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  prestate#11 -> *122
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
  staticWrapState#12 -> *122
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(28,10)
  owns#14 -> *65
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(28,5)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(28,10)
  $s -> *28
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(28,10)
*** END_STATE
*** STATE c:\users\yusuf\onedrive\desktop\sommersemester 2022\c verification module [vcc]\course material\simpleexamplesexcercise\account.c(28,10)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%+40336 -> true
%lbl%+1948 -> true
$position_marker -> true
%lbl%@40405 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
P#amount@@0 -> 407
^$#_onexit_t#4 -> *10
unique-value!79 -> *11
$untyped_owner_owner -> *12
$max.u4 -> 4294967295
#tok$2^41.3 -> *14
#wrTime$2^25.1 -> 755
$fk_ref_cnt -> *16
^^field -> *17
$max.u2 -> 65535
loop_entered -> *19
unique-value!59 -> *20
Account.amount -> *21
$ctype_flat -> *22
$fk_as_array_first -> *23
unique-value!56 -> *24
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *25
unique-value!67 -> *26
#tok$1^26.5 -> *27
^$#state_t -> *28
^$#struct -> *29
^$#seq_version -> *30
^^u4 -> *31
^^nat -> *32
^$#volatile_version_t -> *33
$max.i2 -> 32767
$ctype_blob -> *35
unique-value!72 -> *36
unique-value!75 -> *37
unique-value!90 -> *38
^^u2 -> *39
$min.i8 -> -9223372036854775808
unique-value!85 -> *41
^^f4 -> *42
unique-value!92 -> *43
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *44
^^claim -> *45
AccountGroup.total -> *46
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *48
$me -> *49
^^bool -> *50
$max.i1 -> 127
cev_parameter -> *52
unique-value!55 -> *53
$untyped_owner -> *54
unique-value!63 -> *55
unique-value!74 -> *56
^$#ptrset -> *57
^$##club -> *58
^^mathint -> *59
unique-value!66 -> *60
unique-value!60 -> *61
$arch_ptr_size -> 8
$struct_zero -> *63
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *64
unique-value!80 -> *65
P#a@@0 -> *66
unique-value!88 -> *67
unique-value!84 -> *68
^$#_invalid_parameter_handler#7 -> *69
$min.i1 -> -128
unique-value!61 -> *71
conditional_moment -> *72
unique-value!65 -> *73
^^f8 -> *74
unique-value!87 -> *75
unique-value!89 -> *76
#tok$1^23.16 -> *77
$fk_base -> *78
#tok$1^28.5 -> *79
^^u8 -> *80
$arch_ptr_type -> *80
$set_empty -> *81
lambda@13 -> *81
$ctype_ptr -> *82
unique-value!82 -> *83
$fk_vol_version -> *84
$s -> *85
$max.u1 -> 255
^^i1 -> *87
^^object -> *88
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *90
$ctype_spec_ptr -> *91
unique-value!58 -> *92
^^void -> *93
unique-value!62 -> *94
unique-value!70 -> *95
unique-value!93 -> *96
$fk_active_option -> *97
$ctype_array -> *98
unique-value!77 -> *99
cev_local -> *100
#tok$2^47.3 -> *101
@MV_state_const -> 74
$ctype_map -> *103
loop_register -> *104
$null -> *105
^^i4 -> *106
$fk_allocation_root -> *107
unique-value!68 -> *108
unique-value!57 -> *109
loop_exited -> *110
$min.i2 -> -32768
cev_implicit -> *112
#tok$1^6.1 -> *113
lambda@21 -> *114
^$#account2.c..36689#5 -> *115
^^u1 -> *116
^AccountGroup -> *117
$primitive_emb_type -> *118
$no_claim -> *119
unique-value!71 -> *120
took_else_branch -> *121
^^i8 -> *122
took_then_branch -> *123
#tok$2^42.3 -> *124
unique-value!76 -> *125
unique-value!83 -> *126
AccountGroup.creditCard -> *127
^$##thread_id -> *128
$min.i4 -> -2147483648
unique-value!64 -> *130
unique-value!69 -> *131
#tok$2^46.3 -> *132
$untyped_owner_type -> *133
^^i2 -> *134
^$#thread_id_t -> *135
^$#account2.c..36585#3 -> *136
unique-value!91 -> *137
unique-value!73 -> *138
#tok$1^22.5 -> *139
AccountGroup.giro -> *140
^$#vol_version -> *141
#tok$1^13.1 -> *142
unique-value!86 -> *143
#tok$2^25.1 -> *144
^$#_purecall_handler#6 -> *145
unique-value!78 -> *146
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *147
$cev_pc -> **$cev_pc
P#b@@0 -> **P#b@@0
#stackframe -> **#stackframe
$owner -> {
  *85 *148 -> *54
  else -> *54
}
$ptr_to -> {
  *90 -> *5
  else -> *5
}
$is_volatile_field -> {
  *149 -> true
  *150 -> true
  else -> true
}
$is_phys_field -> {
  *21 -> true
  *140 -> true
  *127 -> true
  *46 -> true
  *151 -> true
  *152 -> true
  else -> true
}
$ptr -> {
  *153 0 -> *105
  *155 18446744073709557126 -> *119
  *157 361 -> *49
  *159 296 -> *54
  *157 4330 -> *12
  *21 793 -> *163
  *151 793 -> *148
  *164 18446744073709552949 -> *166
  *167 18446744073709560297 -> *66
  *152 341 -> *170
  else -> *105
}
$dot -> {
  *148 *21 -> *163
  else -> *163
}
$addr0 -> {
  *105 -> 0
  *119 -> 0
  *49 -> 361
  *54 -> 296
  *12 -> 4330
  *148 -> 793
  *166 -> 793
  *170 -> 341
  *66 -> 341
  *163 -> 793
  else -> 793
}
$is_proper -> {
  *49 -> true
  *54 -> true
  *12 -> true
  *163 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *148 -> true
  *163 -> true
  *170 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  else -> true
}
$current_timestamp -> {
  *85 -> 755
  else -> 755
}
$as_primitive_field -> {
  *21 -> *21
  *140 -> *140
  *127 -> *127
  *46 -> *46
  *153 -> *153
  *174 -> *174
  *175 -> *175
  *149 -> *149
  *150 -> *150
  *176 -> *176
  *177 -> *177
  else -> *21
}
$f_timestamp -> {
  *85 -> *178
  else -> *178
}
Select_[$ptr]$int -> {
  *179 *170 -> 76
  *178 *148 -> -651
  else -> 76
}
$unchecked -> {
  *31 4294967296 -> 0
  *80 18446744073709551616 -> 0
  *31 -1 -> 4294967295
  *80 -1 -> 18446744073709551615
  *106 -10000 -> -10000
  *80 0 -> 0
  *80 -5806 -> 0
  *80 361 -> 361
  *80 296 -> 296
  *80 4330 -> 4330
  *80 -8121 -> 793
  *80 793 -> 793
  *80 -608 -> 341
  *80 341 -> 341
  else -> 0
}
$mutable -> {
  *85 *148 -> false
  else -> false
}
$is_primitive -> {
  *87 -> true
  *134 -> true
  *106 -> true
  *122 -> true
  *116 -> true
  *39 -> true
  *31 -> true
  *80 -> true
  *42 -> true
  *74 -> true
  *50 -> true
  *93 -> true
  *88 -> true
  *17 -> true
  *3 -> true
  *45 -> false
  *33 -> false
  *59 -> true
  *32 -> true
  *57 -> true
  *28 -> true
  *29 -> true
  *135 -> false
  *133 -> false
  *128 -> true
  *58 -> true
  *90 -> false
  *117 -> false
  *5 -> true
  *44 -> true
  *147 -> true
  *136 -> true
  *10 -> true
  *115 -> true
  *145 -> true
  *69 -> true
  *118 -> false
  else -> true
}
$as_field_with_type -> {
  *21 *106 -> *21
  *140 *5 -> *140
  *127 *5 -> *127
  *46 *106 -> *46
  *153 *93 -> *153
  *157 *135 -> *157
  *159 *133 -> *159
  *174 *57 -> *174
  *175 *57 -> *175
  *149 *57 -> *149
  *150 *57 -> *150
  *176 *57 -> *176
  *177 *57 -> *177
  *151 *90 -> *151
  *152 *117 -> *152
  else -> *21
}
$invok_state -> {
  *85 -> true
  else -> true
}
$is_sequential_field -> {
  *174 -> true
  *175 -> true
  *176 -> true
  *21 -> true
  *177 -> true
  *140 -> true
  *127 -> true
  *46 -> true
  *153 -> true
  else -> true
}
$is_math_type -> {
  *88 -> true
  *17 -> true
  *3 -> true
  *59 -> true
  *32 -> true
  *57 -> true
  *28 -> true
  *29 -> true
  *128 -> true
  *58 -> true
  else -> true
}
$file_name_is -> {
  2 *25 -> true
  1 *64 -> true
  else -> true
}
$unchk_add -> {
  *80 0 0 -> 0
  *80 18446744073709557126 -18446744073709562932 -> 0
  *80 361 0 -> 361
  *80 296 0 -> 296
  *80 4330 0 -> 4330
  *80 18446744073709552949 -18446744073709561070 -> 793
  *80 793 0 -> 793
  *80 18446744073709560297 -18446744073709560905 -> 341
  *80 341 0 -> 341
  else -> 0
}
$full_stop -> {
  *85 -> true
  else -> true
}
$writes_at -> {
  755 -> *114
  else -> *114
}
$set_cardinality -> {
  *81 -> 0
  else -> 0
}
$is_claimable -> {
  *45 -> true
  *33 -> false
  *135 -> false
  *133 -> false
  *90 -> false
  *117 -> false
  *87 -> false
  *134 -> false
  *106 -> false
  *122 -> false
  *116 -> false
  *39 -> false
  *31 -> false
  *80 -> false
  *42 -> false
  *74 -> false
  *50 -> false
  *93 -> false
  *88 -> false
  *17 -> false
  *3 -> false
  *59 -> false
  *32 -> false
  *57 -> false
  *28 -> false
  *29 -> false
  *128 -> false
  *58 -> false
  *44 -> false
  *147 -> false
  *136 -> false
  *10 -> false
  *115 -> false
  *145 -> false
  *69 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *21 -> true
  *140 -> true
  *127 -> true
  *46 -> true
  *157 -> true
  *159 -> true
  *153 -> true
  *174 -> true
  *175 -> true
  *149 -> true
  *150 -> true
  *176 -> true
  *177 -> true
  *151 -> true
  *152 -> true
  else -> true
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *308 *140 -> *179
  else -> *179
}
$field_kind -> {
  *21 -> *78
  *140 -> *78
  *127 -> *78
  *46 -> *78
  *153 -> *107
  *157 -> *107
  *159 -> *107
  *174 -> *6
  *175 -> *6
  *149 -> *6
  *150 -> *6
  *176 -> *6
  *177 -> *6
  *151 -> *107
  *152 -> *107
  else -> *6
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *157 -> *157
  *159 -> *159
  *151 -> *151
  *152 -> *152
  else -> *157
}
$phys_ptr_cast -> {
  *66 *117 -> *170
  *166 *90 -> *148
  *148 *90 -> *148
  *170 *117 -> *170
  *163 *106 -> *163
  else -> *148
}
$prim_emb -> {
  *163 -> *148
  else -> *148
}
$vs_state -> {
  *63 -> *309
  else -> *309
}
distinct-aux-f!!54 -> {
  *118 -> *53
  *87 -> *24
  *134 -> *109
  *106 -> *92
  *122 -> *20
  *116 -> *61
  *39 -> *71
  *31 -> *94
  *80 -> *55
  *93 -> *130
  *50 -> *73
  *42 -> *60
  *74 -> *26
  *88 -> *108
  *17 -> *131
  *3 -> *95
  *45 -> *120
  *59 -> *36
  *32 -> *138
  *57 -> *56
  *28 -> *37
  *33 -> *125
  *29 -> *99
  *30 -> *146
  *141 -> *11
  *135 -> *65
  *133 -> *2
  *128 -> *83
  *58 -> *126
  *90 -> *68
  *117 -> *41
  *44 -> *143
  *147 -> *75
  *136 -> *67
  *10 -> *76
  *115 -> *38
  *145 -> *137
  *69 -> *43
  *5 -> *96
  else -> *53
}
$unchk_sub -> {
  *106 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *49 -> *157
  *54 -> *159
  *12 -> *157
  *119 -> *155
  *105 -> *153
  *163 -> *21
  *148 -> *151
  *170 -> *152
  *166 -> *164
  *66 -> *167
  else -> *157
}
$heap -> {
  *85 -> *308
  else -> *308
}
$f_owns -> {
  *45 -> *174
  *33 -> *175
  *135 -> *149
  *133 -> *150
  *90 -> *176
  *117 -> *177
  else -> *174
}
$field_type -> {
  *155 -> *45
  *21 -> *106
  *140 -> *5
  *127 -> *5
  *46 -> *106
  *157 -> *135
  *159 -> *133
  *153 -> *93
  *174 -> *57
  *175 -> *57
  *149 -> *57
  *150 -> *57
  *176 -> *57
  *177 -> *57
  *151 -> *90
  *152 -> *117
  else -> *57
}
$has_field_at0 -> {
  *90 *21 -> true
  *117 *140 -> true
  else -> true
}
$function_entry -> {
  *85 -> true
  else -> true
}
$good_state_ext -> {
  *144 *85 -> true
  else -> true
}
$f_owner -> {
  *85 -> *311
  else -> *311
}
$type_project_0 -> {
  *5 -> *90
  else -> *90
}
Select_[$ptr]$ptr -> {
  *311 *148 -> *54
  else -> *54
}
$type_branch -> {
  *87 -> *22
  *134 -> *22
  *106 -> *22
  *122 -> *22
  *116 -> *22
  *39 -> *22
  *31 -> *22
  *80 -> *22
  *42 -> *22
  *74 -> *22
  *50 -> *22
  *93 -> *22
  *88 -> *22
  *17 -> *22
  *3 -> *22
  *45 -> *22
  *33 -> *22
  *59 -> *22
  *32 -> *22
  *57 -> *22
  *28 -> *22
  *29 -> *22
  *135 -> *22
  *133 -> *22
  *128 -> *22
  *58 -> *22
  *90 -> *22
  *117 -> *22
  *44 -> *22
  *147 -> *22
  *136 -> *22
  *10 -> *22
  *115 -> *22
  *145 -> *22
  *69 -> *22
  *5 -> *82
  else -> *22
}
$maybe_emb -> {
  *148 -> *148
  else -> *148
}
$in_range_t -> {
  *31 4294967296 -> false
  *31 0 -> true
  *80 18446744073709551616 -> false
  *80 0 -> true
  *31 -1 -> false
  *31 4294967295 -> true
  *80 -1 -> false
  *80 18446744073709551615 -> true
  *106 -10000 -> true
  *80 -5806 -> false
  *80 361 -> true
  *80 296 -> true
  *80 4330 -> true
  *80 -8121 -> false
  *80 793 -> true
  *80 -608 -> false
  *80 341 -> true
  else -> true
}
$spec_ptr_cast -> {
  *49 *135 -> *49
  *54 *133 -> *54
  *12 *135 -> *12
  else -> *49
}
$is_union_type -> {
  *90 -> false
  *117 -> false
  else -> false
}
$field_parent_type -> {
  *21 -> *90
  *140 -> *117
  *127 -> *117
  *46 -> *117
  *157 -> *135
  *159 -> *133
  *153 -> *118
  *174 -> *45
  *175 -> *33
  *149 -> *135
  *150 -> *133
  *176 -> *90
  *177 -> *117
  *151 -> *90
  *152 -> *117
  else -> *117
}
$sizeof -> {
  *87 -> 1
  *134 -> 2
  *106 -> 4
  *122 -> 8
  *116 -> 1
  *39 -> 2
  *31 -> 4
  *80 -> 8
  *42 -> 4
  *74 -> 8
  *50 -> 1
  *93 -> 1
  *88 -> 1
  *17 -> 1
  *3 -> 1
  *45 -> 1
  *33 -> 1
  *59 -> 1
  *32 -> 1
  *57 -> 1
  *28 -> 1
  *29 -> 1
  *135 -> 1
  *133 -> 1
  *128 -> 1
  *58 -> 1
  *90 -> 4
  *117 -> 24
  *44 -> 8
  *147 -> 8
  *136 -> 8
  *10 -> 8
  *115 -> 8
  *145 -> 8
  *69 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *174 -> true
  *175 -> true
  *149 -> true
  *150 -> true
  *176 -> true
  *177 -> true
  *21 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *49 -> true
  *54 -> true
  *12 -> true
  *148 -> false
  else -> true
}
$is_fnptr_type -> {
  *44 -> true
  *147 -> true
  *136 -> true
  *10 -> true
  *115 -> true
  *145 -> true
  *69 -> true
  else -> true
}
$f_root -> {
  *93 -> *153
  *135 -> *157
  *133 -> *159
  *90 -> *151
  *117 -> *152
  else -> *153
}
$int_to_ptr -> {
  76 -> *166
  else -> *166
}
$is_span_sequential -> {
  *90 -> true
  *117 -> true
  else -> true
}
$good_state -> {
  *309 -> true
  *85 -> true
  else -> true
}
$field_offset -> {
  *21 -> 0
  *140 -> 0
  *127 -> 8
  *46 -> 16
  *155 -> -18446744073709562932
  *157 -> 0
  *159 -> 0
  *153 -> 0
  *151 -> 0
  *152 -> 0
  *164 -> -18446744073709561070
  *167 -> -18446744073709560905
  else -> 0
}
$base -> {
  *105 -> 0
  *49 -> 361
  *54 -> 296
  *12 -> 4330
  *119 -> 18446744073709557126
  *163 -> 793
  *148 -> 793
  *170 -> 341
  *166 -> 18446744073709552949
  *66 -> 18446744073709560297
  else -> 793
}
$as_in_range_t -> {
  *87 -> *87
  *134 -> *134
  *106 -> *106
  *122 -> *122
  *116 -> *116
  *39 -> *39
  *31 -> *31
  *80 -> *80
  *32 -> *32
  else -> *87
}
$field_arr_root -> {
  *21 -> *21
  *140 -> *140
  *127 -> *127
  *46 -> *46
  *153 -> *153
  *157 -> *157
  *159 -> *159
  *174 -> *174
  *175 -> *175
  *149 -> *149
  *150 -> *150
  *176 -> *176
  *177 -> *177
  *151 -> *151
  *152 -> *152
  else -> *21
}
*** STATE <initial>
  $s -> *85
  $cev_pc -> **$cev_pc
  P#a -> *66
  P#b -> **P#b@@0
  P#amount -> 407
  #wrTime$2^25.1 -> 755
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(25,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%+40336 -> true
%lbl%+1948 -> true
%lbl%@40405 -> true
$position_marker -> true
%lbl%@40436 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
P#amount@@0 -> 407
^$#_onexit_t#4 -> *10
unique-value!79 -> *11
$untyped_owner_owner -> *12
$max.u4 -> 4294967295
#tok$2^41.3 -> *14
#wrTime$2^25.1 -> 4809
$fk_ref_cnt -> *16
^^field -> *17
$max.u2 -> 65535
loop_entered -> *19
unique-value!59 -> *20
Account.amount -> *21
$ctype_flat -> *22
$fk_as_array_first -> *23
unique-value!56 -> *24
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *25
unique-value!67 -> *26
#tok$1^26.5 -> *27
^$#state_t -> *28
^$#struct -> *29
^$#seq_version -> *30
^^u4 -> *31
^^nat -> *32
^$#volatile_version_t -> *33
$max.i2 -> 32767
$ctype_blob -> *35
unique-value!72 -> *36
unique-value!75 -> *37
unique-value!90 -> *38
^^u2 -> *39
$min.i8 -> -9223372036854775808
unique-value!85 -> *41
^^f4 -> *42
unique-value!92 -> *43
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *44
^^claim -> *45
AccountGroup.total -> *46
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *48
$me -> *49
^^bool -> *50
$max.i1 -> 127
cev_parameter -> *52
unique-value!55 -> *53
$untyped_owner -> *54
unique-value!63 -> *55
unique-value!74 -> *56
^$#ptrset -> *57
^$##club -> *58
^^mathint -> *59
unique-value!66 -> *60
unique-value!60 -> *61
$arch_ptr_size -> 8
$struct_zero -> *63
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *64
unique-value!80 -> *65
P#a@@0 -> *66
unique-value!88 -> *67
unique-value!84 -> *68
^$#_invalid_parameter_handler#7 -> *69
$min.i1 -> -128
unique-value!61 -> *71
conditional_moment -> *72
unique-value!65 -> *73
^^f8 -> *74
unique-value!87 -> *75
unique-value!89 -> *76
#tok$1^23.16 -> *77
$fk_base -> *78
#tok$1^28.5 -> *79
^^u8 -> *80
$arch_ptr_type -> *80
$set_empty -> *81
lambda@13 -> *81
$ctype_ptr -> *82
unique-value!82 -> *83
$fk_vol_version -> *84
$s -> *85
$max.u1 -> 255
^^i1 -> *87
^^object -> *88
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *90
$ctype_spec_ptr -> *91
unique-value!58 -> *92
^^void -> *93
unique-value!62 -> *94
unique-value!70 -> *95
unique-value!93 -> *96
$fk_active_option -> *97
$ctype_array -> *98
unique-value!77 -> *99
cev_local -> *100
#tok$2^47.3 -> *101
@MV_state_const -> 74
$ctype_map -> *103
loop_register -> *104
$null -> *105
^^i4 -> *106
$fk_allocation_root -> *107
unique-value!68 -> *108
unique-value!57 -> *109
loop_exited -> *110
$min.i2 -> -32768
cev_implicit -> *112
#tok$1^6.1 -> *113
lambda@21 -> *114
^$#account2.c..36689#5 -> *115
^^u1 -> *116
^AccountGroup -> *117
$primitive_emb_type -> *118
$no_claim -> *119
unique-value!71 -> *120
took_else_branch -> *121
^^i8 -> *122
took_then_branch -> *123
#tok$2^42.3 -> *124
unique-value!76 -> *125
unique-value!83 -> *126
AccountGroup.creditCard -> *127
^$##thread_id -> *128
$min.i4 -> -2147483648
unique-value!64 -> *130
unique-value!69 -> *131
#tok$2^46.3 -> *132
$untyped_owner_type -> *133
^^i2 -> *134
^$#thread_id_t -> *135
^$#account2.c..36585#3 -> *136
unique-value!91 -> *137
unique-value!73 -> *138
#tok$1^22.5 -> *139
AccountGroup.giro -> *140
^$#vol_version -> *141
#tok$1^13.1 -> *142
unique-value!86 -> *143
#tok$2^25.1 -> *144
^$#_purecall_handler#6 -> *145
unique-value!78 -> *146
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *147
$cev_pc -> **$cev_pc
P#b@@0 -> **P#b@@0
#stackframe -> **#stackframe
$thread_local -> {
  *85 *148 -> false
  else -> false
}
$ptr_to -> {
  *90 -> *5
  else -> *5
}
$is_volatile_field -> {
  *149 -> true
  *150 -> true
  else -> true
}
$is_phys_field -> {
  *21 -> true
  *140 -> true
  *127 -> true
  *46 -> true
  *151 -> true
  *152 -> true
  else -> true
}
$owner -> {
  *85 *153 -> *49
  *85 *154 -> *54
  else -> *49
}
$ptr -> {
  *155 0 -> *105
  *157 18446744073709557126 -> *119
  *159 361 -> *49
  *161 296 -> *54
  *159 4330 -> *12
  *21 622 -> *165
  *151 622 -> *153
  *166 18446744073709551660 -> *168
  *169 18446744073709556236 -> *66
  *152 1499 -> *148
  else -> *105
}
$closed -> {
  *85 *153 -> false
  else -> false
}
$dot -> {
  *153 *21 -> *165
  else -> *165
}
$addr0 -> {
  *105 -> 0
  *119 -> 0
  *49 -> 361
  *54 -> 296
  *12 -> 4330
  *66 -> 1499
  *168 -> 622
  *153 -> 622
  *148 -> 1499
  *165 -> 622
  else -> 622
}
$is_proper -> {
  *49 -> true
  *54 -> true
  *12 -> true
  *165 -> true
  *153 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *153 -> true
  *165 -> true
  *148 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  else -> true
}
$current_timestamp -> {
  *85 -> 4809
  else -> 4809
}
$as_primitive_field -> {
  *21 -> *21
  *140 -> *140
  *127 -> *127
  *46 -> *46
  *155 -> *155
  *176 -> *176
  *177 -> *177
  *149 -> *149
  *150 -> *150
  *178 -> *178
  *179 -> *179
  else -> *21
}
$f_timestamp -> {
  *85 -> *180
  else -> *180
}
Select_[$ptr]$int -> {
  *181 *148 -> 76
  *180 *153 -> 4809
  *180 *154 -> 4809
  else -> 4809
}
$unchecked -> {
  *31 4294967296 -> 0
  *80 18446744073709551616 -> 0
  *31 -1 -> 4294967295
  *80 -1 -> 18446744073709551615
  *106 -10000 -> -10000
  *80 0 -> 0
  *80 -5806 -> 0
  *80 361 -> 361
  *80 296 -> 296
  *80 4330 -> 4330
  *80 -9764 -> 622
  *80 -9201 -> 1499
  *80 622 -> 622
  *80 1499 -> 1499
  else -> 0
}
$mutable -> {
  *85 *153 -> true
  else -> true
}
$is_primitive -> {
  *87 -> true
  *134 -> true
  *106 -> true
  *122 -> true
  *116 -> true
  *39 -> true
  *31 -> true
  *80 -> true
  *42 -> true
  *74 -> true
  *50 -> true
  *93 -> true
  *88 -> true
  *17 -> true
  *3 -> true
  *45 -> false
  *33 -> false
  *59 -> true
  *32 -> true
  *57 -> true
  *28 -> true
  *29 -> true
  *135 -> false
  *133 -> false
  *128 -> true
  *58 -> true
  *90 -> false
  *117 -> false
  *5 -> true
  *44 -> true
  *147 -> true
  *136 -> true
  *10 -> true
  *115 -> true
  *145 -> true
  *69 -> true
  *118 -> false
  else -> true
}
$as_field_with_type -> {
  *21 *106 -> *21
  *140 *5 -> *140
  *127 *5 -> *127
  *46 *106 -> *46
  *155 *93 -> *155
  *159 *135 -> *159
  *161 *133 -> *161
  *176 *57 -> *176
  *177 *57 -> *177
  *149 *57 -> *149
  *150 *57 -> *150
  *178 *57 -> *178
  *179 *57 -> *179
  *152 *117 -> *152
  *151 *90 -> *151
  else -> *21
}
$roots -> {
  *85 -> *190
  else -> *190
}
$invok_state -> {
  *85 -> true
  else -> true
}
$is_sequential_field -> {
  *176 -> true
  *177 -> true
  *178 -> true
  *21 -> true
  *179 -> true
  *140 -> true
  *127 -> true
  *46 -> true
  *155 -> true
  *149 -> false
  else -> true
}
$is_math_type -> {
  *88 -> true
  *17 -> true
  *3 -> true
  *59 -> true
  *32 -> true
  *57 -> true
  *28 -> true
  *29 -> true
  *128 -> true
  *58 -> true
  else -> true
}
$file_name_is -> {
  2 *25 -> true
  1 *64 -> true
  else -> true
}
$unchk_add -> {
  *80 0 0 -> 0
  *80 18446744073709557126 -18446744073709562932 -> 0
  *80 361 0 -> 361
  *80 296 0 -> 296
  *80 4330 0 -> 4330
  *80 1499 0 -> 1499
  *80 18446744073709551660 -18446744073709561424 -> 622
  *80 18446744073709556236 -18446744073709565437 -> 1499
  *80 622 0 -> 622
  else -> 0
}
$full_stop -> {
  *85 -> true
  else -> true
}
$writes_at -> {
  4809 -> *114
  else -> *114
}
$set_cardinality -> {
  *81 -> 0
  else -> 0
}
$is_claimable -> {
  *45 -> true
  *33 -> false
  *135 -> false
  *133 -> false
  *90 -> false
  *117 -> false
  *87 -> false
  *134 -> false
  *106 -> false
  *122 -> false
  *116 -> false
  *39 -> false
  *31 -> false
  *80 -> false
  *42 -> false
  *74 -> false
  *50 -> false
  *93 -> false
  *88 -> false
  *17 -> false
  *3 -> false
  *59 -> false
  *32 -> false
  *57 -> false
  *28 -> false
  *29 -> false
  *128 -> false
  *58 -> false
  *44 -> false
  *147 -> false
  *136 -> false
  *10 -> false
  *115 -> false
  *145 -> false
  *69 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *21 -> true
  *140 -> true
  *127 -> true
  *46 -> true
  *159 -> true
  *161 -> true
  *155 -> true
  *176 -> true
  *177 -> true
  *149 -> true
  *150 -> true
  *178 -> true
  *179 -> true
  *151 -> true
  *152 -> true
  else -> true
}
$f_closed -> {
  *85 -> *194
  else -> *194
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *310 *140 -> *181
  else -> *181
}
$field_kind -> {
  *21 -> *78
  *140 -> *78
  *127 -> *78
  *46 -> *78
  *155 -> *107
  *159 -> *107
  *161 -> *107
  *176 -> *6
  *177 -> *6
  *149 -> *6
  *150 -> *6
  *178 -> *6
  *179 -> *6
  *151 -> *107
  *152 -> *107
  else -> *6
}
Select_[$ptr]$bool -> {
  *194 *153 -> false
  else -> false
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *159 -> *159
  *161 -> *161
  *151 -> *151
  *152 -> *152
  else -> *159
}
$phys_ptr_cast -> {
  *66 *117 -> *148
  *168 *90 -> *153
  *153 *90 -> *153
  *148 *117 -> *148
  *165 *106 -> *165
  else -> *153
}
$prim_emb -> {
  *165 -> *153
  else -> *153
}
$vs_state -> {
  *63 -> *311
  else -> *311
}
distinct-aux-f!!54 -> {
  *118 -> *53
  *87 -> *24
  *134 -> *109
  *106 -> *92
  *122 -> *20
  *116 -> *61
  *39 -> *71
  *31 -> *94
  *80 -> *55
  *93 -> *130
  *50 -> *73
  *42 -> *60
  *74 -> *26
  *88 -> *108
  *17 -> *131
  *3 -> *95
  *45 -> *120
  *59 -> *36
  *32 -> *138
  *57 -> *56
  *28 -> *37
  *33 -> *125
  *29 -> *99
  *30 -> *146
  *141 -> *11
  *135 -> *65
  *133 -> *2
  *128 -> *83
  *58 -> *126
  *90 -> *68
  *117 -> *41
  *44 -> *143
  *147 -> *75
  *136 -> *67
  *10 -> *76
  *115 -> *38
  *145 -> *137
  *69 -> *43
  *5 -> *96
  else -> *53
}
$unchk_sub -> {
  *106 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *49 -> *159
  *54 -> *161
  *12 -> *159
  *119 -> *157
  *105 -> *155
  *165 -> *21
  *148 -> *152
  *168 -> *166
  *66 -> *169
  *153 -> *151
  else -> *159
}
$heap -> {
  *85 -> *310
  else -> *310
}
$f_owns -> {
  *45 -> *176
  *33 -> *177
  *135 -> *149
  *133 -> *150
  *90 -> *178
  *117 -> *179
  else -> *176
}
$field_type -> {
  *157 -> *45
  *21 -> *106
  *140 -> *5
  *127 -> *5
  *46 -> *106
  *159 -> *135
  *161 -> *133
  *155 -> *93
  *176 -> *57
  *177 -> *57
  *149 -> *57
  *150 -> *57
  *178 -> *57
  *179 -> *57
  *152 -> *117
  *151 -> *90
  else -> *57
}
$has_field_at0 -> {
  *90 *21 -> true
  *117 *140 -> true
  else -> true
}
$function_entry -> {
  *85 -> true
  else -> true
}
$good_state_ext -> {
  *144 *85 -> true
  else -> true
}
$f_owner -> {
  *85 -> *313
  else -> *313
}
$type_project_0 -> {
  *5 -> *90
  else -> *90
}
Select_[$ptr]$ptr -> {
  *313 *153 -> *49
  *190 *153 -> *153
  *190 *148 -> *154
  *313 *154 -> *54
  else -> *49
}
$type_branch -> {
  *87 -> *22
  *134 -> *22
  *106 -> *22
  *122 -> *22
  *116 -> *22
  *39 -> *22
  *31 -> *22
  *80 -> *22
  *42 -> *22
  *74 -> *22
  *50 -> *22
  *93 -> *22
  *88 -> *22
  *17 -> *22
  *3 -> *22
  *45 -> *22
  *33 -> *22
  *59 -> *22
  *32 -> *22
  *57 -> *22
  *28 -> *22
  *29 -> *22
  *135 -> *22
  *133 -> *22
  *128 -> *22
  *58 -> *22
  *90 -> *22
  *117 -> *22
  *44 -> *22
  *147 -> *22
  *136 -> *22
  *10 -> *22
  *115 -> *22
  *145 -> *22
  *69 -> *22
  *5 -> *82
  else -> *22
}
$maybe_emb -> {
  *153 -> *153
  else -> *153
}
$in_range_t -> {
  *31 4294967296 -> false
  *31 0 -> true
  *80 18446744073709551616 -> false
  *80 0 -> true
  *31 -1 -> false
  *31 4294967295 -> true
  *80 -1 -> false
  *80 18446744073709551615 -> true
  *106 -10000 -> true
  *80 -5806 -> false
  *80 361 -> true
  *80 296 -> true
  *80 4330 -> true
  *80 622 -> true
  *80 1499 -> true
  *80 -9764 -> false
  *80 -9201 -> false
  else -> true
}
$spec_ptr_cast -> {
  *49 *135 -> *49
  *54 *133 -> *54
  *12 *135 -> *12
  else -> *49
}
$is_union_type -> {
  *90 -> false
  *117 -> false
  else -> false
}
$field_parent_type -> {
  *21 -> *90
  *140 -> *117
  *127 -> *117
  *46 -> *117
  *159 -> *135
  *161 -> *133
  *155 -> *118
  *176 -> *45
  *177 -> *33
  *149 -> *135
  *150 -> *133
  *178 -> *90
  *179 -> *117
  *151 -> *90
  *152 -> *117
  else -> *117
}
$sizeof -> {
  *87 -> 1
  *134 -> 2
  *106 -> 4
  *122 -> 8
  *116 -> 1
  *39 -> 2
  *31 -> 4
  *80 -> 8
  *42 -> 4
  *74 -> 8
  *50 -> 1
  *93 -> 1
  *88 -> 1
  *17 -> 1
  *3 -> 1
  *45 -> 1
  *33 -> 1
  *59 -> 1
  *32 -> 1
  *57 -> 1
  *28 -> 1
  *29 -> 1
  *135 -> 1
  *133 -> 1
  *128 -> 1
  *58 -> 1
  *90 -> 4
  *117 -> 24
  *44 -> 8
  *147 -> 8
  *136 -> 8
  *10 -> 8
  *115 -> 8
  *145 -> 8
  *69 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *176 -> true
  *177 -> true
  *149 -> true
  *150 -> true
  *178 -> true
  *179 -> true
  *21 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *49 -> true
  *54 -> true
  *12 -> true
  *153 -> false
  else -> true
}
$is_fnptr_type -> {
  *44 -> true
  *147 -> true
  *136 -> true
  *10 -> true
  *115 -> true
  *145 -> true
  *69 -> true
  else -> true
}
$f_root -> {
  *93 -> *155
  *135 -> *159
  *133 -> *161
  *117 -> *152
  *90 -> *151
  else -> *155
}
$int_to_ptr -> {
  76 -> *168
  else -> *168
}
$is_span_sequential -> {
  *90 -> true
  *117 -> true
  else -> true
}
$good_state -> {
  *311 -> true
  *85 -> true
  else -> true
}
$field_offset -> {
  *21 -> 0
  *140 -> 0
  *127 -> 8
  *46 -> 16
  *157 -> -18446744073709562932
  *159 -> 0
  *161 -> 0
  *155 -> 0
  *152 -> 0
  *166 -> -18446744073709561424
  *169 -> -18446744073709565437
  *151 -> 0
  else -> 0
}
$base -> {
  *105 -> 0
  *49 -> 361
  *54 -> 296
  *12 -> 4330
  *119 -> 18446744073709557126
  *148 -> 1499
  *168 -> 18446744073709551660
  *165 -> 622
  *66 -> 18446744073709556236
  *153 -> 622
  else -> 622
}
$as_in_range_t -> {
  *87 -> *87
  *134 -> *134
  *106 -> *106
  *122 -> *122
  *116 -> *116
  *39 -> *39
  *31 -> *31
  *80 -> *80
  *32 -> *32
  else -> *87
}
$field_arr_root -> {
  *21 -> *21
  *140 -> *140
  *127 -> *127
  *46 -> *46
  *155 -> *155
  *159 -> *159
  *161 -> *161
  *176 -> *176
  *177 -> *177
  *149 -> *149
  *150 -> *150
  *178 -> *178
  *179 -> *179
  *151 -> *151
  *152 -> *152
  else -> *21
}
*** STATE <initial>
  $s -> *85
  $cev_pc -> **$cev_pc
  P#a -> *66
  P#b -> **P#b@@0
  P#amount -> 407
  #wrTime$2^25.1 -> 4809
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(25,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%+40336 -> true
%lbl%@40436 -> true
%lbl%+1948 -> true
%lbl%@40405 -> true
$position_marker -> true
%lbl%@40453 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
P#amount@@0 -> 407
^$#_onexit_t#4 -> *10
unique-value!79 -> *11
$untyped_owner_owner -> *12
$max.u4 -> 4294967295
#tok$2^41.3 -> *14
#wrTime$2^25.1 -> 7331
$fk_ref_cnt -> *16
^^field -> *17
$max.u2 -> 65535
loop_entered -> *19
unique-value!59 -> *20
Account.amount -> *21
$ctype_flat -> *22
$fk_as_array_first -> *23
unique-value!56 -> *24
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *25
unique-value!67 -> *26
#tok$1^26.5 -> *27
^$#state_t -> *28
^$#struct -> *29
^$#seq_version -> *30
^^u4 -> *31
^^nat -> *32
^$#volatile_version_t -> *33
$max.i2 -> 32767
$ctype_blob -> *35
unique-value!72 -> *36
unique-value!75 -> *37
unique-value!90 -> *38
^^u2 -> *39
$min.i8 -> -9223372036854775808
unique-value!85 -> *41
^^f4 -> *42
unique-value!92 -> *43
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *44
^^claim -> *45
AccountGroup.total -> *46
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *48
$me -> *49
^^bool -> *50
$max.i1 -> 127
cev_parameter -> *52
unique-value!55 -> *53
$untyped_owner -> *54
unique-value!63 -> *55
unique-value!74 -> *56
^$#ptrset -> *57
^$##club -> *58
^^mathint -> *59
unique-value!66 -> *60
unique-value!60 -> *61
$arch_ptr_size -> 8
$struct_zero -> *63
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *64
unique-value!80 -> *65
P#a@@0 -> *66
unique-value!88 -> *67
unique-value!84 -> *68
^$#_invalid_parameter_handler#7 -> *69
$min.i1 -> -128
unique-value!61 -> *71
conditional_moment -> *72
unique-value!65 -> *73
^^f8 -> *74
unique-value!87 -> *75
unique-value!89 -> *76
#tok$1^23.16 -> *77
$fk_base -> *78
#tok$1^28.5 -> *79
^^u8 -> *80
$arch_ptr_type -> *80
$set_empty -> *81
lambda@13 -> *81
$ctype_ptr -> *82
unique-value!82 -> *83
$fk_vol_version -> *84
$s -> *85
$max.u1 -> 255
^^i1 -> *87
^^object -> *88
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *90
$ctype_spec_ptr -> *91
unique-value!58 -> *92
^^void -> *93
unique-value!62 -> *94
unique-value!70 -> *95
unique-value!93 -> *96
$fk_active_option -> *97
$ctype_array -> *98
unique-value!77 -> *99
cev_local -> *100
#tok$2^47.3 -> *101
@MV_state_const -> 74
$ctype_map -> *103
loop_register -> *104
$null -> *105
^^i4 -> *106
$fk_allocation_root -> *107
unique-value!68 -> *108
unique-value!57 -> *109
loop_exited -> *110
$min.i2 -> -32768
cev_implicit -> *112
#tok$1^6.1 -> *113
lambda@21 -> *114
^$#account2.c..36689#5 -> *115
^^u1 -> *116
^AccountGroup -> *117
$primitive_emb_type -> *118
$no_claim -> *119
unique-value!71 -> *120
took_else_branch -> *121
^^i8 -> *122
took_then_branch -> *123
#tok$2^42.3 -> *124
unique-value!76 -> *125
unique-value!83 -> *126
AccountGroup.creditCard -> *127
^$##thread_id -> *128
$min.i4 -> -2147483648
unique-value!64 -> *130
unique-value!69 -> *131
#tok$2^46.3 -> *132
$untyped_owner_type -> *133
^^i2 -> *134
^$#thread_id_t -> *135
^$#account2.c..36585#3 -> *136
unique-value!91 -> *137
unique-value!73 -> *138
#tok$1^22.5 -> *139
AccountGroup.giro -> *140
^$#vol_version -> *141
#tok$1^13.1 -> *142
unique-value!86 -> *143
#tok$2^25.1 -> *144
^$#_purecall_handler#6 -> *145
unique-value!78 -> *146
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *147
$cev_pc -> **$cev_pc
P#b@@0 -> **P#b@@0
#stackframe -> **#stackframe
$thread_local -> {
  *85 *148 -> true
  else -> true
}
$ptr_to -> {
  *90 -> *5
  else -> *5
}
$is_volatile_field -> {
  *149 -> true
  *150 -> true
  else -> true
}
$is_phys_field -> {
  *21 -> true
  *140 -> true
  *127 -> true
  *46 -> true
  *151 -> true
  *152 -> true
  else -> true
}
$owner -> {
  *85 *153 -> *49
  *85 *154 -> *49
  else -> *49
}
$ptr -> {
  *155 0 -> *105
  *157 18446744073709557126 -> *119
  *159 361 -> *49
  *161 296 -> *54
  *159 4330 -> *12
  *21 622 -> *165
  *151 622 -> *153
  *166 18446744073709552096 -> *168
  *169 18446744073709552506 -> *66
  *152 3194 -> *148
  *172 18446744073709557317 -> *154
  else -> *105
}
$closed -> {
  *85 *153 -> false
  else -> false
}
$dot -> {
  *153 *21 -> *165
  else -> *165
}
$addr0 -> {
  *105 -> 0
  *119 -> 0
  *49 -> 361
  *54 -> 296
  *12 -> 4330
  *66 -> 3194
  *168 -> 622
  *153 -> 622
  *148 -> 3194
  *165 -> 622
  *154 -> 527
  else -> 622
}
$is_proper -> {
  *49 -> true
  *54 -> true
  *12 -> true
  *165 -> true
  *153 -> true
  *148 -> true
  *154 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *153 -> true
  *165 -> true
  *148 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  else -> true
}
$current_timestamp -> {
  *85 -> 7331
  else -> 7331
}
$as_primitive_field -> {
  *21 -> *21
  *140 -> *140
  *127 -> *127
  *46 -> *46
  *155 -> *155
  *180 -> *180
  *181 -> *181
  *149 -> *149
  *150 -> *150
  *182 -> *182
  *183 -> *183
  else -> *21
}
$f_timestamp -> {
  *85 -> *184
  else -> *184
}
Select_[$ptr]$int -> {
  *185 *148 -> 76
  *184 *153 -> 7331
  *187 *153 -> -2147483242
  *184 *154 -> -216
  else -> 76
}
$unchecked -> {
  *31 4294967296 -> 0
  *80 18446744073709551616 -> 0
  *31 -1 -> 4294967295
  *80 -1 -> 18446744073709551615
  *106 -10000 -> -10000
  *80 0 -> 0
  *80 -5806 -> 0
  *80 361 -> 361
  *80 296 -> 296
  *80 4330 -> 4330
  *80 -6558 -> 622
  *80 -3487 -> 3194
  *80 622 -> 622
  *80 3194 -> 3194
  *80 -1680 -> 527
  else -> 0
}
$mutable -> {
  *85 *153 -> true
  else -> true
}
$is_primitive -> {
  *87 -> true
  *134 -> true
  *106 -> true
  *122 -> true
  *116 -> true
  *39 -> true
  *31 -> true
  *80 -> true
  *42 -> true
  *74 -> true
  *50 -> true
  *93 -> true
  *88 -> true
  *17 -> true
  *3 -> true
  *45 -> false
  *33 -> false
  *59 -> true
  *32 -> true
  *57 -> true
  *28 -> true
  *29 -> true
  *135 -> false
  *133 -> false
  *128 -> true
  *58 -> true
  *90 -> false
  *117 -> false
  *5 -> true
  *44 -> true
  *147 -> true
  *136 -> true
  *10 -> true
  *115 -> true
  *145 -> true
  *69 -> true
  *118 -> false
  *198 -> false
  else -> true
}
$as_field_with_type -> {
  *21 *106 -> *21
  *140 *5 -> *140
  *127 *5 -> *127
  *46 *106 -> *46
  *155 *93 -> *155
  *159 *135 -> *159
  *161 *133 -> *161
  *180 *57 -> *180
  *181 *57 -> *181
  *149 *57 -> *149
  *150 *57 -> *150
  *182 *57 -> *182
  *183 *57 -> *183
  *152 *117 -> *152
  *151 *90 -> *151
  else -> *21
}
$roots -> {
  *85 -> *199
  else -> *199
}
$invok_state -> {
  *85 -> true
  else -> true
}
$is_sequential_field -> {
  *180 -> true
  *181 -> true
  *182 -> true
  *21 -> true
  *183 -> true
  *140 -> true
  *127 -> true
  *46 -> true
  *155 -> true
  *149 -> false
  else -> true
}
$is_math_type -> {
  *88 -> true
  *17 -> true
  *3 -> true
  *59 -> true
  *32 -> true
  *57 -> true
  *28 -> true
  *29 -> true
  *128 -> true
  *58 -> true
  else -> true
}
$file_name_is -> {
  2 *25 -> true
  1 *64 -> true
  else -> true
}
$unchk_add -> {
  *80 0 0 -> 0
  *80 18446744073709557126 -18446744073709562932 -> 0
  *80 361 0 -> 361
  *80 296 0 -> 296
  *80 4330 0 -> 4330
  *80 3194 0 -> 3194
  *80 18446744073709552096 -18446744073709558654 -> 622
  *80 18446744073709552506 -18446744073709555993 -> 3194
  *80 622 0 -> 622
  *80 18446744073709557317 -18446744073709558997 -> 527
  else -> 0
}
$full_stop -> {
  *85 -> true
  else -> true
}
$writes_at -> {
  7331 -> *114
  else -> *114
}
$set_cardinality -> {
  *81 -> 0
  else -> 0
}
$is_claimable -> {
  *45 -> true
  *33 -> false
  *135 -> false
  *133 -> false
  *90 -> false
  *117 -> false
  *87 -> false
  *134 -> false
  *106 -> false
  *122 -> false
  *116 -> false
  *39 -> false
  *31 -> false
  *80 -> false
  *42 -> false
  *74 -> false
  *50 -> false
  *93 -> false
  *88 -> false
  *17 -> false
  *3 -> false
  *59 -> false
  *32 -> false
  *57 -> false
  *28 -> false
  *29 -> false
  *128 -> false
  *58 -> false
  *44 -> false
  *147 -> false
  *136 -> false
  *10 -> false
  *115 -> false
  *145 -> false
  *69 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *21 -> true
  *140 -> true
  *127 -> true
  *46 -> true
  *159 -> true
  *161 -> true
  *155 -> true
  *180 -> true
  *181 -> true
  *149 -> true
  *150 -> true
  *182 -> true
  *183 -> true
  *151 -> true
  *152 -> true
  else -> true
}
$f_closed -> {
  *85 -> *204
  else -> *204
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *319 *140 -> *185
  *319 *21 -> *187
  else -> *185
}
$field_kind -> {
  *21 -> *78
  *140 -> *78
  *127 -> *78
  *46 -> *78
  *155 -> *107
  *159 -> *107
  *161 -> *107
  *180 -> *6
  *181 -> *6
  *149 -> *6
  *150 -> *6
  *182 -> *6
  *183 -> *6
  *151 -> *107
  *152 -> *107
  else -> *6
}
Select_[$ptr]$bool -> {
  *204 *153 -> false
  else -> false
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *159 -> *159
  *161 -> *161
  *151 -> *151
  *152 -> *152
  else -> *159
}
$phys_ptr_cast -> {
  *66 *117 -> *148
  *168 *90 -> *153
  *153 *90 -> *153
  *148 *117 -> *148
  *165 *106 -> *165
  else -> *153
}
$prim_emb -> {
  *165 -> *153
  else -> *153
}
$vs_state -> {
  *63 -> *320
  else -> *320
}
distinct-aux-f!!54 -> {
  *118 -> *53
  *87 -> *24
  *134 -> *109
  *106 -> *92
  *122 -> *20
  *116 -> *61
  *39 -> *71
  *31 -> *94
  *80 -> *55
  *93 -> *130
  *50 -> *73
  *42 -> *60
  *74 -> *26
  *88 -> *108
  *17 -> *131
  *3 -> *95
  *45 -> *120
  *59 -> *36
  *32 -> *138
  *57 -> *56
  *28 -> *37
  *33 -> *125
  *29 -> *99
  *30 -> *146
  *141 -> *11
  *135 -> *65
  *133 -> *2
  *128 -> *83
  *58 -> *126
  *90 -> *68
  *117 -> *41
  *44 -> *143
  *147 -> *75
  *136 -> *67
  *10 -> *76
  *115 -> *38
  *145 -> *137
  *69 -> *43
  *5 -> *96
  else -> *53
}
$unchk_sub -> {
  *106 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *49 -> *159
  *54 -> *161
  *12 -> *159
  *119 -> *157
  *105 -> *155
  *165 -> *21
  *148 -> *152
  *168 -> *166
  *66 -> *169
  *153 -> *151
  *154 -> *172
  else -> *159
}
$heap -> {
  *85 -> *319
  else -> *319
}
$f_owns -> {
  *45 -> *180
  *33 -> *181
  *135 -> *149
  *133 -> *150
  *90 -> *182
  *117 -> *183
  else -> *180
}
$field_type -> {
  *157 -> *45
  *21 -> *106
  *140 -> *5
  *127 -> *5
  *46 -> *106
  *159 -> *135
  *161 -> *133
  *155 -> *93
  *180 -> *57
  *181 -> *57
  *149 -> *57
  *150 -> *57
  *182 -> *57
  *183 -> *57
  *152 -> *117
  *151 -> *90
  *172 -> *198
  else -> *57
}
$has_field_at0 -> {
  *90 *21 -> true
  *117 *140 -> true
  else -> true
}
$function_entry -> {
  *85 -> true
  else -> true
}
$good_state_ext -> {
  *144 *85 -> true
  else -> true
}
$f_owner -> {
  *85 -> *322
  else -> *322
}
$type_project_0 -> {
  *5 -> *90
  else -> *90
}
Select_[$ptr]$ptr -> {
  *322 *153 -> *49
  *199 *153 -> *153
  *199 *148 -> *154
  *322 *154 -> *49
  *199 *154 -> *154
  else -> *49
}
$type_branch -> {
  *87 -> *22
  *134 -> *22
  *106 -> *22
  *122 -> *22
  *116 -> *22
  *39 -> *22
  *31 -> *22
  *80 -> *22
  *42 -> *22
  *74 -> *22
  *50 -> *22
  *93 -> *22
  *88 -> *22
  *17 -> *22
  *3 -> *22
  *45 -> *22
  *33 -> *22
  *59 -> *22
  *32 -> *22
  *57 -> *22
  *28 -> *22
  *29 -> *22
  *135 -> *22
  *133 -> *22
  *128 -> *22
  *58 -> *22
  *90 -> *22
  *117 -> *22
  *44 -> *22
  *147 -> *22
  *136 -> *22
  *10 -> *22
  *115 -> *22
  *145 -> *22
  *69 -> *22
  *5 -> *82
  else -> *22
}
$maybe_emb -> {
  *153 -> *153
  else -> *153
}
$in_range_t -> {
  *31 4294967296 -> false
  *31 0 -> true
  *80 18446744073709551616 -> false
  *80 0 -> true
  *31 -1 -> false
  *31 4294967295 -> true
  *80 -1 -> false
  *80 18446744073709551615 -> true
  *106 -10000 -> true
  *80 -5806 -> false
  *80 361 -> true
  *80 296 -> true
  *80 4330 -> true
  *80 622 -> true
  *80 3194 -> true
  *80 -6558 -> false
  *80 -3487 -> false
  *80 -1680 -> false
  *80 527 -> true
  *106 -2147483242 -> true
  else -> true
}
$spec_ptr_cast -> {
  *49 *135 -> *49
  *54 *133 -> *54
  *12 *135 -> *12
  else -> *49
}
$is_union_type -> {
  *90 -> false
  *117 -> false
  else -> false
}
$field_parent_type -> {
  *21 -> *90
  *140 -> *117
  *127 -> *117
  *46 -> *117
  *159 -> *135
  *161 -> *133
  *155 -> *118
  *180 -> *45
  *181 -> *33
  *149 -> *135
  *150 -> *133
  *182 -> *90
  *183 -> *117
  *151 -> *90
  *152 -> *117
  else -> *117
}
$sizeof -> {
  *87 -> 1
  *134 -> 2
  *106 -> 4
  *122 -> 8
  *116 -> 1
  *39 -> 2
  *31 -> 4
  *80 -> 8
  *42 -> 4
  *74 -> 8
  *50 -> 1
  *93 -> 1
  *88 -> 1
  *17 -> 1
  *3 -> 1
  *45 -> 1
  *33 -> 1
  *59 -> 1
  *32 -> 1
  *57 -> 1
  *28 -> 1
  *29 -> 1
  *135 -> 1
  *133 -> 1
  *128 -> 1
  *58 -> 1
  *90 -> 4
  *117 -> 24
  *44 -> 8
  *147 -> 8
  *136 -> 8
  *10 -> 8
  *115 -> 8
  *145 -> 8
  *69 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *180 -> true
  *181 -> true
  *149 -> true
  *150 -> true
  *182 -> true
  *183 -> true
  *21 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *49 -> true
  *54 -> true
  *12 -> true
  *153 -> false
  else -> true
}
$is_fnptr_type -> {
  *44 -> true
  *147 -> true
  *136 -> true
  *10 -> true
  *115 -> true
  *145 -> true
  *69 -> true
  else -> true
}
$f_root -> {
  *93 -> *155
  *135 -> *159
  *133 -> *161
  *117 -> *152
  *90 -> *151
  else -> *155
}
$int_to_ptr -> {
  76 -> *168
  else -> *168
}
$is_span_sequential -> {
  *90 -> true
  *117 -> true
  else -> true
}
$good_state -> {
  *320 -> true
  *85 -> true
  else -> true
}
$field_offset -> {
  *21 -> 0
  *140 -> 0
  *127 -> 8
  *46 -> 16
  *157 -> -18446744073709562932
  *159 -> 0
  *161 -> 0
  *155 -> 0
  *152 -> 0
  *166 -> -18446744073709558654
  *169 -> -18446744073709555993
  *151 -> 0
  *172 -> -18446744073709558997
  else -> 0
}
$base -> {
  *105 -> 0
  *49 -> 361
  *54 -> 296
  *12 -> 4330
  *119 -> 18446744073709557126
  *148 -> 3194
  *168 -> 18446744073709552096
  *165 -> 622
  *66 -> 18446744073709552506
  *153 -> 622
  *154 -> 18446744073709557317
  else -> 622
}
$as_in_range_t -> {
  *87 -> *87
  *134 -> *134
  *106 -> *106
  *122 -> *122
  *116 -> *116
  *39 -> *39
  *31 -> *31
  *80 -> *80
  *32 -> *32
  else -> *87
}
$field_arr_root -> {
  *21 -> *21
  *140 -> *140
  *127 -> *127
  *46 -> *46
  *155 -> *155
  *159 -> *159
  *161 -> *161
  *180 -> *180
  *181 -> *181
  *149 -> *149
  *150 -> *150
  *182 -> *182
  *183 -> *183
  *151 -> *151
  *152 -> *152
  else -> *21
}
*** STATE <initial>
  $s -> *85
  $cev_pc -> **$cev_pc
  P#a -> *66
  P#b -> **P#b@@0
  P#amount -> 407
  #wrTime$2^25.1 -> 7331
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(25,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%+40336 -> true
%lbl%@40453 -> true
%lbl%@40436 -> true
%lbl%+1948 -> true
%lbl%@40405 -> true
$position_marker -> true
%lbl%@40620 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
P#amount@@0 -> 407
^$#_onexit_t#4 -> *10
unique-value!79 -> *11
$untyped_owner_owner -> *12
$max.u4 -> 4294967295
#tok$2^41.3 -> *14
#wrTime$2^25.1 -> 6055
$s@0@@1 -> *16
$fk_ref_cnt -> *17
^^field -> *18
$max.u2 -> 65535
loop_entered -> *20
unique-value!59 -> *21
Account.amount -> *22
$ctype_flat -> *23
$fk_as_array_first -> *24
unique-value!56 -> *25
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *26
unique-value!67 -> *27
#tok$1^26.5 -> *28
^$#state_t -> *29
^$#struct -> *30
^$#seq_version -> *31
^^u4 -> *32
^^nat -> *33
^$#volatile_version_t -> *34
$max.i2 -> 32767
$ctype_blob -> *36
unique-value!72 -> *37
unique-value!75 -> *38
unique-value!90 -> *39
^^u2 -> *40
$min.i8 -> -9223372036854775808
unique-value!85 -> *42
^^f4 -> *43
unique-value!92 -> *44
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *45
^^claim -> *46
AccountGroup.total -> *47
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *49
$me -> *50
^^bool -> *51
$max.i1 -> 127
cev_parameter -> *53
unique-value!55 -> *54
$untyped_owner -> *55
unique-value!63 -> *56
unique-value!74 -> *57
^$#ptrset -> *58
^$##club -> *59
^^mathint -> *60
unique-value!66 -> *61
unique-value!60 -> *62
call1671formal@v@0 -> -2147483648
$min.i4 -> -2147483648
$arch_ptr_size -> 8
$struct_zero -> *65
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *66
call1671formal@p@0 -> *67
unique-value!80 -> *68
P#a@@0 -> *69
unique-value!88 -> *70
unique-value!84 -> *71
^$#_invalid_parameter_handler#7 -> *72
$min.i1 -> -128
unique-value!61 -> *74
conditional_moment -> *75
P#b@@0 -> *76
unique-value!65 -> *77
^^f8 -> *78
unique-value!87 -> *79
unique-value!89 -> *80
#tok$1^23.16 -> *81
$fk_base -> *82
#tok$1^28.5 -> *83
^^u8 -> *84
$arch_ptr_type -> *84
$set_empty -> *85
lambda@13 -> *85
$ctype_ptr -> *86
unique-value!82 -> *87
$fk_vol_version -> *88
$s -> *89
$max.u1 -> 255
^^i1 -> *91
^^object -> *92
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *94
$ctype_spec_ptr -> *95
unique-value!58 -> *96
^^void -> *97
unique-value!62 -> *98
unique-value!70 -> *99
unique-value!93 -> *100
$fk_active_option -> *101
$ctype_array -> *102
unique-value!77 -> *103
cev_local -> *104
#tok$2^47.3 -> *105
@MV_state_const -> 74
$ctype_map -> *107
loop_register -> *108
$null -> *109
^^i4 -> *110
$fk_allocation_root -> *111
unique-value!68 -> *112
unique-value!57 -> *113
loop_exited -> *114
$min.i2 -> -32768
cev_implicit -> *116
#tok$1^6.1 -> *117
lambda@21 -> *118
^$#account2.c..36689#5 -> *119
^^u1 -> *120
^AccountGroup -> *121
$primitive_emb_type -> *122
$no_claim -> *123
unique-value!71 -> *124
took_else_branch -> *125
^^i8 -> *126
took_then_branch -> *127
#tok$2^42.3 -> *128
unique-value!76 -> *129
unique-value!83 -> *130
AccountGroup.creditCard -> *131
^$##thread_id -> *132
unique-value!64 -> *133
unique-value!69 -> *134
#tok$2^46.3 -> *135
$untyped_owner_type -> *136
^^i2 -> *137
^$#thread_id_t -> *138
^$#account2.c..36585#3 -> *139
unique-value!91 -> *140
unique-value!73 -> *141
#tok$1^22.5 -> *142
AccountGroup.giro -> *143
^$#vol_version -> *144
#tok$1^13.1 -> *145
unique-value!86 -> *146
#tok$2^25.1 -> *147
^$#_purecall_handler#6 -> *148
unique-value!78 -> *149
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *150
$cev_pc -> **$cev_pc
#stackframe -> **#stackframe
$thread_local -> {
  *89 *151 -> true
  *89 *67 -> true
  else -> true
}
$ptr_to -> {
  *94 -> *5
  else -> *5
}
$is_volatile_field -> {
  *152 -> true
  *153 -> true
  else -> true
}
$is_phys_field -> {
  *22 -> true
  *143 -> true
  *131 -> true
  *47 -> true
  *154 -> true
  *155 -> true
  else -> true
}
$owner -> {
  *89 *67 -> *50
  *89 *156 -> *50
  *16 *157 -> *55
  *89 *157 -> *55
  else -> *50
}
$ptr -> {
  *158 0 -> *109
  *160 18446744073709557126 -> *123
  *162 361 -> *50
  *164 296 -> *55
  *162 4330 -> *12
  *22 622 -> *168
  *154 622 -> *67
  *169 18446744073709561537 -> *171
  *172 18446744073709558341 -> *69
  *155 9089 -> *151
  *175 18446744073709551657 -> *156
  *22 2236 -> *178
  *154 2236 -> *157
  *179 18446744073709556666 -> *181
  *182 18446744073709553200 -> *76
  *155 586 -> *185
  else -> *109
}
$closed -> {
  *89 *67 -> false
  else -> false
}
$dot -> {
  *67 *22 -> *168
  *157 *22 -> *178
  else -> *168
}
$addr0 -> {
  *109 -> 0
  *123 -> 0
  *50 -> 361
  *12 -> 4330
  *69 -> 9089
  *171 -> 622
  *67 -> 622
  *151 -> 9089
  *168 -> 622
  *156 -> 527
  *157 -> 2236
  *181 -> 2236
  *185 -> 586
  *76 -> 586
  *178 -> 2236
  *55 -> 296
  else -> 622
}
$is_proper -> {
  *50 -> true
  *12 -> true
  *168 -> true
  *178 -> true
  *67 -> true
  *151 -> true
  *156 -> true
  *55 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *67 -> true
  *168 -> true
  *151 -> true
  *157 -> true
  *178 -> true
  *185 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  else -> true
}
$current_timestamp -> {
  *89 -> 6055
  *16 -> 6056
  else -> 6055
}
$as_primitive_field -> {
  *22 -> *22
  *143 -> *143
  *131 -> *131
  *47 -> *47
  *158 -> *158
  *196 -> *196
  *197 -> *197
  *152 -> *152
  *153 -> *153
  *198 -> *198
  *199 -> *199
  else -> *22
}
$f_timestamp -> {
  *89 -> *200
  *16 -> *200
  else -> *200
}
Select_[$ptr]$int -> {
  *201 *151 -> 76
  *200 *67 -> 6055
  *203 *67 -> -2147483241
  *200 *157 -> -922
  *200 *156 -> -216
  *207 *67 -> -2147483648
  *201 *185 -> 106
  else -> 76
}
$unchecked -> {
  *32 4294967296 -> 0
  *84 18446744073709551616 -> 0
  *32 -1 -> 4294967295
  *84 -1 -> 18446744073709551615
  *110 -10000 -> -10000
  *84 0 -> 0
  *84 -5806 -> 0
  *84 361 -> 361
  *84 296 -> 296
  *84 4330 -> 4330
  *84 -1525 -> 622
  *84 -7444 -> 9089
  *84 622 -> 622
  *84 9089 -> 9089
  *84 -4715 -> 527
  *84 -7161 -> 2236
  *84 2236 -> 2236
  *84 -2098 -> 586
  *84 586 -> 586
  else -> 0
}
$mutable -> {
  *89 *67 -> true
  *16 *157 -> false
  *89 *157 -> false
  else -> false
}
$is_primitive -> {
  *91 -> true
  *137 -> true
  *110 -> true
  *126 -> true
  *120 -> true
  *40 -> true
  *32 -> true
  *84 -> true
  *43 -> true
  *78 -> true
  *51 -> true
  *97 -> true
  *92 -> true
  *18 -> true
  *3 -> true
  *46 -> false
  *34 -> false
  *60 -> true
  *33 -> true
  *58 -> true
  *29 -> true
  *30 -> true
  *138 -> false
  *136 -> false
  *132 -> true
  *59 -> true
  *94 -> false
  *121 -> false
  *5 -> true
  *45 -> true
  *150 -> true
  *139 -> true
  *10 -> true
  *119 -> true
  *148 -> true
  *72 -> true
  *122 -> false
  *219 -> false
  else -> true
}
$as_field_with_type -> {
  *22 *110 -> *22
  *143 *5 -> *143
  *131 *5 -> *131
  *47 *110 -> *47
  *158 *97 -> *158
  *162 *138 -> *162
  *164 *136 -> *164
  *196 *58 -> *196
  *197 *58 -> *197
  *152 *58 -> *152
  *153 *58 -> *153
  *198 *58 -> *198
  *199 *58 -> *199
  *155 *121 -> *155
  *154 *94 -> *154
  else -> *22
}
$roots -> {
  *89 -> *220
  *16 -> *220
  else -> *220
}
$invok_state -> {
  *89 -> true
  *16 -> true
  else -> true
}
$is_sequential_field -> {
  *196 -> true
  *197 -> true
  *198 -> true
  *22 -> true
  *199 -> true
  *143 -> true
  *131 -> true
  *47 -> true
  *158 -> true
  *152 -> false
  else -> true
}
$is_math_type -> {
  *92 -> true
  *18 -> true
  *3 -> true
  *60 -> true
  *33 -> true
  *58 -> true
  *29 -> true
  *30 -> true
  *132 -> true
  *59 -> true
  else -> true
}
$file_name_is -> {
  2 *26 -> true
  1 *66 -> true
  else -> true
}
$unchk_add -> {
  *84 0 0 -> 0
  *84 18446744073709557126 -18446744073709562932 -> 0
  *84 361 0 -> 361
  *84 296 0 -> 296
  *84 4330 0 -> 4330
  *84 9089 0 -> 9089
  *84 18446744073709561537 -18446744073709563062 -> 622
  *84 18446744073709558341 -18446744073709565785 -> 9089
  *84 622 0 -> 622
  *84 18446744073709551657 -18446744073709556372 -> 527
  *84 18446744073709556666 -18446744073709563827 -> 2236
  *84 2236 0 -> 2236
  *84 18446744073709553200 -18446744073709555298 -> 586
  *84 586 0 -> 586
  else -> 0
}
$full_stop -> {
  *89 -> true
  *16 -> true
  else -> true
}
$writes_at -> {
  6055 -> *118
  else -> *118
}
$call_transition -> {
  *89 *16 -> true
  else -> true
}
$set_cardinality -> {
  *85 -> 0
  else -> 0
}
$is_claimable -> {
  *46 -> true
  *34 -> false
  *138 -> false
  *136 -> false
  *94 -> false
  *121 -> false
  *91 -> false
  *137 -> false
  *110 -> false
  *126 -> false
  *120 -> false
  *40 -> false
  *32 -> false
  *84 -> false
  *43 -> false
  *78 -> false
  *51 -> false
  *97 -> false
  *92 -> false
  *18 -> false
  *3 -> false
  *60 -> false
  *33 -> false
  *58 -> false
  *29 -> false
  *30 -> false
  *132 -> false
  *59 -> false
  *45 -> false
  *150 -> false
  *139 -> false
  *10 -> false
  *119 -> false
  *148 -> false
  *72 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *22 -> true
  *143 -> true
  *131 -> true
  *47 -> true
  *162 -> true
  *164 -> true
  *158 -> true
  *196 -> true
  *197 -> true
  *152 -> true
  *153 -> true
  *198 -> true
  *199 -> true
  *154 -> true
  *155 -> true
  else -> true
}
$f_closed -> {
  *89 -> *227
  *16 -> *227
  else -> *227
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *339 *143 -> *201
  *339 *22 -> *203
  *340 *143 -> *201
  *340 *22 -> *207
  else -> *201
}
$field_kind -> {
  *22 -> *82
  *143 -> *82
  *131 -> *82
  *47 -> *82
  *158 -> *111
  *162 -> *111
  *164 -> *111
  *196 -> *6
  *197 -> *6
  *152 -> *6
  *153 -> *6
  *198 -> *6
  *199 -> *6
  *154 -> *111
  *155 -> *111
  else -> *6
}
Select_[$ptr]$bool -> {
  *227 *67 -> false
  else -> false
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *162 -> *162
  *164 -> *164
  *154 -> *154
  *155 -> *155
  else -> *162
}
$phys_ptr_cast -> {
  *69 *121 -> *151
  *171 *94 -> *67
  *76 *121 -> *185
  *181 *94 -> *157
  *67 *94 -> *67
  *151 *121 -> *151
  *168 *110 -> *168
  *157 *94 -> *157
  *185 *121 -> *185
  *178 *110 -> *178
  else -> *67
}
Store_[$ptr]$int -> {
  *203 *67 -2147483648 -> *207
  else -> *207
}
$prim_emb -> {
  *168 -> *67
  *178 -> *157
  else -> *67
}
$vs_state -> {
  *65 -> *341
  else -> *341
}
$trans_call_transition -> {
  *89 *16 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *122 -> *54
  *91 -> *25
  *137 -> *113
  *110 -> *96
  *126 -> *21
  *120 -> *62
  *40 -> *74
  *32 -> *98
  *84 -> *56
  *97 -> *133
  *51 -> *77
  *43 -> *61
  *78 -> *27
  *92 -> *112
  *18 -> *134
  *3 -> *99
  *46 -> *124
  *60 -> *37
  *33 -> *141
  *58 -> *57
  *29 -> *38
  *34 -> *129
  *30 -> *103
  *31 -> *149
  *144 -> *11
  *138 -> *68
  *136 -> *2
  *132 -> *87
  *59 -> *130
  *94 -> *71
  *121 -> *42
  *45 -> *146
  *150 -> *79
  *139 -> *70
  *10 -> *80
  *119 -> *39
  *148 -> *140
  *72 -> *44
  *5 -> *100
  else -> *54
}
$instantiate_int -> {
  -2147483241 -> true
  106 -> true
  76 -> true
  else -> true
}
$unchk_sub -> {
  *110 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *50 -> *162
  *12 -> *162
  *123 -> *160
  *109 -> *158
  *168 -> *22
  *178 -> *22
  *151 -> *155
  *171 -> *169
  *69 -> *172
  *67 -> *154
  *156 -> *175
  *157 -> *154
  *185 -> *155
  *181 -> *179
  *76 -> *182
  *55 -> *164
  else -> *162
}
$heap -> {
  *89 -> *339
  *16 -> *340
  else -> *339
}
$f_owns -> {
  *46 -> *196
  *34 -> *197
  *138 -> *152
  *136 -> *153
  *94 -> *198
  *121 -> *199
  else -> *196
}
$field_type -> {
  *160 -> *46
  *22 -> *110
  *143 -> *5
  *131 -> *5
  *47 -> *110
  *162 -> *138
  *164 -> *136
  *158 -> *97
  *196 -> *58
  *197 -> *58
  *152 -> *58
  *153 -> *58
  *198 -> *58
  *199 -> *58
  *155 -> *121
  *154 -> *94
  *175 -> *219
  else -> *58
}
$has_field_at0 -> {
  *94 *22 -> true
  *121 *143 -> true
  else -> true
}
$function_entry -> {
  *89 -> true
  else -> true
}
$good_state_ext -> {
  *147 *89 -> true
  *14 *16 -> true
  else -> true
}
$f_owner -> {
  *89 -> *343
  *16 -> *343
  else -> *343
}
$type_project_0 -> {
  *5 -> *94
  else -> *94
}
Store_[$field][$ptr]$int -> {
  *339 *22 *207 -> *340
  else -> *340
}
$type_branch -> {
  *91 -> *23
  *137 -> *23
  *110 -> *23
  *126 -> *23
  *120 -> *23
  *40 -> *23
  *32 -> *23
  *84 -> *23
  *43 -> *23
  *78 -> *23
  *51 -> *23
  *97 -> *23
  *92 -> *23
  *18 -> *23
  *3 -> *23
  *46 -> *23
  *34 -> *23
  *60 -> *23
  *33 -> *23
  *58 -> *23
  *29 -> *23
  *30 -> *23
  *138 -> *23
  *136 -> *23
  *132 -> *23
  *59 -> *23
  *94 -> *23
  *121 -> *23
  *45 -> *23
  *150 -> *23
  *139 -> *23
  *10 -> *23
  *119 -> *23
  *148 -> *23
  *72 -> *23
  *5 -> *86
  else -> *23
}
$maybe_emb -> {
  *67 -> *67
  *157 -> *157
  else -> *67
}
$in_range_t -> {
  *32 4294967296 -> false
  *32 0 -> true
  *84 18446744073709551616 -> false
  *84 0 -> true
  *32 -1 -> false
  *32 4294967295 -> true
  *84 -1 -> false
  *84 18446744073709551615 -> true
  *110 -10000 -> true
  *84 -5806 -> false
  *84 361 -> true
  *84 296 -> true
  *84 4330 -> true
  *84 622 -> true
  *84 9089 -> true
  *84 -1525 -> false
  *84 -7444 -> false
  *84 -4715 -> false
  *84 527 -> true
  *110 -2147483241 -> true
  *110 -2147483648 -> true
  *84 -7161 -> false
  *84 2236 -> true
  *84 -2098 -> false
  *84 586 -> true
  else -> true
}
Select_[$ptr]$ptr -> {
  *343 *67 -> *50
  *220 *67 -> *67
  *220 *151 -> *156
  *343 *156 -> *50
  *220 *156 -> *156
  *343 *157 -> *55
  else -> *50
}
$spec_ptr_cast -> {
  *50 *138 -> *50
  *55 *136 -> *55
  *12 *138 -> *12
  else -> *50
}
$is_union_type -> {
  *94 -> false
  *121 -> false
  else -> false
}
$field_parent_type -> {
  *22 -> *94
  *143 -> *121
  *131 -> *121
  *47 -> *121
  *162 -> *138
  *164 -> *136
  *158 -> *122
  *196 -> *46
  *197 -> *34
  *152 -> *138
  *153 -> *136
  *198 -> *94
  *199 -> *121
  *154 -> *94
  *155 -> *121
  else -> *121
}
$sizeof -> {
  *91 -> 1
  *137 -> 2
  *110 -> 4
  *126 -> 8
  *120 -> 1
  *40 -> 2
  *32 -> 4
  *84 -> 8
  *43 -> 4
  *78 -> 8
  *51 -> 1
  *97 -> 1
  *92 -> 1
  *18 -> 1
  *3 -> 1
  *46 -> 1
  *34 -> 1
  *60 -> 1
  *33 -> 1
  *58 -> 1
  *29 -> 1
  *30 -> 1
  *138 -> 1
  *136 -> 1
  *132 -> 1
  *59 -> 1
  *94 -> 4
  *121 -> 24
  *45 -> 8
  *150 -> 8
  *139 -> 8
  *10 -> 8
  *119 -> 8
  *148 -> 8
  *72 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *196 -> true
  *197 -> true
  *152 -> true
  *153 -> true
  *198 -> true
  *199 -> true
  *22 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *50 -> true
  *55 -> true
  *12 -> true
  *67 -> false
  *157 -> false
  else -> true
}
$is_fnptr_type -> {
  *45 -> true
  *150 -> true
  *139 -> true
  *10 -> true
  *119 -> true
  *148 -> true
  *72 -> true
  else -> true
}
$f_root -> {
  *97 -> *158
  *138 -> *162
  *136 -> *164
  *121 -> *155
  *94 -> *154
  else -> *158
}
$int_to_ptr -> {
  76 -> *171
  106 -> *181
  else -> *171
}
$is_span_sequential -> {
  *94 -> true
  *121 -> true
  else -> true
}
$good_state -> {
  *341 -> true
  *89 -> true
  *16 -> true
  else -> true
}
$field_offset -> {
  *22 -> 0
  *143 -> 0
  *131 -> 8
  *47 -> 16
  *160 -> -18446744073709562932
  *162 -> 0
  *164 -> 0
  *158 -> 0
  *155 -> 0
  *169 -> -18446744073709563062
  *172 -> -18446744073709565785
  *154 -> 0
  *175 -> -18446744073709556372
  *179 -> -18446744073709563827
  *182 -> -18446744073709555298
  else -> 0
}
$base -> {
  *109 -> 0
  *50 -> 361
  *12 -> 4330
  *123 -> 18446744073709557126
  *151 -> 9089
  *171 -> 18446744073709561537
  *168 -> 622
  *69 -> 18446744073709558341
  *67 -> 622
  *156 -> 18446744073709551657
  *178 -> 2236
  *157 -> 2236
  *185 -> 586
  *181 -> 18446744073709556666
  *76 -> 18446744073709553200
  *55 -> 296
  else -> 622
}
$as_in_range_t -> {
  *91 -> *91
  *137 -> *137
  *110 -> *110
  *126 -> *126
  *120 -> *120
  *40 -> *40
  *32 -> *32
  *84 -> *84
  *33 -> *33
  else -> *91
}
$field_arr_root -> {
  *22 -> *22
  *143 -> *143
  *131 -> *131
  *47 -> *47
  *158 -> *158
  *162 -> *162
  *164 -> *164
  *196 -> *196
  *197 -> *197
  *152 -> *152
  *153 -> *153
  *198 -> *198
  *199 -> *199
  *154 -> *154
  *155 -> *155
  else -> *22
}
*** STATE <initial>
  $s -> *89
  $cev_pc -> **$cev_pc
  P#a -> *69
  P#b -> *76
  P#amount -> 407
  #wrTime$2^25.1 -> 6055
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(25,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
  $s -> *16
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@40620 -> true
%lbl%+40336 -> true
%lbl%@40453 -> true
%lbl%@40436 -> true
%lbl%+1948 -> true
%lbl%@40405 -> true
$position_marker -> true
%lbl%@40649 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
P#amount@@0 -> 407
^$#_onexit_t#4 -> *10
unique-value!79 -> *11
$untyped_owner_owner -> *12
$max.u4 -> 4294967295
#tok$2^41.3 -> *14
#wrTime$2^25.1 -> 2806
$s@0@@1 -> *16
$fk_ref_cnt -> *17
^^field -> *18
$max.u2 -> 65535
loop_entered -> *20
unique-value!59 -> *21
Account.amount -> *22
$ctype_flat -> *23
$fk_as_array_first -> *24
unique-value!56 -> *25
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *26
unique-value!67 -> *27
#tok$1^26.5 -> *28
^$#state_t -> *29
^$#struct -> *30
^$#seq_version -> *31
^^u4 -> *32
^^nat -> *33
^$#volatile_version_t -> *34
$max.i2 -> 32767
$ctype_blob -> *36
unique-value!72 -> *37
unique-value!75 -> *38
unique-value!90 -> *39
^^u2 -> *40
$min.i8 -> -9223372036854775808
unique-value!85 -> *42
^^f4 -> *43
unique-value!92 -> *44
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *45
^^claim -> *46
AccountGroup.total -> *47
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *49
$me -> *50
^^bool -> *51
$max.i1 -> 127
cev_parameter -> *53
unique-value!55 -> *54
$untyped_owner -> *55
unique-value!63 -> *56
unique-value!74 -> *57
^$#ptrset -> *58
^$##club -> *59
^^mathint -> *60
unique-value!66 -> *61
unique-value!60 -> *62
call1671formal@v@0 -> -2147483648
$min.i4 -> -2147483648
$arch_ptr_size -> 8
$struct_zero -> *65
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *66
call1671formal@p@0 -> *67
unique-value!80 -> *68
P#a@@0 -> *69
unique-value!88 -> *70
unique-value!84 -> *71
^$#_invalid_parameter_handler#7 -> *72
$min.i1 -> -128
unique-value!61 -> *74
conditional_moment -> *75
P#b@@0 -> *76
unique-value!65 -> *77
^^f8 -> *78
unique-value!87 -> *79
unique-value!89 -> *80
#tok$1^23.16 -> *81
$fk_base -> *82
#tok$1^28.5 -> *83
^^u8 -> *84
$arch_ptr_type -> *84
$set_empty -> *85
lambda@13 -> *85
$ctype_ptr -> *86
unique-value!82 -> *87
$fk_vol_version -> *88
$s -> *89
$max.u1 -> 255
^^i1 -> *91
^^object -> *92
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *94
$ctype_spec_ptr -> *95
unique-value!58 -> *96
^^void -> *97
unique-value!62 -> *98
unique-value!70 -> *99
unique-value!93 -> *100
$fk_active_option -> *101
$ctype_array -> *102
unique-value!77 -> *103
cev_local -> *104
#tok$2^47.3 -> *105
@MV_state_const -> 74
$ctype_map -> *107
loop_register -> *108
$null -> *109
^^i4 -> *110
$fk_allocation_root -> *111
unique-value!68 -> *112
unique-value!57 -> *113
loop_exited -> *114
$min.i2 -> -32768
cev_implicit -> *116
#tok$1^6.1 -> *117
lambda@21 -> *118
^$#account2.c..36689#5 -> *119
^^u1 -> *120
^AccountGroup -> *121
$primitive_emb_type -> *122
$no_claim -> *123
unique-value!71 -> *124
took_else_branch -> *125
^^i8 -> *126
took_then_branch -> *127
#tok$2^42.3 -> *128
unique-value!76 -> *129
unique-value!83 -> *130
AccountGroup.creditCard -> *131
^$##thread_id -> *132
unique-value!64 -> *133
unique-value!69 -> *134
#tok$2^46.3 -> *135
$untyped_owner_type -> *136
^^i2 -> *137
^$#thread_id_t -> *138
^$#account2.c..36585#3 -> *139
unique-value!91 -> *140
unique-value!73 -> *141
#tok$1^22.5 -> *142
AccountGroup.giro -> *143
^$#vol_version -> *144
#tok$1^13.1 -> *145
unique-value!86 -> *146
#tok$2^25.1 -> *147
^$#_purecall_handler#6 -> *148
unique-value!78 -> *149
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *150
$cev_pc -> **$cev_pc
#stackframe -> **#stackframe
$thread_local -> {
  *89 *151 -> true
  *89 *67 -> true
  *16 *152 -> false
  else -> true
}
$ptr_to -> {
  *94 -> *5
  else -> *5
}
$is_volatile_field -> {
  *153 -> true
  *154 -> true
  else -> true
}
$is_phys_field -> {
  *22 -> true
  *143 -> true
  *131 -> true
  *47 -> true
  *155 -> true
  *156 -> true
  else -> true
}
$owner -> {
  *89 *67 -> *50
  *89 *157 -> *50
  *16 *158 -> *50
  *16 *159 -> *55
  else -> *50
}
$ptr -> {
  *160 0 -> *109
  *162 18446744073709557126 -> *123
  *164 361 -> *50
  *166 296 -> *55
  *164 4330 -> *12
  *22 622 -> *170
  *155 622 -> *67
  *171 18446744073709552080 -> *173
  *174 18446744073709555718 -> *69
  *156 1408 -> *151
  *177 18446744073709555636 -> *157
  *22 840 -> *180
  *155 840 -> *158
  *181 18446744073709560246 -> *183
  *184 18446744073709559050 -> *76
  *156 1217 -> *152
  else -> *109
}
$closed -> {
  *89 *67 -> false
  *16 *158 -> false
  else -> false
}
$dot -> {
  *67 *22 -> *170
  *158 *22 -> *180
  else -> *170
}
$addr0 -> {
  *109 -> 0
  *123 -> 0
  *50 -> 361
  *55 -> 296
  *12 -> 4330
  *69 -> 1408
  *173 -> 622
  *67 -> 622
  *151 -> 1408
  *170 -> 622
  *157 -> 527
  *76 -> 1217
  *183 -> 840
  *158 -> 840
  *152 -> 1217
  *180 -> 840
  else -> 622
}
$is_proper -> {
  *50 -> true
  *55 -> true
  *12 -> true
  *170 -> true
  *180 -> true
  *67 -> true
  *151 -> true
  *157 -> true
  *158 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *67 -> true
  *170 -> true
  *151 -> true
  *158 -> true
  *180 -> true
  *152 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  else -> true
}
$current_timestamp -> {
  *89 -> 2806
  *16 -> 2807
  else -> 2806
}
$as_primitive_field -> {
  *22 -> *22
  *143 -> *143
  *131 -> *131
  *47 -> *47
  *160 -> *160
  *198 -> *198
  *199 -> *199
  *153 -> *153
  *154 -> *154
  *200 -> *200
  *201 -> *201
  else -> *22
}
$f_timestamp -> {
  *89 -> *202
  *16 -> *202
  else -> *202
}
Select_[$ptr]$int -> {
  *203 *151 -> 76
  *202 *67 -> 2806
  *205 *67 -> -2147483241
  *202 *158 -> 2806
  *202 *157 -> -216
  *203 *152 -> 117
  *209 *67 -> -2147483648
  else -> 2806
}
$unchecked -> {
  *32 4294967296 -> 0
  *84 18446744073709551616 -> 0
  *32 -1 -> 4294967295
  *84 -1 -> 18446744073709551615
  *110 -10000 -> -10000
  *84 0 -> 0
  *84 -5806 -> 0
  *84 361 -> 361
  *84 296 -> 296
  *84 4330 -> 4330
  *84 -7396 -> 622
  *84 -6931 -> 1408
  *84 622 -> 622
  *84 1408 -> 1408
  *84 -1091 -> 527
  *84 -7217 -> 840
  *84 -7999 -> 1217
  *84 840 -> 840
  *84 1217 -> 1217
  else -> 0
}
$mutable -> {
  *89 *67 -> true
  *16 *158 -> true
  else -> true
}
$is_primitive -> {
  *91 -> true
  *137 -> true
  *110 -> true
  *126 -> true
  *120 -> true
  *40 -> true
  *32 -> true
  *84 -> true
  *43 -> true
  *78 -> true
  *51 -> true
  *97 -> true
  *92 -> true
  *18 -> true
  *3 -> true
  *46 -> false
  *34 -> false
  *60 -> true
  *33 -> true
  *58 -> true
  *29 -> true
  *30 -> true
  *138 -> false
  *136 -> false
  *132 -> true
  *59 -> true
  *94 -> false
  *121 -> false
  *5 -> true
  *45 -> true
  *150 -> true
  *139 -> true
  *10 -> true
  *119 -> true
  *148 -> true
  *72 -> true
  *122 -> false
  *220 -> false
  else -> true
}
$as_field_with_type -> {
  *22 *110 -> *22
  *143 *5 -> *143
  *131 *5 -> *131
  *47 *110 -> *47
  *160 *97 -> *160
  *164 *138 -> *164
  *166 *136 -> *166
  *198 *58 -> *198
  *199 *58 -> *199
  *153 *58 -> *153
  *154 *58 -> *154
  *200 *58 -> *200
  *201 *58 -> *201
  *156 *121 -> *156
  *155 *94 -> *155
  else -> *22
}
$roots -> {
  *89 -> *221
  *16 -> *221
  else -> *221
}
$invok_state -> {
  *89 -> true
  *16 -> true
  else -> true
}
$is_sequential_field -> {
  *198 -> true
  *199 -> true
  *200 -> true
  *22 -> true
  *201 -> true
  *143 -> true
  *131 -> true
  *47 -> true
  *160 -> true
  *153 -> false
  else -> true
}
$is_math_type -> {
  *92 -> true
  *18 -> true
  *3 -> true
  *60 -> true
  *33 -> true
  *58 -> true
  *29 -> true
  *30 -> true
  *132 -> true
  *59 -> true
  else -> true
}
$file_name_is -> {
  2 *26 -> true
  1 *66 -> true
  else -> true
}
$unchk_add -> {
  *84 0 0 -> 0
  *84 18446744073709557126 -18446744073709562932 -> 0
  *84 361 0 -> 361
  *84 296 0 -> 296
  *84 4330 0 -> 4330
  *84 1408 0 -> 1408
  *84 18446744073709552080 -18446744073709559476 -> 622
  *84 18446744073709555718 -18446744073709562649 -> 1408
  *84 622 0 -> 622
  *84 18446744073709555636 -18446744073709556727 -> 527
  *84 1217 0 -> 1217
  *84 18446744073709560246 -18446744073709567463 -> 840
  *84 18446744073709559050 -18446744073709567049 -> 1217
  *84 840 0 -> 840
  else -> 0
}
$full_stop -> {
  *89 -> true
  *16 -> true
  else -> true
}
$writes_at -> {
  2806 -> *118
  else -> *118
}
$call_transition -> {
  *89 *16 -> true
  else -> true
}
$set_cardinality -> {
  *85 -> 0
  else -> 0
}
$is_claimable -> {
  *46 -> true
  *34 -> false
  *138 -> false
  *136 -> false
  *94 -> false
  *121 -> false
  *91 -> false
  *137 -> false
  *110 -> false
  *126 -> false
  *120 -> false
  *40 -> false
  *32 -> false
  *84 -> false
  *43 -> false
  *78 -> false
  *51 -> false
  *97 -> false
  *92 -> false
  *18 -> false
  *3 -> false
  *60 -> false
  *33 -> false
  *58 -> false
  *29 -> false
  *30 -> false
  *132 -> false
  *59 -> false
  *45 -> false
  *150 -> false
  *139 -> false
  *10 -> false
  *119 -> false
  *148 -> false
  *72 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *22 -> true
  *143 -> true
  *131 -> true
  *47 -> true
  *164 -> true
  *166 -> true
  *160 -> true
  *198 -> true
  *199 -> true
  *153 -> true
  *154 -> true
  *200 -> true
  *201 -> true
  *155 -> true
  *156 -> true
  else -> true
}
$f_closed -> {
  *89 -> *228
  *16 -> *228
  else -> *228
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *339 *143 -> *203
  *339 *22 -> *205
  *340 *143 -> *203
  *340 *22 -> *209
  else -> *203
}
$field_kind -> {
  *22 -> *82
  *143 -> *82
  *131 -> *82
  *47 -> *82
  *160 -> *111
  *164 -> *111
  *166 -> *111
  *198 -> *6
  *199 -> *6
  *153 -> *6
  *154 -> *6
  *200 -> *6
  *201 -> *6
  *155 -> *111
  *156 -> *111
  else -> *6
}
Select_[$ptr]$bool -> {
  *228 *67 -> false
  *228 *158 -> false
  else -> false
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *164 -> *164
  *166 -> *166
  *155 -> *155
  *156 -> *156
  else -> *164
}
$phys_ptr_cast -> {
  *69 *121 -> *151
  *173 *94 -> *67
  *76 *121 -> *152
  *183 *94 -> *158
  *67 *94 -> *67
  *151 *121 -> *151
  *170 *110 -> *170
  *158 *94 -> *158
  *152 *121 -> *152
  *180 *110 -> *180
  else -> *67
}
Store_[$ptr]$int -> {
  *205 *67 -2147483648 -> *209
  else -> *209
}
$prim_emb -> {
  *170 -> *67
  *180 -> *158
  else -> *67
}
$vs_state -> {
  *65 -> *341
  else -> *341
}
$trans_call_transition -> {
  *89 *16 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *122 -> *54
  *91 -> *25
  *137 -> *113
  *110 -> *96
  *126 -> *21
  *120 -> *62
  *40 -> *74
  *32 -> *98
  *84 -> *56
  *97 -> *133
  *51 -> *77
  *43 -> *61
  *78 -> *27
  *92 -> *112
  *18 -> *134
  *3 -> *99
  *46 -> *124
  *60 -> *37
  *33 -> *141
  *58 -> *57
  *29 -> *38
  *34 -> *129
  *30 -> *103
  *31 -> *149
  *144 -> *11
  *138 -> *68
  *136 -> *2
  *132 -> *87
  *59 -> *130
  *94 -> *71
  *121 -> *42
  *45 -> *146
  *150 -> *79
  *139 -> *70
  *10 -> *80
  *119 -> *39
  *148 -> *140
  *72 -> *44
  *5 -> *100
  else -> *54
}
$instantiate_int -> {
  117 -> true
  -2147483241 -> true
  76 -> true
  else -> true
}
$unchk_sub -> {
  *110 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *50 -> *164
  *55 -> *166
  *12 -> *164
  *123 -> *162
  *109 -> *160
  *170 -> *22
  *180 -> *22
  *151 -> *156
  *173 -> *171
  *69 -> *174
  *67 -> *155
  *157 -> *177
  *152 -> *156
  *183 -> *181
  *76 -> *184
  *158 -> *155
  else -> *164
}
$heap -> {
  *89 -> *339
  *16 -> *340
  else -> *339
}
$f_owns -> {
  *46 -> *198
  *34 -> *199
  *138 -> *153
  *136 -> *154
  *94 -> *200
  *121 -> *201
  else -> *198
}
$field_type -> {
  *162 -> *46
  *22 -> *110
  *143 -> *5
  *131 -> *5
  *47 -> *110
  *164 -> *138
  *166 -> *136
  *160 -> *97
  *198 -> *58
  *199 -> *58
  *153 -> *58
  *154 -> *58
  *200 -> *58
  *201 -> *58
  *156 -> *121
  *155 -> *94
  *177 -> *220
  else -> *58
}
$has_field_at0 -> {
  *94 *22 -> true
  *121 *143 -> true
  else -> true
}
$function_entry -> {
  *89 -> true
  else -> true
}
$good_state_ext -> {
  *147 *89 -> true
  *14 *16 -> true
  else -> true
}
$f_owner -> {
  *89 -> *343
  *16 -> *343
  else -> *343
}
$type_project_0 -> {
  *5 -> *94
  else -> *94
}
Store_[$field][$ptr]$int -> {
  *339 *22 *209 -> *340
  else -> *340
}
$type_branch -> {
  *91 -> *23
  *137 -> *23
  *110 -> *23
  *126 -> *23
  *120 -> *23
  *40 -> *23
  *32 -> *23
  *84 -> *23
  *43 -> *23
  *78 -> *23
  *51 -> *23
  *97 -> *23
  *92 -> *23
  *18 -> *23
  *3 -> *23
  *46 -> *23
  *34 -> *23
  *60 -> *23
  *33 -> *23
  *58 -> *23
  *29 -> *23
  *30 -> *23
  *138 -> *23
  *136 -> *23
  *132 -> *23
  *59 -> *23
  *94 -> *23
  *121 -> *23
  *45 -> *23
  *150 -> *23
  *139 -> *23
  *10 -> *23
  *119 -> *23
  *148 -> *23
  *72 -> *23
  *5 -> *86
  else -> *23
}
$maybe_emb -> {
  *67 -> *67
  *158 -> *158
  else -> *67
}
$in_range_t -> {
  *32 4294967296 -> false
  *32 0 -> true
  *84 18446744073709551616 -> false
  *84 0 -> true
  *32 -1 -> false
  *32 4294967295 -> true
  *84 -1 -> false
  *84 18446744073709551615 -> true
  *110 -10000 -> true
  *84 -5806 -> false
  *84 361 -> true
  *84 296 -> true
  *84 4330 -> true
  *84 622 -> true
  *84 1408 -> true
  *84 -7396 -> false
  *84 -6931 -> false
  *84 -1091 -> false
  *84 527 -> true
  *110 -2147483241 -> true
  *110 -2147483648 -> true
  *84 840 -> true
  *84 1217 -> true
  *84 -7217 -> false
  *84 -7999 -> false
  else -> true
}
Select_[$ptr]$ptr -> {
  *343 *67 -> *50
  *221 *67 -> *67
  *221 *151 -> *157
  *343 *157 -> *50
  *221 *157 -> *157
  *343 *158 -> *50
  *221 *158 -> *158
  *221 *152 -> *159
  *343 *159 -> *55
  else -> *50
}
$spec_ptr_cast -> {
  *50 *138 -> *50
  *55 *136 -> *55
  *12 *138 -> *12
  else -> *50
}
$is_union_type -> {
  *94 -> false
  *121 -> false
  else -> false
}
$field_parent_type -> {
  *22 -> *94
  *143 -> *121
  *131 -> *121
  *47 -> *121
  *164 -> *138
  *166 -> *136
  *160 -> *122
  *198 -> *46
  *199 -> *34
  *153 -> *138
  *154 -> *136
  *200 -> *94
  *201 -> *121
  *155 -> *94
  *156 -> *121
  else -> *121
}
$sizeof -> {
  *91 -> 1
  *137 -> 2
  *110 -> 4
  *126 -> 8
  *120 -> 1
  *40 -> 2
  *32 -> 4
  *84 -> 8
  *43 -> 4
  *78 -> 8
  *51 -> 1
  *97 -> 1
  *92 -> 1
  *18 -> 1
  *3 -> 1
  *46 -> 1
  *34 -> 1
  *60 -> 1
  *33 -> 1
  *58 -> 1
  *29 -> 1
  *30 -> 1
  *138 -> 1
  *136 -> 1
  *132 -> 1
  *59 -> 1
  *94 -> 4
  *121 -> 24
  *45 -> 8
  *150 -> 8
  *139 -> 8
  *10 -> 8
  *119 -> 8
  *148 -> 8
  *72 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *198 -> true
  *199 -> true
  *153 -> true
  *154 -> true
  *200 -> true
  *201 -> true
  *22 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *50 -> true
  *55 -> true
  *12 -> true
  *67 -> false
  *158 -> false
  else -> true
}
$is_fnptr_type -> {
  *45 -> true
  *150 -> true
  *139 -> true
  *10 -> true
  *119 -> true
  *148 -> true
  *72 -> true
  else -> true
}
$f_root -> {
  *97 -> *160
  *138 -> *164
  *136 -> *166
  *121 -> *156
  *94 -> *155
  else -> *160
}
$int_to_ptr -> {
  76 -> *173
  117 -> *183
  else -> *173
}
$is_span_sequential -> {
  *94 -> true
  *121 -> true
  else -> true
}
$good_state -> {
  *341 -> true
  *89 -> true
  *16 -> true
  else -> true
}
$field_offset -> {
  *22 -> 0
  *143 -> 0
  *131 -> 8
  *47 -> 16
  *162 -> -18446744073709562932
  *164 -> 0
  *166 -> 0
  *160 -> 0
  *156 -> 0
  *171 -> -18446744073709559476
  *174 -> -18446744073709562649
  *155 -> 0
  *177 -> -18446744073709556727
  *181 -> -18446744073709567463
  *184 -> -18446744073709567049
  else -> 0
}
$base -> {
  *109 -> 0
  *50 -> 361
  *55 -> 296
  *12 -> 4330
  *123 -> 18446744073709557126
  *151 -> 1408
  *173 -> 18446744073709552080
  *170 -> 622
  *69 -> 18446744073709555718
  *67 -> 622
  *157 -> 18446744073709555636
  *180 -> 840
  *152 -> 1217
  *183 -> 18446744073709560246
  *158 -> 840
  *76 -> 18446744073709559050
  else -> 622
}
$as_in_range_t -> {
  *91 -> *91
  *137 -> *137
  *110 -> *110
  *126 -> *126
  *120 -> *120
  *40 -> *40
  *32 -> *32
  *84 -> *84
  *33 -> *33
  else -> *91
}
$field_arr_root -> {
  *22 -> *22
  *143 -> *143
  *131 -> *131
  *47 -> *47
  *160 -> *160
  *164 -> *164
  *166 -> *166
  *198 -> *198
  *199 -> *199
  *153 -> *153
  *154 -> *154
  *200 -> *200
  *201 -> *201
  *155 -> *155
  *156 -> *156
  else -> *22
}
*** STATE <initial>
  $s -> *89
  $cev_pc -> **$cev_pc
  P#a -> *69
  P#b -> *76
  P#amount -> 407
  #wrTime$2^25.1 -> 2806
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(25,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
  $s -> *16
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@40620 -> true
%lbl%+40336 -> true
%lbl%@40453 -> true
%lbl%@40436 -> true
%lbl%+1948 -> true
%lbl%@40405 -> true
%lbl%@40649 -> true
$position_marker -> true
%lbl%@40665 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
P#amount@@0 -> -2093
^$#_onexit_t#4 -> *10
unique-value!79 -> *11
$untyped_owner_owner -> *12
$max.u4 -> 4294967295
#tok$2^41.3 -> *14
#wrTime$2^25.1 -> 141
$s@0@@1 -> *16
$fk_ref_cnt -> *17
^^field -> *18
$max.u2 -> 65535
loop_entered -> *20
unique-value!59 -> *21
Account.amount -> *22
$ctype_flat -> *23
$fk_as_array_first -> *24
unique-value!56 -> *25
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *26
unique-value!67 -> *27
#tok$1^26.5 -> *28
^$#state_t -> *29
^$#struct -> *30
^$#seq_version -> *31
^^u4 -> *32
^^nat -> *33
^$#volatile_version_t -> *34
$max.i2 -> 32767
$ctype_blob -> *36
unique-value!72 -> *37
unique-value!75 -> *38
unique-value!90 -> *39
^^u2 -> *40
$min.i8 -> -9223372036854775808
unique-value!85 -> *42
^^f4 -> *43
unique-value!92 -> *44
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *45
^^claim -> *46
AccountGroup.total -> *47
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *49
$me -> *50
^^bool -> *51
$max.i1 -> 127
cev_parameter -> *53
unique-value!55 -> *54
$untyped_owner -> *55
unique-value!63 -> *56
unique-value!74 -> *57
^$#ptrset -> *58
^$##club -> *59
^^mathint -> *60
unique-value!66 -> *61
unique-value!60 -> *62
call1671formal@v@0 -> -2147481555
$arch_ptr_size -> 8
$struct_zero -> *65
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *66
call1671formal@p@0 -> *67
unique-value!80 -> *68
P#a@@0 -> *69
unique-value!88 -> *70
unique-value!84 -> *71
^$#_invalid_parameter_handler#7 -> *72
$min.i1 -> -128
unique-value!61 -> *74
conditional_moment -> *75
P#b@@0 -> *76
unique-value!65 -> *77
^^f8 -> *78
unique-value!87 -> *79
unique-value!89 -> *80
#tok$1^23.16 -> *81
$fk_base -> *82
#tok$1^28.5 -> *83
^^u8 -> *84
$arch_ptr_type -> *84
$set_empty -> *85
lambda@13 -> *85
$ctype_ptr -> *86
unique-value!82 -> *87
$fk_vol_version -> *88
$s -> *89
$max.u1 -> 255
^^i1 -> *91
^^object -> *92
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *94
$ctype_spec_ptr -> *95
unique-value!58 -> *96
^^void -> *97
unique-value!62 -> *98
unique-value!70 -> *99
unique-value!93 -> *100
$fk_active_option -> *101
$ctype_array -> *102
unique-value!77 -> *103
cev_local -> *104
#tok$2^47.3 -> *105
@MV_state_const -> 74
$ctype_map -> *107
loop_register -> *108
$null -> *109
^^i4 -> *110
$fk_allocation_root -> *111
unique-value!68 -> *112
unique-value!57 -> *113
loop_exited -> *114
$min.i2 -> -32768
cev_implicit -> *116
#tok$1^6.1 -> *117
lambda@21 -> *118
^$#account2.c..36689#5 -> *119
^^u1 -> *120
^AccountGroup -> *121
$primitive_emb_type -> *122
$no_claim -> *123
unique-value!71 -> *124
took_else_branch -> *125
^^i8 -> *126
took_then_branch -> *127
#tok$2^42.3 -> *128
unique-value!76 -> *129
unique-value!83 -> *130
AccountGroup.creditCard -> *131
^$##thread_id -> *132
$min.i4 -> -2147483648
unique-value!64 -> *134
unique-value!69 -> *135
#tok$2^46.3 -> *136
$untyped_owner_type -> *137
^^i2 -> *138
^$#thread_id_t -> *139
^$#account2.c..36585#3 -> *140
unique-value!91 -> *141
unique-value!73 -> *142
#tok$1^22.5 -> *143
AccountGroup.giro -> *144
^$#vol_version -> *145
#tok$1^13.1 -> *146
unique-value!86 -> *147
#tok$2^25.1 -> *148
^$#_purecall_handler#6 -> *149
unique-value!78 -> *150
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *151
$cev_pc -> **$cev_pc
#stackframe -> **#stackframe
$thread_local -> {
  *89 *152 -> true
  *89 *67 -> true
  *16 *153 -> true
  else -> true
}
$ptr_to -> {
  *94 -> *5
  else -> *5
}
$is_volatile_field -> {
  *154 -> true
  *155 -> true
  else -> true
}
$is_phys_field -> {
  *22 -> true
  *144 -> true
  *131 -> true
  *47 -> true
  *156 -> true
  *157 -> true
  else -> true
}
$owner -> {
  *89 *67 -> *50
  *89 *158 -> *50
  *16 *159 -> *50
  *16 *160 -> *50
  else -> *50
}
$ptr -> {
  *161 0 -> *109
  *163 18446744073709557126 -> *123
  *165 361 -> *50
  *167 296 -> *55
  *165 4330 -> *12
  *22 622 -> *171
  *156 622 -> *67
  *172 18446744073709557433 -> *174
  *175 18446744073709561588 -> *69
  *157 7626 -> *152
  *178 18446744073709557996 -> *158
  *22 840 -> *181
  *156 840 -> *159
  *182 18446744073709559967 -> *184
  *185 18446744073709558024 -> *76
  *157 2214 -> *153
  *188 18446744073709556522 -> *160
  else -> *109
}
$closed -> {
  *89 *67 -> false
  *16 *159 -> false
  else -> false
}
$dot -> {
  *67 *22 -> *171
  *159 *22 -> *181
  else -> *171
}
$addr0 -> {
  *109 -> 0
  *123 -> 0
  *50 -> 361
  *55 -> 296
  *12 -> 4330
  *69 -> 7626
  *174 -> 622
  *67 -> 622
  *152 -> 7626
  *171 -> 622
  *158 -> 527
  *76 -> 2214
  *184 -> 840
  *159 -> 840
  *153 -> 2214
  *181 -> 840
  *160 -> 218
  else -> 622
}
$is_proper -> {
  *50 -> true
  *55 -> true
  *12 -> true
  *171 -> true
  *181 -> true
  *67 -> true
  *152 -> true
  *158 -> true
  *159 -> true
  *153 -> true
  *160 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *67 -> true
  *171 -> true
  *152 -> true
  *159 -> true
  *181 -> true
  *153 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  74 11 -> true
  else -> true
}
$current_timestamp -> {
  *89 -> 141
  *16 -> 142
  else -> 141
}
$as_primitive_field -> {
  *22 -> *22
  *144 -> *144
  *131 -> *131
  *47 -> *47
  *161 -> *161
  *203 -> *203
  *204 -> *204
  *154 -> *154
  *155 -> *155
  *205 -> *205
  *206 -> *206
  else -> *22
}
$f_timestamp -> {
  *89 -> *207
  *16 -> *207
  else -> *207
}
Select_[$ptr]$int -> {
  *208 *152 -> 76
  *207 *67 -> 141
  *210 *67 -> -2147483648
  *207 *159 -> 141
  *211 *159 -> -2147481556
  *207 *158 -> -216
  *208 *153 -> 119
  *211 *67 -> -2147481555
  *210 *159 -> -2147481556
  else -> 141
}
$unchecked -> {
  *32 4294967296 -> 0
  *84 18446744073709551616 -> 0
  *32 -1 -> 4294967295
  *84 -1 -> 18446744073709551615
  *110 -10000 -> -10000
  *84 0 -> 0
  *84 -5806 -> 0
  *84 361 -> 361
  *84 296 -> 296
  *84 4330 -> 4330
  *84 -5189 -> 622
  *84 -7830 -> 7626
  *84 622 -> 622
  *84 7626 -> 7626
  *84 -4162 -> 527
  *84 -3858 -> 840
  *84 -927 -> 2214
  *84 840 -> 840
  *84 2214 -> 2214
  *84 -294 -> 218
  else -> 0
}
$mutable -> {
  *89 *67 -> true
  *16 *159 -> true
  else -> true
}
$is_primitive -> {
  *91 -> true
  *138 -> true
  *110 -> true
  *126 -> true
  *120 -> true
  *40 -> true
  *32 -> true
  *84 -> true
  *43 -> true
  *78 -> true
  *51 -> true
  *97 -> true
  *92 -> true
  *18 -> true
  *3 -> true
  *46 -> false
  *34 -> false
  *60 -> true
  *33 -> true
  *58 -> true
  *29 -> true
  *30 -> true
  *139 -> false
  *137 -> false
  *132 -> true
  *59 -> true
  *94 -> false
  *121 -> false
  *5 -> true
  *45 -> true
  *151 -> true
  *140 -> true
  *10 -> true
  *119 -> true
  *149 -> true
  *72 -> true
  *122 -> false
  *226 -> false
  *227 -> false
  else -> true
}
$as_field_with_type -> {
  *22 *110 -> *22
  *144 *5 -> *144
  *131 *5 -> *131
  *47 *110 -> *47
  *161 *97 -> *161
  *165 *139 -> *165
  *167 *137 -> *167
  *203 *58 -> *203
  *204 *58 -> *204
  *154 *58 -> *154
  *155 *58 -> *155
  *205 *58 -> *205
  *206 *58 -> *206
  *157 *121 -> *157
  *156 *94 -> *156
  else -> *22
}
$roots -> {
  *89 -> *228
  *16 -> *228
  else -> *228
}
$invok_state -> {
  *89 -> true
  *16 -> true
  else -> true
}
$is_sequential_field -> {
  *203 -> true
  *204 -> true
  *205 -> true
  *22 -> true
  *206 -> true
  *144 -> true
  *131 -> true
  *47 -> true
  *161 -> true
  *154 -> false
  else -> true
}
$is_math_type -> {
  *92 -> true
  *18 -> true
  *3 -> true
  *60 -> true
  *33 -> true
  *58 -> true
  *29 -> true
  *30 -> true
  *132 -> true
  *59 -> true
  else -> true
}
$file_name_is -> {
  2 *26 -> true
  1 *66 -> true
  else -> true
}
$unchk_add -> {
  *84 0 0 -> 0
  *84 18446744073709557126 -18446744073709562932 -> 0
  *84 361 0 -> 361
  *84 296 0 -> 296
  *84 4330 0 -> 4330
  *84 7626 0 -> 7626
  *84 18446744073709557433 -18446744073709562622 -> 622
  *84 18446744073709561588 -18446744073709569418 -> 7626
  *84 622 0 -> 622
  *84 18446744073709557996 -18446744073709562158 -> 527
  *84 2214 0 -> 2214
  *84 18446744073709559967 -18446744073709563825 -> 840
  *84 18446744073709558024 -18446744073709558951 -> 2214
  *84 840 0 -> 840
  *84 18446744073709556522 -18446744073709556816 -> 218
  else -> 0
}
$full_stop -> {
  *89 -> true
  *16 -> true
  else -> true
}
$writes_at -> {
  141 -> *118
  else -> *118
}
$call_transition -> {
  *89 *16 -> true
  else -> true
}
$set_cardinality -> {
  *85 -> 0
  else -> 0
}
$is_claimable -> {
  *46 -> true
  *34 -> false
  *139 -> false
  *137 -> false
  *94 -> false
  *121 -> false
  *91 -> false
  *138 -> false
  *110 -> false
  *126 -> false
  *120 -> false
  *40 -> false
  *32 -> false
  *84 -> false
  *43 -> false
  *78 -> false
  *51 -> false
  *97 -> false
  *92 -> false
  *18 -> false
  *3 -> false
  *60 -> false
  *33 -> false
  *58 -> false
  *29 -> false
  *30 -> false
  *132 -> false
  *59 -> false
  *45 -> false
  *151 -> false
  *140 -> false
  *10 -> false
  *119 -> false
  *149 -> false
  *72 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *22 -> true
  *144 -> true
  *131 -> true
  *47 -> true
  *165 -> true
  *167 -> true
  *161 -> true
  *203 -> true
  *204 -> true
  *154 -> true
  *155 -> true
  *205 -> true
  *206 -> true
  *156 -> true
  *157 -> true
  else -> true
}
$f_closed -> {
  *89 -> *236
  *16 -> *236
  else -> *236
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *346 *144 -> *208
  *346 *22 -> *210
  *347 *144 -> *208
  *347 *22 -> *211
  else -> *208
}
$field_kind -> {
  *22 -> *82
  *144 -> *82
  *131 -> *82
  *47 -> *82
  *161 -> *111
  *165 -> *111
  *167 -> *111
  *203 -> *6
  *204 -> *6
  *154 -> *6
  *155 -> *6
  *205 -> *6
  *206 -> *6
  *156 -> *111
  *157 -> *111
  else -> *6
}
Select_[$ptr]$bool -> {
  *236 *67 -> false
  *236 *159 -> false
  else -> false
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *165 -> *165
  *167 -> *167
  *156 -> *156
  *157 -> *157
  else -> *165
}
$phys_ptr_cast -> {
  *69 *121 -> *152
  *174 *94 -> *67
  *76 *121 -> *153
  *184 *94 -> *159
  *67 *94 -> *67
  *152 *121 -> *152
  *171 *110 -> *171
  *159 *94 -> *159
  *153 *121 -> *153
  *181 *110 -> *181
  else -> *67
}
Store_[$ptr]$int -> {
  *210 *67 -2147481555 -> *211
  else -> *211
}
$prim_emb -> {
  *171 -> *67
  *181 -> *159
  else -> *67
}
$vs_state -> {
  *65 -> *348
  else -> *348
}
$trans_call_transition -> {
  *89 *16 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *122 -> *54
  *91 -> *25
  *138 -> *113
  *110 -> *96
  *126 -> *21
  *120 -> *62
  *40 -> *74
  *32 -> *98
  *84 -> *56
  *97 -> *134
  *51 -> *77
  *43 -> *61
  *78 -> *27
  *92 -> *112
  *18 -> *135
  *3 -> *99
  *46 -> *124
  *60 -> *37
  *33 -> *142
  *58 -> *57
  *29 -> *38
  *34 -> *129
  *30 -> *103
  *31 -> *150
  *145 -> *11
  *139 -> *68
  *137 -> *2
  *132 -> *87
  *59 -> *130
  *94 -> *71
  *121 -> *42
  *45 -> *147
  *151 -> *79
  *140 -> *70
  *10 -> *80
  *119 -> *39
  *149 -> *141
  *72 -> *44
  *5 -> *100
  else -> *54
}
$instantiate_int -> {
  119 -> true
  -2147483648 -> true
  76 -> true
  -2147481556 -> true
  else -> true
}
$unchk_sub -> {
  *110 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *50 -> *165
  *55 -> *167
  *12 -> *165
  *123 -> *163
  *109 -> *161
  *171 -> *22
  *181 -> *22
  *152 -> *157
  *174 -> *172
  *69 -> *175
  *67 -> *156
  *158 -> *178
  *153 -> *157
  *184 -> *182
  *76 -> *185
  *159 -> *156
  *160 -> *188
  else -> *165
}
$heap -> {
  *89 -> *346
  *16 -> *347
  else -> *346
}
$f_owns -> {
  *46 -> *203
  *34 -> *204
  *139 -> *154
  *137 -> *155
  *94 -> *205
  *121 -> *206
  else -> *203
}
$field_type -> {
  *163 -> *46
  *22 -> *110
  *144 -> *5
  *131 -> *5
  *47 -> *110
  *165 -> *139
  *167 -> *137
  *161 -> *97
  *203 -> *58
  *204 -> *58
  *154 -> *58
  *155 -> *58
  *205 -> *58
  *206 -> *58
  *157 -> *121
  *156 -> *94
  *178 -> *226
  *188 -> *227
  else -> *58
}
$has_field_at0 -> {
  *94 *22 -> true
  *121 *144 -> true
  else -> true
}
$function_entry -> {
  *89 -> true
  else -> true
}
$good_state_ext -> {
  *148 *89 -> true
  *14 *16 -> true
  else -> true
}
$f_owner -> {
  *89 -> *350
  *16 -> *350
  else -> *350
}
$type_project_0 -> {
  *5 -> *94
  else -> *94
}
Store_[$field][$ptr]$int -> {
  *346 *22 *211 -> *347
  else -> *347
}
$type_branch -> {
  *91 -> *23
  *138 -> *23
  *110 -> *23
  *126 -> *23
  *120 -> *23
  *40 -> *23
  *32 -> *23
  *84 -> *23
  *43 -> *23
  *78 -> *23
  *51 -> *23
  *97 -> *23
  *92 -> *23
  *18 -> *23
  *3 -> *23
  *46 -> *23
  *34 -> *23
  *60 -> *23
  *33 -> *23
  *58 -> *23
  *29 -> *23
  *30 -> *23
  *139 -> *23
  *137 -> *23
  *132 -> *23
  *59 -> *23
  *94 -> *23
  *121 -> *23
  *45 -> *23
  *151 -> *23
  *140 -> *23
  *10 -> *23
  *119 -> *23
  *149 -> *23
  *72 -> *23
  *5 -> *86
  else -> *23
}
$maybe_emb -> {
  *67 -> *67
  *159 -> *159
  else -> *67
}
$in_range_t -> {
  *32 4294967296 -> false
  *32 0 -> true
  *84 18446744073709551616 -> false
  *84 0 -> true
  *32 -1 -> false
  *32 4294967295 -> true
  *84 -1 -> false
  *84 18446744073709551615 -> true
  *110 -10000 -> true
  *84 -5806 -> false
  *84 361 -> true
  *84 296 -> true
  *84 4330 -> true
  *84 622 -> true
  *84 7626 -> true
  *84 -5189 -> false
  *84 -7830 -> false
  *84 -4162 -> false
  *84 527 -> true
  *110 -2147483648 -> true
  *110 -2147481555 -> true
  *84 840 -> true
  *84 2214 -> true
  *84 -3858 -> false
  *84 -927 -> false
  *84 -294 -> false
  *84 218 -> true
  *110 -2147481556 -> true
  else -> true
}
Select_[$ptr]$ptr -> {
  *350 *67 -> *50
  *228 *67 -> *67
  *228 *152 -> *158
  *350 *158 -> *50
  *228 *158 -> *158
  *350 *159 -> *50
  *228 *159 -> *159
  *228 *153 -> *160
  *350 *160 -> *50
  *228 *160 -> *160
  else -> *50
}
$spec_ptr_cast -> {
  *50 *139 -> *50
  *55 *137 -> *55
  *12 *139 -> *12
  else -> *50
}
$is_union_type -> {
  *94 -> false
  *121 -> false
  else -> false
}
$field_parent_type -> {
  *22 -> *94
  *144 -> *121
  *131 -> *121
  *47 -> *121
  *165 -> *139
  *167 -> *137
  *161 -> *122
  *203 -> *46
  *204 -> *34
  *154 -> *139
  *155 -> *137
  *205 -> *94
  *206 -> *121
  *156 -> *94
  *157 -> *121
  else -> *121
}
$sizeof -> {
  *91 -> 1
  *138 -> 2
  *110 -> 4
  *126 -> 8
  *120 -> 1
  *40 -> 2
  *32 -> 4
  *84 -> 8
  *43 -> 4
  *78 -> 8
  *51 -> 1
  *97 -> 1
  *92 -> 1
  *18 -> 1
  *3 -> 1
  *46 -> 1
  *34 -> 1
  *60 -> 1
  *33 -> 1
  *58 -> 1
  *29 -> 1
  *30 -> 1
  *139 -> 1
  *137 -> 1
  *132 -> 1
  *59 -> 1
  *94 -> 4
  *121 -> 24
  *45 -> 8
  *151 -> 8
  *140 -> 8
  *10 -> 8
  *119 -> 8
  *149 -> 8
  *72 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *203 -> true
  *204 -> true
  *154 -> true
  *155 -> true
  *205 -> true
  *206 -> true
  *22 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *50 -> true
  *55 -> true
  *12 -> true
  *67 -> false
  *159 -> false
  else -> true
}
$is_fnptr_type -> {
  *45 -> true
  *151 -> true
  *140 -> true
  *10 -> true
  *119 -> true
  *149 -> true
  *72 -> true
  else -> true
}
$f_root -> {
  *97 -> *161
  *139 -> *165
  *137 -> *167
  *121 -> *157
  *94 -> *156
  else -> *161
}
$int_to_ptr -> {
  76 -> *174
  119 -> *184
  else -> *174
}
$is_span_sequential -> {
  *94 -> true
  *121 -> true
  else -> true
}
$good_state -> {
  *348 -> true
  *89 -> true
  *16 -> true
  else -> true
}
$field_offset -> {
  *22 -> 0
  *144 -> 0
  *131 -> 8
  *47 -> 16
  *163 -> -18446744073709562932
  *165 -> 0
  *167 -> 0
  *161 -> 0
  *157 -> 0
  *172 -> -18446744073709562622
  *175 -> -18446744073709569418
  *156 -> 0
  *178 -> -18446744073709562158
  *182 -> -18446744073709563825
  *185 -> -18446744073709558951
  *188 -> -18446744073709556816
  else -> 0
}
$base -> {
  *109 -> 0
  *50 -> 361
  *55 -> 296
  *12 -> 4330
  *123 -> 18446744073709557126
  *152 -> 7626
  *174 -> 18446744073709557433
  *171 -> 622
  *69 -> 18446744073709561588
  *67 -> 622
  *158 -> 18446744073709557996
  *181 -> 840
  *153 -> 2214
  *184 -> 18446744073709559967
  *159 -> 840
  *76 -> 18446744073709558024
  *160 -> 18446744073709556522
  else -> 622
}
$as_in_range_t -> {
  *91 -> *91
  *138 -> *138
  *110 -> *110
  *126 -> *126
  *120 -> *120
  *40 -> *40
  *32 -> *32
  *84 -> *84
  *33 -> *33
  else -> *91
}
$field_arr_root -> {
  *22 -> *22
  *144 -> *144
  *131 -> *131
  *47 -> *47
  *161 -> *161
  *165 -> *165
  *167 -> *167
  *203 -> *203
  *204 -> *204
  *154 -> *154
  *155 -> *155
  *205 -> *205
  *206 -> *206
  *156 -> *156
  *157 -> *157
  else -> *22
}
*** STATE <initial>
  $s -> *89
  $cev_pc -> **$cev_pc
  P#a -> *69
  P#b -> *76
  P#amount -> -2093
  #wrTime$2^25.1 -> 141
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(25,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
  $s -> *16
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,21)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@40620 -> true
%lbl%@40665 -> true
%lbl%+40336 -> true
%lbl%@40453 -> true
%lbl%@40436 -> true
%lbl%+1948 -> true
%lbl%@40405 -> true
%lbl%@40649 -> true
$position_marker -> true
%lbl%@40823 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
P#amount@@0 -> -2147481756
^$#_onexit_t#4 -> *10
unique-value!79 -> *11
$untyped_owner_owner -> *12
$max.u4 -> 4294967295
#tok$2^41.3 -> *14
#wrTime$2^25.1 -> 64
$s@0@@1 -> *16
$fk_ref_cnt -> *17
^^field -> *18
$max.u2 -> 65535
loop_entered -> *20
unique-value!59 -> *21
Account.amount -> *22
$ctype_flat -> *23
$fk_as_array_first -> *24
unique-value!56 -> *25
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *26
unique-value!67 -> *27
#tok$1^26.5 -> *28
^$#state_t -> *29
^$#struct -> *30
^$#seq_version -> *31
^^u4 -> *32
^^nat -> *33
^$#volatile_version_t -> *34
$max.i2 -> 32767
$ctype_blob -> *36
unique-value!72 -> *37
unique-value!75 -> *38
unique-value!90 -> *39
^^u2 -> *40
$min.i8 -> -9223372036854775808
unique-value!85 -> *42
^^f4 -> *43
unique-value!92 -> *44
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *45
^^claim -> *46
AccountGroup.total -> *47
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *49
$me -> *50
^^bool -> *51
$max.i1 -> 127
cev_parameter -> *53
unique-value!55 -> *54
$untyped_owner -> *55
unique-value!63 -> *56
unique-value!74 -> *57
^$#ptrset -> *58
^$##club -> *59
^^mathint -> *60
unique-value!66 -> *61
unique-value!60 -> *62
call1671formal@v@0 -> -1892
$arch_ptr_size -> 8
$struct_zero -> *65
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *66
call1671formal@p@0 -> *67
unique-value!80 -> *68
P#a@@0 -> *69
unique-value!88 -> *70
unique-value!84 -> *71
^$#_invalid_parameter_handler#7 -> *72
$min.i1 -> -128
unique-value!61 -> *74
conditional_moment -> *75
P#b@@0 -> *76
unique-value!65 -> *77
^^f8 -> *78
unique-value!87 -> *79
unique-value!89 -> *80
#tok$1^23.16 -> *81
$fk_base -> *82
#tok$1^28.5 -> *83
^^u8 -> *84
$arch_ptr_type -> *84
$set_empty -> *85
lambda@13 -> *85
$ctype_ptr -> *86
unique-value!82 -> *87
$fk_vol_version -> *88
$s -> *89
$max.u1 -> 255
^^i1 -> *91
^^object -> *92
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *94
$ctype_spec_ptr -> *95
unique-value!58 -> *96
^^void -> *97
unique-value!62 -> *98
unique-value!70 -> *99
unique-value!93 -> *100
$fk_active_option -> *101
$ctype_array -> *102
unique-value!77 -> *103
cev_local -> *104
#tok$2^47.3 -> *105
@MV_state_const -> 75
$ctype_map -> *107
loop_register -> *108
$null -> *109
^^i4 -> *110
$fk_allocation_root -> *111
unique-value!68 -> *112
unique-value!57 -> *113
loop_exited -> *114
$min.i2 -> -32768
cev_implicit -> *116
#tok$1^6.1 -> *117
lambda@21 -> *118
^$#account2.c..36689#5 -> *119
^^u1 -> *120
call1790formal@v@0 -> -2147473777
^AccountGroup -> *122
$primitive_emb_type -> *123
$no_claim -> *124
unique-value!71 -> *125
took_else_branch -> *126
$s@1@@1 -> *127
^^i8 -> *128
took_then_branch -> *129
#tok$2^42.3 -> *130
unique-value!76 -> *131
unique-value!83 -> *132
AccountGroup.creditCard -> *133
^$##thread_id -> *134
$min.i4 -> -2147483648
unique-value!64 -> *136
unique-value!69 -> *137
#tok$2^46.3 -> *138
$untyped_owner_type -> *139
^^i2 -> *140
^$#thread_id_t -> *141
^$#account2.c..36585#3 -> *142
unique-value!91 -> *143
unique-value!73 -> *144
#tok$1^22.5 -> *145
AccountGroup.giro -> *146
^$#vol_version -> *147
#tok$1^13.1 -> *148
unique-value!86 -> *149
#tok$2^25.1 -> *150
^$#_purecall_handler#6 -> *151
call1790formal@p@0 -> *152
unique-value!78 -> *153
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *154
$cev_pc -> **$cev_pc
#stackframe -> **#stackframe
$thread_local -> {
  *89 *155 -> true
  *89 *67 -> true
  *16 *156 -> true
  *16 *152 -> true
  else -> true
}
$ptr_to -> {
  *94 -> *5
  else -> *5
}
$is_volatile_field -> {
  *157 -> true
  *158 -> true
  else -> true
}
$is_phys_field -> {
  *22 -> true
  *146 -> true
  *133 -> true
  *47 -> true
  *159 -> true
  *160 -> true
  else -> true
}
$owner -> {
  *89 *67 -> *50
  *89 *161 -> *50
  *16 *152 -> *50
  *16 *162 -> *50
  *127 *155 -> *55
  *16 *155 -> *55
  *89 *155 -> *55
  else -> *50
}
$ptr -> {
  *163 0 -> *109
  *165 18446744073709557126 -> *124
  *167 361 -> *50
  *169 296 -> *55
  *167 4330 -> *12
  *22 622 -> *173
  *159 622 -> *67
  *174 18446744073709558713 -> *176
  *177 18446744073709555235 -> *69
  *160 1795 -> *155
  *180 18446744073709555631 -> *161
  *22 840 -> *183
  *159 840 -> *152
  *184 18446744073709560027 -> *186
  *187 18446744073709559930 -> *76
  *160 6562 -> *156
  *190 18446744073709552115 -> *162
  *47 1795 -> *192
  else -> *109
}
$closed -> {
  *89 *67 -> false
  *16 *152 -> false
  else -> false
}
$dot -> {
  *67 *22 -> *173
  *152 *22 -> *183
  *155 *47 -> *192
  else -> *173
}
$addr0 -> {
  *109 -> 0
  *124 -> 0
  *50 -> 361
  *12 -> 4330
  *69 -> 1795
  *176 -> 622
  *67 -> 622
  *155 -> 1795
  *173 -> 622
  *161 -> 527
  *76 -> 6562
  *186 -> 840
  *152 -> 840
  *156 -> 6562
  *183 -> 840
  *162 -> 218
  *192 -> 1811
  *55 -> 296
  else -> 622
}
$is_proper -> {
  *50 -> true
  *12 -> true
  *173 -> true
  *183 -> true
  *67 -> true
  *155 -> true
  *161 -> true
  *152 -> true
  *156 -> true
  *162 -> true
  *192 -> true
  *55 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *67 -> true
  *173 -> true
  *155 -> true
  *152 -> true
  *183 -> true
  *156 -> true
  *192 -> true
  else -> true
}
@MV_state -> {
  75 0 -> true
  75 1 -> true
  75 2 -> true
  75 3 -> true
  75 4 -> true
  75 5 -> true
  75 6 -> true
  75 7 -> true
  75 8 -> true
  75 9 -> true
  75 10 -> true
  75 11 -> true
  75 12 -> true
  75 13 -> true
  75 14 -> true
  75 15 -> true
  else -> true
}
$current_timestamp -> {
  *89 -> 64
  *16 -> 65
  *127 -> 435
  else -> 64
}
$as_primitive_field -> {
  *22 -> *22
  *146 -> *146
  *133 -> *133
  *47 -> *47
  *163 -> *163
  *212 -> *212
  *213 -> *213
  *157 -> *157
  *158 -> *158
  *214 -> *214
  *215 -> *215
  else -> *22
}
$f_timestamp -> {
  *89 -> *216
  *16 -> *216
  *127 -> *216
  else -> *216
}
Select_[$ptr]$int -> {
  *217 *155 -> 77
  *216 *67 -> 64
  *219 *67 -> -2147483648
  *216 *152 -> 64
  *220 *152 -> 7979
  *216 *155 -> 64
  *216 *161 -> -216
  *217 *156 -> 122
  *220 *67 -> -1892
  *219 *152 -> 7979
  *224 *152 -> -2147473777
  else -> 64
}
$unchecked -> {
  *32 4294967296 -> 0
  *84 18446744073709551616 -> 0
  *32 -1 -> 4294967295
  *84 -1 -> 18446744073709551615
  *110 -10000 -> -10000
  *84 0 -> 0
  *84 -5806 -> 0
  *84 361 -> 361
  *84 296 -> 296
  *84 4330 -> 4330
  *84 -3308 -> 622
  *84 -657 -> 1795
  *84 622 -> 622
  *84 1795 -> 1795
  *84 -2016 -> 527
  *84 -4442 -> 840
  *84 -9360 -> 6562
  *84 840 -> 840
  *84 6562 -> 6562
  *84 -4315 -> 218
  *84 1811 -> 1811
  else -> 0
}
$mutable -> {
  *89 *67 -> true
  *16 *152 -> true
  *127 *155 -> false
  *16 *155 -> false
  *89 *155 -> false
  else -> false
}
$is_primitive -> {
  *91 -> true
  *140 -> true
  *110 -> true
  *128 -> true
  *120 -> true
  *40 -> true
  *32 -> true
  *84 -> true
  *43 -> true
  *78 -> true
  *51 -> true
  *97 -> true
  *92 -> true
  *18 -> true
  *3 -> true
  *46 -> false
  *34 -> false
  *60 -> true
  *33 -> true
  *58 -> true
  *29 -> true
  *30 -> true
  *141 -> false
  *139 -> false
  *134 -> true
  *59 -> true
  *94 -> false
  *122 -> false
  *5 -> true
  *45 -> true
  *154 -> true
  *142 -> true
  *10 -> true
  *119 -> true
  *151 -> true
  *72 -> true
  *123 -> false
  *236 -> false
  *237 -> false
  else -> true
}
$as_field_with_type -> {
  *22 *110 -> *22
  *146 *5 -> *146
  *133 *5 -> *133
  *47 *110 -> *47
  *163 *97 -> *163
  *167 *141 -> *167
  *169 *139 -> *169
  *212 *58 -> *212
  *213 *58 -> *213
  *157 *58 -> *157
  *158 *58 -> *158
  *214 *58 -> *214
  *215 *58 -> *215
  *160 *122 -> *160
  *159 *94 -> *159
  else -> *22
}
$roots -> {
  *89 -> *238
  *16 -> *238
  *127 -> *238
  else -> *238
}
$invok_state -> {
  *89 -> true
  *16 -> true
  *127 -> true
  else -> true
}
$is_sequential_field -> {
  *212 -> true
  *213 -> true
  *214 -> true
  *22 -> true
  *215 -> true
  *146 -> true
  *133 -> true
  *47 -> true
  *163 -> true
  *157 -> false
  else -> true
}
$is_math_type -> {
  *92 -> true
  *18 -> true
  *3 -> true
  *60 -> true
  *33 -> true
  *58 -> true
  *29 -> true
  *30 -> true
  *134 -> true
  *59 -> true
  else -> true
}
$file_name_is -> {
  2 *26 -> true
  1 *66 -> true
  else -> true
}
$unchk_add -> {
  *84 0 0 -> 0
  *84 18446744073709557126 -18446744073709562932 -> 0
  *84 361 0 -> 361
  *84 296 0 -> 296
  *84 4330 0 -> 4330
  *84 1795 0 -> 1795
  *84 18446744073709558713 -18446744073709562021 -> 622
  *84 18446744073709555235 -18446744073709555892 -> 1795
  *84 622 0 -> 622
  *84 18446744073709555631 -18446744073709557647 -> 527
  *84 6562 0 -> 6562
  *84 18446744073709560027 -18446744073709564469 -> 840
  *84 18446744073709559930 -18446744073709569290 -> 6562
  *84 840 0 -> 840
  *84 18446744073709552115 -18446744073709556430 -> 218
  *84 1795 16 -> 1811
  else -> 0
}
$full_stop -> {
  *89 -> true
  *16 -> true
  *127 -> true
  else -> true
}
$writes_at -> {
  64 -> *118
  else -> *118
}
$call_transition -> {
  *89 *16 -> true
  *16 *127 -> true
  else -> true
}
$set_cardinality -> {
  *85 -> 0
  else -> 0
}
$is_claimable -> {
  *46 -> true
  *34 -> false
  *141 -> false
  *139 -> false
  *94 -> false
  *122 -> false
  *91 -> false
  *140 -> false
  *110 -> false
  *128 -> false
  *120 -> false
  *40 -> false
  *32 -> false
  *84 -> false
  *43 -> false
  *78 -> false
  *51 -> false
  *97 -> false
  *92 -> false
  *18 -> false
  *3 -> false
  *60 -> false
  *33 -> false
  *58 -> false
  *29 -> false
  *30 -> false
  *134 -> false
  *59 -> false
  *45 -> false
  *154 -> false
  *142 -> false
  *10 -> false
  *119 -> false
  *151 -> false
  *72 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *22 -> true
  *146 -> true
  *133 -> true
  *47 -> true
  *167 -> true
  *169 -> true
  *163 -> true
  *212 -> true
  *213 -> true
  *157 -> true
  *158 -> true
  *214 -> true
  *215 -> true
  *159 -> true
  *160 -> true
  else -> true
}
$f_closed -> {
  *89 -> *247
  *16 -> *247
  *127 -> *247
  else -> *247
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *351 *146 -> *217
  *351 *22 -> *219
  *352 *146 -> *217
  *352 *22 -> *220
  *353 *22 -> *224
  else -> *217
}
$field_kind -> {
  *22 -> *82
  *146 -> *82
  *133 -> *82
  *47 -> *82
  *163 -> *111
  *167 -> *111
  *169 -> *111
  *212 -> *6
  *213 -> *6
  *157 -> *6
  *158 -> *6
  *214 -> *6
  *215 -> *6
  *159 -> *111
  *160 -> *111
  else -> *6
}
Select_[$ptr]$bool -> {
  *247 *67 -> false
  *247 *152 -> false
  else -> false
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *167 -> *167
  *169 -> *169
  *159 -> *159
  *160 -> *160
  else -> *167
}
$phys_ptr_cast -> {
  *69 *122 -> *155
  *176 *94 -> *67
  *76 *122 -> *156
  *186 *94 -> *152
  *67 *94 -> *67
  *155 *122 -> *155
  *173 *110 -> *173
  *152 *94 -> *152
  *156 *122 -> *156
  *183 *110 -> *183
  *192 *110 -> *192
  else -> *67
}
Store_[$ptr]$int -> {
  *219 *67 -1892 -> *220
  *220 *152 -2147473777 -> *224
  else -> *220
}
$prim_emb -> {
  *173 -> *67
  *183 -> *152
  *192 -> *155
  else -> *67
}
$vs_state -> {
  *65 -> *354
  else -> *354
}
$trans_call_transition -> {
  *89 *16 -> true
  *89 *127 -> true
  *16 *127 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *123 -> *54
  *91 -> *25
  *140 -> *113
  *110 -> *96
  *128 -> *21
  *120 -> *62
  *40 -> *74
  *32 -> *98
  *84 -> *56
  *97 -> *136
  *51 -> *77
  *43 -> *61
  *78 -> *27
  *92 -> *112
  *18 -> *137
  *3 -> *99
  *46 -> *125
  *60 -> *37
  *33 -> *144
  *58 -> *57
  *29 -> *38
  *34 -> *131
  *30 -> *103
  *31 -> *153
  *147 -> *11
  *141 -> *68
  *139 -> *2
  *134 -> *87
  *59 -> *132
  *94 -> *71
  *122 -> *42
  *45 -> *149
  *154 -> *79
  *142 -> *70
  *10 -> *80
  *119 -> *39
  *151 -> *143
  *72 -> *44
  *5 -> *100
  else -> *54
}
$instantiate_int -> {
  122 -> true
  -2147483648 -> true
  77 -> true
  7979 -> true
  else -> true
}
$unchk_sub -> {
  *110 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *50 -> *167
  *12 -> *167
  *124 -> *165
  *109 -> *163
  *173 -> *22
  *183 -> *22
  *192 -> *47
  *155 -> *160
  *176 -> *174
  *69 -> *177
  *67 -> *159
  *161 -> *180
  *156 -> *160
  *186 -> *184
  *76 -> *187
  *152 -> *159
  *162 -> *190
  *55 -> *169
  else -> *167
}
$heap -> {
  *89 -> *351
  *16 -> *352
  *127 -> *353
  else -> *351
}
$f_owns -> {
  *46 -> *212
  *34 -> *213
  *141 -> *157
  *139 -> *158
  *94 -> *214
  *122 -> *215
  else -> *212
}
$field_type -> {
  *165 -> *46
  *22 -> *110
  *146 -> *5
  *133 -> *5
  *47 -> *110
  *167 -> *141
  *169 -> *139
  *163 -> *97
  *212 -> *58
  *213 -> *58
  *157 -> *58
  *158 -> *58
  *214 -> *58
  *215 -> *58
  *160 -> *122
  *159 -> *94
  *180 -> *236
  *190 -> *237
  else -> *58
}
$has_field_at0 -> {
  *94 *22 -> true
  *122 *146 -> true
  else -> true
}
$function_entry -> {
  *89 -> true
  else -> true
}
$good_state_ext -> {
  *150 *89 -> true
  *14 *16 -> true
  *130 *127 -> true
  else -> true
}
$f_owner -> {
  *89 -> *356
  *16 -> *356
  *127 -> *356
  else -> *356
}
$type_project_0 -> {
  *5 -> *94
  else -> *94
}
Store_[$field][$ptr]$int -> {
  *351 *22 *220 -> *352
  *352 *22 *224 -> *353
  else -> *352
}
$type_branch -> {
  *91 -> *23
  *140 -> *23
  *110 -> *23
  *128 -> *23
  *120 -> *23
  *40 -> *23
  *32 -> *23
  *84 -> *23
  *43 -> *23
  *78 -> *23
  *51 -> *23
  *97 -> *23
  *92 -> *23
  *18 -> *23
  *3 -> *23
  *46 -> *23
  *34 -> *23
  *60 -> *23
  *33 -> *23
  *58 -> *23
  *29 -> *23
  *30 -> *23
  *141 -> *23
  *139 -> *23
  *134 -> *23
  *59 -> *23
  *94 -> *23
  *122 -> *23
  *45 -> *23
  *154 -> *23
  *142 -> *23
  *10 -> *23
  *119 -> *23
  *151 -> *23
  *72 -> *23
  *5 -> *86
  else -> *23
}
$maybe_emb -> {
  *67 -> *67
  *152 -> *152
  *155 -> *155
  else -> *67
}
$in_range_t -> {
  *32 4294967296 -> false
  *32 0 -> true
  *84 18446744073709551616 -> false
  *84 0 -> true
  *32 -1 -> false
  *32 4294967295 -> true
  *84 -1 -> false
  *84 18446744073709551615 -> true
  *110 -10000 -> true
  *84 -5806 -> false
  *84 361 -> true
  *84 296 -> true
  *84 4330 -> true
  *84 622 -> true
  *84 1795 -> true
  *84 -3308 -> false
  *84 -657 -> false
  *84 -2016 -> false
  *84 527 -> true
  *110 -2147483648 -> true
  *110 -1892 -> true
  *84 840 -> true
  *84 6562 -> true
  *84 -4442 -> false
  *84 -9360 -> false
  *84 -4315 -> false
  *84 218 -> true
  *110 7979 -> true
  *110 -2147473777 -> true
  *84 1811 -> true
  else -> true
}
Select_[$ptr]$ptr -> {
  *356 *67 -> *50
  *238 *67 -> *67
  *238 *155 -> *161
  *356 *161 -> *50
  *238 *161 -> *161
  *356 *152 -> *50
  *238 *152 -> *152
  *238 *156 -> *162
  *356 *162 -> *50
  *238 *162 -> *162
  *356 *155 -> *55
  else -> *50
}
$spec_ptr_cast -> {
  *50 *141 -> *50
  *55 *139 -> *55
  *12 *141 -> *12
  else -> *50
}
$is_union_type -> {
  *94 -> false
  *122 -> false
  else -> false
}
$field_parent_type -> {
  *22 -> *94
  *146 -> *122
  *133 -> *122
  *47 -> *122
  *167 -> *141
  *169 -> *139
  *163 -> *123
  *212 -> *46
  *213 -> *34
  *157 -> *141
  *158 -> *139
  *214 -> *94
  *215 -> *122
  *159 -> *94
  *160 -> *122
  else -> *122
}
$sizeof -> {
  *91 -> 1
  *140 -> 2
  *110 -> 4
  *128 -> 8
  *120 -> 1
  *40 -> 2
  *32 -> 4
  *84 -> 8
  *43 -> 4
  *78 -> 8
  *51 -> 1
  *97 -> 1
  *92 -> 1
  *18 -> 1
  *3 -> 1
  *46 -> 1
  *34 -> 1
  *60 -> 1
  *33 -> 1
  *58 -> 1
  *29 -> 1
  *30 -> 1
  *141 -> 1
  *139 -> 1
  *134 -> 1
  *59 -> 1
  *94 -> 4
  *122 -> 24
  *45 -> 8
  *154 -> 8
  *142 -> 8
  *10 -> 8
  *119 -> 8
  *151 -> 8
  *72 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *212 -> true
  *213 -> true
  *157 -> true
  *158 -> true
  *214 -> true
  *215 -> true
  *22 -> false
  *47 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *50 -> true
  *55 -> true
  *12 -> true
  *67 -> false
  *152 -> false
  *155 -> false
  else -> true
}
$is_fnptr_type -> {
  *45 -> true
  *154 -> true
  *142 -> true
  *10 -> true
  *119 -> true
  *151 -> true
  *72 -> true
  else -> true
}
$f_root -> {
  *97 -> *163
  *141 -> *167
  *139 -> *169
  *122 -> *160
  *94 -> *159
  else -> *163
}
$int_to_ptr -> {
  77 -> *176
  122 -> *186
  else -> *176
}
$is_span_sequential -> {
  *94 -> true
  *122 -> true
  else -> true
}
$good_state -> {
  *354 -> true
  *89 -> true
  *16 -> true
  *127 -> true
  else -> true
}
$field_offset -> {
  *22 -> 0
  *146 -> 0
  *133 -> 8
  *47 -> 16
  *165 -> -18446744073709562932
  *167 -> 0
  *169 -> 0
  *163 -> 0
  *160 -> 0
  *174 -> -18446744073709562021
  *177 -> -18446744073709555892
  *159 -> 0
  *180 -> -18446744073709557647
  *184 -> -18446744073709564469
  *187 -> -18446744073709569290
  *190 -> -18446744073709556430
  else -> 0
}
$base -> {
  *109 -> 0
  *50 -> 361
  *12 -> 4330
  *124 -> 18446744073709557126
  *155 -> 1795
  *176 -> 18446744073709558713
  *173 -> 622
  *69 -> 18446744073709555235
  *67 -> 622
  *161 -> 18446744073709555631
  *183 -> 840
  *156 -> 6562
  *186 -> 18446744073709560027
  *152 -> 840
  *76 -> 18446744073709559930
  *162 -> 18446744073709552115
  *192 -> 1795
  *55 -> 296
  else -> 622
}
$as_in_range_t -> {
  *91 -> *91
  *140 -> *140
  *110 -> *110
  *128 -> *128
  *120 -> *120
  *40 -> *40
  *32 -> *32
  *84 -> *84
  *33 -> *33
  else -> *91
}
$field_arr_root -> {
  *22 -> *22
  *146 -> *146
  *133 -> *133
  *47 -> *47
  *163 -> *163
  *167 -> *167
  *169 -> *169
  *212 -> *212
  *213 -> *213
  *157 -> *157
  *158 -> *158
  *214 -> *214
  *215 -> *215
  *159 -> *159
  *160 -> *160
  else -> *22
}
*** STATE <initial>
  $s -> *89
  $cev_pc -> **$cev_pc
  P#a -> *69
  P#b -> *76
  P#amount -> -2147481756
  #wrTime$2^25.1 -> 64
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(25,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
  $s -> *16
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(46,3)
  $s -> *127
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@40620 -> true
%lbl%@40665 -> true
%lbl%@40823 -> true
%lbl%+40336 -> true
%lbl%@40453 -> true
%lbl%@40436 -> true
%lbl%+1948 -> true
%lbl%@40405 -> true
%lbl%@40649 -> true
$position_marker -> true
%lbl%@40845 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
P#amount@@0 -> 1
^$#_onexit_t#4 -> *10
unique-value!79 -> *11
$untyped_owner_owner -> *12
$max.u4 -> 4294967295
#tok$2^41.3 -> *14
#wrTime$2^25.1 -> 222
$s@0@@1 -> *16
$fk_ref_cnt -> *17
^^field -> *18
$max.u2 -> 65535
loop_entered -> *20
unique-value!59 -> *21
Account.amount -> *22
$ctype_flat -> *23
$fk_as_array_first -> *24
unique-value!56 -> *25
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *26
unique-value!67 -> *27
#tok$1^26.5 -> *28
^$#state_t -> *29
^$#struct -> *30
^$#seq_version -> *31
^^u4 -> *32
^^nat -> *33
^$#volatile_version_t -> *34
$max.i2 -> 32767
$ctype_blob -> *36
unique-value!72 -> *37
unique-value!75 -> *38
unique-value!90 -> *39
^^u2 -> *40
$min.i8 -> -9223372036854775808
unique-value!85 -> *42
^^f4 -> *43
unique-value!92 -> *44
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *45
^^claim -> *46
AccountGroup.total -> *47
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *49
$me -> *50
^^bool -> *51
$max.i1 -> 127
cev_parameter -> *53
unique-value!55 -> *54
$untyped_owner -> *55
unique-value!63 -> *56
unique-value!74 -> *57
^$#ptrset -> *58
^$##club -> *59
^^mathint -> *60
unique-value!66 -> *61
unique-value!60 -> *62
call1671formal@v@0 -> -1892
$arch_ptr_size -> 8
$struct_zero -> *65
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *66
call1671formal@p@0 -> *67
unique-value!80 -> *68
P#a@@0 -> *69
unique-value!88 -> *70
unique-value!84 -> *71
^$#_invalid_parameter_handler#7 -> *72
$min.i1 -> -128
unique-value!61 -> *74
conditional_moment -> *75
P#b@@0 -> *76
unique-value!65 -> *77
^^f8 -> *78
unique-value!87 -> *79
unique-value!89 -> *80
#tok$1^23.16 -> *81
$fk_base -> *82
#tok$1^28.5 -> *83
^^u8 -> *84
$arch_ptr_type -> *84
$set_empty -> *85
lambda@13 -> *85
$ctype_ptr -> *86
unique-value!82 -> *87
$fk_vol_version -> *88
$s -> *89
$max.u1 -> 255
^^i1 -> *91
^^object -> *92
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *94
$ctype_spec_ptr -> *95
unique-value!58 -> *96
^^void -> *97
unique-value!62 -> *98
unique-value!70 -> *99
unique-value!93 -> *100
$fk_active_option -> *101
$ctype_array -> *102
unique-value!77 -> *103
cev_local -> *104
#tok$2^47.3 -> *105
@MV_state_const -> 74
$ctype_map -> *107
loop_register -> *108
$null -> *109
^^i4 -> *110
$fk_allocation_root -> *111
unique-value!68 -> *112
unique-value!57 -> *113
loop_exited -> *114
$min.i2 -> -32768
cev_implicit -> *116
#tok$1^6.1 -> *117
lambda@21 -> *118
^$#account2.c..36689#5 -> *119
^^u1 -> *120
call1790formal@v@0 -> 7980
^AccountGroup -> *122
$primitive_emb_type -> *123
$no_claim -> *124
unique-value!71 -> *125
took_else_branch -> *126
$s@1@@1 -> *127
^^i8 -> *128
took_then_branch -> *129
#tok$2^42.3 -> *130
unique-value!76 -> *131
unique-value!83 -> *132
AccountGroup.creditCard -> *133
^$##thread_id -> *134
$min.i4 -> -2147483648
unique-value!64 -> *136
unique-value!69 -> *137
#tok$2^46.3 -> *138
$untyped_owner_type -> *139
^^i2 -> *140
^$#thread_id_t -> *141
^$#account2.c..36585#3 -> *142
unique-value!91 -> *143
unique-value!73 -> *144
#tok$1^22.5 -> *145
AccountGroup.giro -> *146
^$#vol_version -> *147
#tok$1^13.1 -> *148
unique-value!86 -> *149
#tok$2^25.1 -> *150
^$#_purecall_handler#6 -> *151
call1790formal@p@0 -> *152
unique-value!78 -> *153
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *154
$cev_pc -> **$cev_pc
#stackframe -> **#stackframe
$thread_local -> {
  *89 *155 -> true
  *89 *67 -> true
  *16 *156 -> true
  *16 *152 -> true
  else -> true
}
$ptr_to -> {
  *94 -> *5
  else -> *5
}
$is_volatile_field -> {
  *157 -> true
  *158 -> true
  else -> true
}
$is_phys_field -> {
  *22 -> true
  *146 -> true
  *133 -> true
  *47 -> true
  *159 -> true
  *160 -> true
  else -> true
}
$owner -> {
  *89 *67 -> *50
  *89 *155 -> *50
  *16 *152 -> *50
  *16 *161 -> *50
  *127 *155 -> *50
  else -> *50
}
$ptr -> {
  *162 0 -> *109
  *164 18446744073709557126 -> *124
  *166 361 -> *50
  *168 296 -> *55
  *166 4330 -> *12
  *22 622 -> *172
  *159 622 -> *67
  *173 18446744073709558713 -> *175
  *176 18446744073709555235 -> *69
  *160 1795 -> *155
  *22 840 -> *180
  *159 840 -> *152
  *181 18446744073709560027 -> *183
  *184 18446744073709559930 -> *76
  *160 6562 -> *156
  *187 18446744073709552115 -> *161
  *47 1795 -> *189
  else -> *109
}
$closed -> {
  *89 *67 -> false
  *16 *152 -> false
  *127 *155 -> false
  else -> false
}
$dot -> {
  *67 *22 -> *172
  *152 *22 -> *180
  *155 *47 -> *189
  else -> *172
}
$addr0 -> {
  *109 -> 0
  *124 -> 0
  *50 -> 361
  *55 -> 296
  *12 -> 4330
  *69 -> 1795
  *175 -> 622
  *67 -> 622
  *155 -> 1795
  *172 -> 622
  *76 -> 6562
  *183 -> 840
  *152 -> 840
  *156 -> 6562
  *180 -> 840
  *161 -> 218
  *189 -> 1811
  else -> 622
}
$is_proper -> {
  *50 -> true
  *55 -> true
  *12 -> true
  *172 -> true
  *180 -> true
  *189 -> true
  *67 -> true
  *155 -> true
  *152 -> true
  *156 -> true
  *161 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *67 -> true
  *172 -> true
  *155 -> true
  *152 -> true
  *180 -> true
  *156 -> true
  *189 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  74 11 -> true
  74 12 -> true
  74 13 -> true
  74 14 -> true
  74 15 -> true
  74 16 -> true
  else -> true
}
$current_timestamp -> {
  *89 -> 222
  *16 -> 223
  *127 -> 435
  else -> 222
}
$as_primitive_field -> {
  *22 -> *22
  *146 -> *146
  *133 -> *133
  *47 -> *47
  *162 -> *162
  *208 -> *208
  *209 -> *209
  *157 -> *157
  *158 -> *158
  *210 -> *210
  *211 -> *211
  else -> *22
}
$f_timestamp -> {
  *89 -> *212
  *16 -> *212
  *127 -> *212
  else -> *212
}
Select_[$ptr]$int -> {
  *213 *155 -> 76
  *212 *67 -> 222
  *215 *67 -> -1891
  *212 *152 -> 222
  *217 *152 -> 7979
  *212 *155 -> 222
  *219 *155 -> -2147483648
  *213 *156 -> 125
  *217 *67 -> -1892
  *215 *152 -> 7979
  *221 *152 -> 7980
  else -> 222
}
$unchecked -> {
  *32 4294967296 -> 0
  *84 18446744073709551616 -> 0
  *32 -1 -> 4294967295
  *84 -1 -> 18446744073709551615
  *110 -10000 -> -10000
  *84 0 -> 0
  *84 -5806 -> 0
  *84 361 -> 361
  *84 296 -> 296
  *84 4330 -> 4330
  *84 -3308 -> 622
  *84 -657 -> 1795
  *84 622 -> 622
  *84 1795 -> 1795
  *84 -4442 -> 840
  *84 -9360 -> 6562
  *84 840 -> 840
  *84 6562 -> 6562
  *84 -4315 -> 218
  *84 1811 -> 1811
  else -> 0
}
$mutable -> {
  *89 *67 -> true
  *16 *152 -> true
  *127 *155 -> true
  else -> true
}
$is_primitive -> {
  *91 -> true
  *140 -> true
  *110 -> true
  *128 -> true
  *120 -> true
  *40 -> true
  *32 -> true
  *84 -> true
  *43 -> true
  *78 -> true
  *51 -> true
  *97 -> true
  *92 -> true
  *18 -> true
  *3 -> true
  *46 -> false
  *34 -> false
  *60 -> true
  *33 -> true
  *58 -> true
  *29 -> true
  *30 -> true
  *141 -> false
  *139 -> false
  *134 -> true
  *59 -> true
  *94 -> false
  *122 -> false
  *5 -> true
  *45 -> true
  *154 -> true
  *142 -> true
  *10 -> true
  *119 -> true
  *151 -> true
  *72 -> true
  *123 -> false
  *232 -> false
  else -> true
}
$as_field_with_type -> {
  *22 *110 -> *22
  *146 *5 -> *146
  *133 *5 -> *133
  *47 *110 -> *47
  *162 *97 -> *162
  *166 *141 -> *166
  *168 *139 -> *168
  *208 *58 -> *208
  *209 *58 -> *209
  *157 *58 -> *157
  *158 *58 -> *158
  *210 *58 -> *210
  *211 *58 -> *211
  *160 *122 -> *160
  *159 *94 -> *159
  else -> *22
}
$roots -> {
  *89 -> *233
  *16 -> *233
  *127 -> *233
  else -> *233
}
$invok_state -> {
  *89 -> true
  *16 -> true
  *127 -> true
  else -> true
}
$is_sequential_field -> {
  *208 -> true
  *209 -> true
  *210 -> true
  *22 -> true
  *211 -> true
  *146 -> true
  *133 -> true
  *47 -> true
  *162 -> true
  *157 -> false
  else -> true
}
$is_math_type -> {
  *92 -> true
  *18 -> true
  *3 -> true
  *60 -> true
  *33 -> true
  *58 -> true
  *29 -> true
  *30 -> true
  *134 -> true
  *59 -> true
  else -> true
}
$file_name_is -> {
  2 *26 -> true
  1 *66 -> true
  else -> true
}
$unchk_add -> {
  *84 0 0 -> 0
  *84 18446744073709557126 -18446744073709562932 -> 0
  *84 361 0 -> 361
  *84 296 0 -> 296
  *84 4330 0 -> 4330
  *84 1795 0 -> 1795
  *84 18446744073709558713 -18446744073709562021 -> 622
  *84 18446744073709555235 -18446744073709555892 -> 1795
  *84 622 0 -> 622
  *84 6562 0 -> 6562
  *84 18446744073709560027 -18446744073709564469 -> 840
  *84 18446744073709559930 -18446744073709569290 -> 6562
  *84 840 0 -> 840
  *84 18446744073709552115 -18446744073709556430 -> 218
  *84 1795 16 -> 1811
  else -> 0
}
$full_stop -> {
  *89 -> true
  *16 -> true
  *127 -> true
  else -> true
}
$writes_at -> {
  222 -> *118
  else -> *118
}
$call_transition -> {
  *89 *16 -> true
  *16 *127 -> true
  else -> true
}
$set_cardinality -> {
  *85 -> 0
  else -> 0
}
$is_claimable -> {
  *46 -> true
  *34 -> false
  *141 -> false
  *139 -> false
  *94 -> false
  *122 -> false
  *91 -> false
  *140 -> false
  *110 -> false
  *128 -> false
  *120 -> false
  *40 -> false
  *32 -> false
  *84 -> false
  *43 -> false
  *78 -> false
  *51 -> false
  *97 -> false
  *92 -> false
  *18 -> false
  *3 -> false
  *60 -> false
  *33 -> false
  *58 -> false
  *29 -> false
  *30 -> false
  *134 -> false
  *59 -> false
  *45 -> false
  *154 -> false
  *142 -> false
  *10 -> false
  *119 -> false
  *151 -> false
  *72 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *22 -> true
  *146 -> true
  *133 -> true
  *47 -> true
  *166 -> true
  *168 -> true
  *162 -> true
  *208 -> true
  *209 -> true
  *157 -> true
  *158 -> true
  *210 -> true
  *211 -> true
  *159 -> true
  *160 -> true
  else -> true
}
$f_closed -> {
  *89 -> *240
  *16 -> *240
  *127 -> *240
  else -> *240
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *345 *146 -> *213
  *345 *22 -> *215
  *346 *146 -> *213
  *346 *22 -> *217
  *347 *47 -> *219
  *347 *22 -> *221
  *346 *47 -> *219
  *345 *47 -> *219
  else -> *219
}
$field_kind -> {
  *22 -> *82
  *146 -> *82
  *133 -> *82
  *47 -> *82
  *162 -> *111
  *166 -> *111
  *168 -> *111
  *208 -> *6
  *209 -> *6
  *157 -> *6
  *158 -> *6
  *210 -> *6
  *211 -> *6
  *159 -> *111
  *160 -> *111
  else -> *6
}
Select_[$ptr]$bool -> {
  *240 *67 -> false
  *240 *152 -> false
  *240 *155 -> false
  else -> false
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *166 -> *166
  *168 -> *168
  *159 -> *159
  *160 -> *160
  else -> *166
}
$phys_ptr_cast -> {
  *69 *122 -> *155
  *175 *94 -> *67
  *76 *122 -> *156
  *183 *94 -> *152
  *67 *94 -> *67
  *155 *122 -> *155
  *172 *110 -> *172
  *152 *94 -> *152
  *156 *122 -> *156
  *180 *110 -> *180
  *189 *110 -> *189
  else -> *67
}
Store_[$ptr]$int -> {
  *215 *67 -1892 -> *217
  *217 *152 7980 -> *221
  else -> *217
}
$prim_emb -> {
  *172 -> *67
  *180 -> *152
  *189 -> *155
  else -> *67
}
$vs_state -> {
  *65 -> *348
  else -> *348
}
$trans_call_transition -> {
  *89 *16 -> true
  *89 *127 -> true
  *16 *127 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *123 -> *54
  *91 -> *25
  *140 -> *113
  *110 -> *96
  *128 -> *21
  *120 -> *62
  *40 -> *74
  *32 -> *98
  *84 -> *56
  *97 -> *136
  *51 -> *77
  *43 -> *61
  *78 -> *27
  *92 -> *112
  *18 -> *137
  *3 -> *99
  *46 -> *125
  *60 -> *37
  *33 -> *144
  *58 -> *57
  *29 -> *38
  *34 -> *131
  *30 -> *103
  *31 -> *153
  *147 -> *11
  *141 -> *68
  *139 -> *2
  *134 -> *87
  *59 -> *132
  *94 -> *71
  *122 -> *42
  *45 -> *149
  *154 -> *79
  *142 -> *70
  *10 -> *80
  *119 -> *39
  *151 -> *143
  *72 -> *44
  *5 -> *100
  else -> *54
}
$instantiate_int -> {
  125 -> true
  -1891 -> true
  76 -> true
  7979 -> true
  -2147483648 -> true
  else -> true
}
$unchk_sub -> {
  *110 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *50 -> *166
  *55 -> *168
  *12 -> *166
  *124 -> *164
  *109 -> *162
  *172 -> *22
  *180 -> *22
  *189 -> *47
  *155 -> *160
  *175 -> *173
  *69 -> *176
  *67 -> *159
  *156 -> *160
  *183 -> *181
  *76 -> *184
  *152 -> *159
  *161 -> *187
  else -> *166
}
$heap -> {
  *89 -> *345
  *16 -> *346
  *127 -> *347
  else -> *345
}
$f_owns -> {
  *46 -> *208
  *34 -> *209
  *141 -> *157
  *139 -> *158
  *94 -> *210
  *122 -> *211
  else -> *208
}
$field_type -> {
  *164 -> *46
  *22 -> *110
  *146 -> *5
  *133 -> *5
  *47 -> *110
  *166 -> *141
  *168 -> *139
  *162 -> *97
  *208 -> *58
  *209 -> *58
  *157 -> *58
  *158 -> *58
  *210 -> *58
  *211 -> *58
  *160 -> *122
  *159 -> *94
  *187 -> *232
  else -> *58
}
$has_field_at0 -> {
  *94 *22 -> true
  *122 *146 -> true
  else -> true
}
$function_entry -> {
  *89 -> true
  else -> true
}
$good_state_ext -> {
  *150 *89 -> true
  *14 *16 -> true
  *130 *127 -> true
  else -> true
}
$f_owner -> {
  *89 -> *350
  *16 -> *350
  *127 -> *350
  else -> *350
}
$type_project_0 -> {
  *5 -> *94
  else -> *94
}
Store_[$field][$ptr]$int -> {
  *345 *22 *217 -> *346
  *346 *22 *221 -> *347
  else -> *346
}
$type_branch -> {
  *91 -> *23
  *140 -> *23
  *110 -> *23
  *128 -> *23
  *120 -> *23
  *40 -> *23
  *32 -> *23
  *84 -> *23
  *43 -> *23
  *78 -> *23
  *51 -> *23
  *97 -> *23
  *92 -> *23
  *18 -> *23
  *3 -> *23
  *46 -> *23
  *34 -> *23
  *60 -> *23
  *33 -> *23
  *58 -> *23
  *29 -> *23
  *30 -> *23
  *141 -> *23
  *139 -> *23
  *134 -> *23
  *59 -> *23
  *94 -> *23
  *122 -> *23
  *45 -> *23
  *154 -> *23
  *142 -> *23
  *10 -> *23
  *119 -> *23
  *151 -> *23
  *72 -> *23
  *5 -> *86
  else -> *23
}
$maybe_emb -> {
  *67 -> *67
  *152 -> *152
  *155 -> *155
  else -> *67
}
$in_range_t -> {
  *32 4294967296 -> false
  *32 0 -> true
  *84 18446744073709551616 -> false
  *84 0 -> true
  *32 -1 -> false
  *32 4294967295 -> true
  *84 -1 -> false
  *84 18446744073709551615 -> true
  *110 -10000 -> true
  *84 -5806 -> false
  *84 361 -> true
  *84 296 -> true
  *84 4330 -> true
  *84 622 -> true
  *84 1795 -> true
  *84 -3308 -> false
  *84 -657 -> false
  *110 -1891 -> true
  *110 -1892 -> true
  *84 840 -> true
  *84 6562 -> true
  *84 -4442 -> false
  *84 -9360 -> false
  *84 -4315 -> false
  *84 218 -> true
  *110 7979 -> true
  *110 7980 -> true
  *84 1811 -> true
  *110 -2147483648 -> true
  else -> true
}
Select_[$ptr]$ptr -> {
  *350 *67 -> *50
  *233 *67 -> *67
  *233 *155 -> *155
  *350 *152 -> *50
  *233 *152 -> *152
  *233 *156 -> *161
  *350 *161 -> *50
  *233 *161 -> *161
  *350 *155 -> *50
  else -> *50
}
$spec_ptr_cast -> {
  *50 *141 -> *50
  *55 *139 -> *55
  *12 *141 -> *12
  else -> *50
}
$is_union_type -> {
  *94 -> false
  *122 -> false
  else -> false
}
$field_parent_type -> {
  *22 -> *94
  *146 -> *122
  *133 -> *122
  *47 -> *122
  *166 -> *141
  *168 -> *139
  *162 -> *123
  *208 -> *46
  *209 -> *34
  *157 -> *141
  *158 -> *139
  *210 -> *94
  *211 -> *122
  *159 -> *94
  *160 -> *122
  else -> *122
}
$sizeof -> {
  *91 -> 1
  *140 -> 2
  *110 -> 4
  *128 -> 8
  *120 -> 1
  *40 -> 2
  *32 -> 4
  *84 -> 8
  *43 -> 4
  *78 -> 8
  *51 -> 1
  *97 -> 1
  *92 -> 1
  *18 -> 1
  *3 -> 1
  *46 -> 1
  *34 -> 1
  *60 -> 1
  *33 -> 1
  *58 -> 1
  *29 -> 1
  *30 -> 1
  *141 -> 1
  *139 -> 1
  *134 -> 1
  *59 -> 1
  *94 -> 4
  *122 -> 24
  *45 -> 8
  *154 -> 8
  *142 -> 8
  *10 -> 8
  *119 -> 8
  *151 -> 8
  *72 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *208 -> true
  *209 -> true
  *157 -> true
  *158 -> true
  *210 -> true
  *211 -> true
  *22 -> false
  *47 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *50 -> true
  *55 -> true
  *12 -> true
  *67 -> false
  *152 -> false
  *155 -> false
  else -> true
}
$is_fnptr_type -> {
  *45 -> true
  *154 -> true
  *142 -> true
  *10 -> true
  *119 -> true
  *151 -> true
  *72 -> true
  else -> true
}
$f_root -> {
  *97 -> *162
  *141 -> *166
  *139 -> *168
  *122 -> *160
  *94 -> *159
  else -> *162
}
$int_to_ptr -> {
  76 -> *175
  125 -> *183
  else -> *175
}
$is_span_sequential -> {
  *94 -> true
  *122 -> true
  else -> true
}
$good_state -> {
  *348 -> true
  *89 -> true
  *16 -> true
  *127 -> true
  else -> true
}
$field_offset -> {
  *22 -> 0
  *146 -> 0
  *133 -> 8
  *47 -> 16
  *164 -> -18446744073709562932
  *166 -> 0
  *168 -> 0
  *162 -> 0
  *160 -> 0
  *173 -> -18446744073709562021
  *176 -> -18446744073709555892
  *159 -> 0
  *181 -> -18446744073709564469
  *184 -> -18446744073709569290
  *187 -> -18446744073709556430
  else -> 0
}
$base -> {
  *109 -> 0
  *50 -> 361
  *55 -> 296
  *12 -> 4330
  *124 -> 18446744073709557126
  *155 -> 1795
  *175 -> 18446744073709558713
  *172 -> 622
  *69 -> 18446744073709555235
  *67 -> 622
  *180 -> 840
  *156 -> 6562
  *183 -> 18446744073709560027
  *152 -> 840
  *76 -> 18446744073709559930
  *161 -> 18446744073709552115
  *189 -> 1795
  else -> 622
}
$as_in_range_t -> {
  *91 -> *91
  *140 -> *140
  *110 -> *110
  *128 -> *128
  *120 -> *120
  *40 -> *40
  *32 -> *32
  *84 -> *84
  *33 -> *33
  else -> *91
}
$field_arr_root -> {
  *22 -> *22
  *146 -> *146
  *133 -> *133
  *47 -> *47
  *162 -> *162
  *166 -> *166
  *168 -> *168
  *208 -> *208
  *209 -> *209
  *157 -> *157
  *158 -> *158
  *210 -> *210
  *211 -> *211
  *159 -> *159
  *160 -> *160
  else -> *22
}
*** STATE <initial>
  $s -> *89
  $cev_pc -> **$cev_pc
  P#a -> *69
  P#b -> *76
  P#amount -> 1
  #wrTime$2^25.1 -> 222
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(25,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
  $s -> *16
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(46,3)
  $s -> *127
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(46,14)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@40620 -> true
%lbl%@40665 -> true
%lbl%@40823 -> true
%lbl%+40336 -> true
%lbl%@40453 -> true
%lbl%@40436 -> true
%lbl%+1948 -> true
%lbl%@40845 -> true
%lbl%@40405 -> true
%lbl%@40649 -> true
$position_marker -> true
%lbl%@40959 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
P#amount@@0 -> -2147483325
^$#_onexit_t#4 -> *10
unique-value!79 -> *11
$untyped_owner_owner -> *12
$max.u4 -> 4294967295
#tok$2^41.3 -> *14
#wrTime$2^25.1 -> 61
$s@0@@1 -> *16
$fk_ref_cnt -> *17
^^field -> *18
$max.u2 -> 65535
loop_entered -> *20
unique-value!59 -> *21
Account.amount -> *22
$ctype_flat -> *23
$fk_as_array_first -> *24
unique-value!56 -> *25
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *26
unique-value!67 -> *27
call1860formal@p@0 -> *28
#tok$1^26.5 -> *29
^$#state_t -> *30
^$#struct -> *31
^$#seq_version -> *32
^^u4 -> *33
^^nat -> *34
^$#volatile_version_t -> *35
$max.i2 -> 32767
$ctype_blob -> *37
unique-value!72 -> *38
unique-value!75 -> *39
unique-value!90 -> *40
^^u2 -> *41
$min.i8 -> -9223372036854775808
unique-value!85 -> *43
^^f4 -> *44
unique-value!92 -> *45
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *46
^^claim -> *47
AccountGroup.total -> *48
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *50
$me -> *51
^^bool -> *52
$s@2@@1 -> *53
$max.i1 -> 127
cev_parameter -> *55
unique-value!55 -> *56
$untyped_owner -> *57
unique-value!63 -> *58
unique-value!74 -> *59
^$#ptrset -> *60
^$##club -> *61
^^mathint -> *62
unique-value!66 -> *63
unique-value!60 -> *64
call1671formal@v@0 -> 2147465825
$arch_ptr_size -> 8
$struct_zero -> *67
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *68
call1671formal@p@0 -> *69
unique-value!80 -> *70
P#a@@0 -> *71
unique-value!88 -> *72
unique-value!84 -> *73
^$#_invalid_parameter_handler#7 -> *74
$min.i1 -> -128
unique-value!61 -> *76
conditional_moment -> *77
P#b@@0 -> *78
unique-value!65 -> *79
^^f8 -> *80
unique-value!87 -> *81
unique-value!89 -> *82
#tok$1^23.16 -> *83
$fk_base -> *84
#tok$1^28.5 -> *85
^^u8 -> *86
$arch_ptr_type -> *86
$set_empty -> *87
lambda@13 -> *87
$ctype_ptr -> *88
unique-value!82 -> *89
$fk_vol_version -> *90
$s -> *91
$max.u1 -> 255
^^i1 -> *93
^^object -> *94
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *96
$ctype_spec_ptr -> *97
unique-value!58 -> *98
^^void -> *99
unique-value!62 -> *100
unique-value!70 -> *101
unique-value!93 -> *102
$fk_active_option -> *103
$ctype_array -> *104
unique-value!77 -> *105
cev_local -> *106
#tok$2^47.3 -> *107
@MV_state_const -> 74
$ctype_map -> *109
loop_register -> *110
$null -> *111
^^i4 -> *112
$fk_allocation_root -> *113
unique-value!68 -> *114
unique-value!57 -> *115
loop_exited -> *116
$min.i2 -> -32768
cev_implicit -> *118
#tok$1^6.1 -> *119
lambda@21 -> *120
^$#account2.c..36689#5 -> *121
^^u1 -> *122
call1790formal@v@0 -> -17330
^AccountGroup -> *124
$primitive_emb_type -> *125
$no_claim -> *126
unique-value!71 -> *127
call1860formal@v@0 -> -323
took_else_branch -> *129
$s@1@@1 -> *130
^^i8 -> *131
took_then_branch -> *132
#tok$2^42.3 -> *133
unique-value!76 -> *134
unique-value!83 -> *135
AccountGroup.creditCard -> *136
^$##thread_id -> *137
$min.i4 -> -2147483648
unique-value!64 -> *139
unique-value!69 -> *140
#tok$2^46.3 -> *141
$untyped_owner_type -> *142
^^i2 -> *143
^$#thread_id_t -> *144
^$#account2.c..36585#3 -> *145
unique-value!91 -> *146
unique-value!73 -> *147
#tok$1^22.5 -> *148
AccountGroup.giro -> *149
^$#vol_version -> *150
#tok$1^13.1 -> *151
unique-value!86 -> *152
#tok$2^25.1 -> *153
^$#_purecall_handler#6 -> *154
call1790formal@p@0 -> *155
unique-value!78 -> *156
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *157
$cev_pc -> **$cev_pc
#stackframe -> **#stackframe
$thread_local -> {
  *91 *28 -> true
  *91 *69 -> true
  *16 *158 -> true
  *16 *155 -> true
  *130 *28 -> true
  else -> true
}
$ptr_to -> {
  *96 -> *5
  else -> *5
}
$is_volatile_field -> {
  *159 -> true
  *160 -> true
  else -> true
}
$is_phys_field -> {
  *22 -> true
  *149 -> true
  *136 -> true
  *48 -> true
  *161 -> true
  *162 -> true
  else -> true
}
$owner -> {
  *91 *69 -> *51
  *91 *28 -> *51
  *16 *155 -> *51
  *16 *163 -> *51
  *130 *28 -> *51
  *53 *158 -> *57
  *130 *158 -> *57
  *16 *158 -> *57
  *91 *158 -> *57
  else -> *51
}
$ptr -> {
  *164 0 -> *111
  *166 18446744073709557126 -> *126
  *168 361 -> *51
  *170 296 -> *57
  *168 4330 -> *12
  *22 622 -> *174
  *161 622 -> *69
  *175 18446744073709558713 -> *177
  *178 18446744073709555235 -> *71
  *162 1795 -> *28
  *22 840 -> *182
  *161 840 -> *155
  *183 18446744073709560027 -> *185
  *186 18446744073709559930 -> *78
  *162 6562 -> *158
  *189 18446744073709552115 -> *163
  *48 1795 -> *191
  *48 6562 -> *192
  else -> *111
}
$closed -> {
  *91 *69 -> false
  *16 *155 -> false
  *130 *28 -> false
  else -> false
}
$dot -> {
  *69 *22 -> *174
  *155 *22 -> *182
  *28 *48 -> *191
  *158 *48 -> *192
  else -> *174
}
$addr0 -> {
  *111 -> 0
  *126 -> 0
  *51 -> 361
  *12 -> 4330
  *71 -> 1795
  *177 -> 622
  *69 -> 622
  *28 -> 1795
  *174 -> 622
  *78 -> 6562
  *185 -> 840
  *155 -> 840
  *158 -> 6562
  *182 -> 840
  *163 -> 218
  *191 -> 1811
  *192 -> 6578
  *57 -> 296
  else -> 622
}
$is_proper -> {
  *51 -> true
  *12 -> true
  *174 -> true
  *182 -> true
  *191 -> true
  *69 -> true
  *28 -> true
  *155 -> true
  *158 -> true
  *163 -> true
  *192 -> true
  *57 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *69 -> true
  *174 -> true
  *28 -> true
  *155 -> true
  *182 -> true
  *158 -> true
  *191 -> true
  *192 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  74 11 -> true
  74 12 -> true
  74 13 -> true
  74 14 -> true
  74 15 -> true
  74 16 -> true
  74 17 -> true
  74 18 -> true
  74 19 -> true
  else -> true
}
$current_timestamp -> {
  *91 -> 61
  *16 -> 62
  *130 -> 435
  *53 -> 436
  else -> 61
}
$as_primitive_field -> {
  *22 -> *22
  *149 -> *149
  *136 -> *136
  *48 -> *48
  *164 -> *164
  *217 -> *217
  *218 -> *218
  *159 -> *159
  *160 -> *160
  *219 -> *219
  *220 -> *220
  else -> *22
}
$f_timestamp -> {
  *91 -> *221
  *16 -> *221
  *130 -> *221
  *53 -> *221
  else -> *221
}
Select_[$ptr]$int -> {
  *222 *28 -> 76
  *221 *69 -> 61
  *224 *69 -> -17500
  *221 *155 -> 61
  *226 *155 -> 2147465995
  *221 *28 -> 61
  *228 *28 -> -2147483648
  *221 *158 -> -274
  *222 *158 -> 129
  *226 *69 -> 2147465825
  *224 *155 -> 2147465995
  *231 *155 -> -17330
  *232 *28 -> -323
  else -> 61
}
$unchecked -> {
  *33 4294967296 -> 0
  *86 18446744073709551616 -> 0
  *33 -1 -> 4294967295
  *86 -1 -> 18446744073709551615
  *112 -10000 -> -10000
  *86 0 -> 0
  *86 -5806 -> 0
  *86 361 -> 361
  *86 296 -> 296
  *86 4330 -> 4330
  *86 -3308 -> 622
  *86 -657 -> 1795
  *86 622 -> 622
  *86 1795 -> 1795
  *86 -4442 -> 840
  *86 -9360 -> 6562
  *86 840 -> 840
  *86 6562 -> 6562
  *86 -4315 -> 218
  *86 1811 -> 1811
  *86 6578 -> 6578
  else -> 0
}
$mutable -> {
  *91 *69 -> true
  *16 *155 -> true
  *130 *28 -> true
  *53 *158 -> false
  *130 *158 -> false
  *16 *158 -> false
  *91 *158 -> false
  else -> false
}
$is_primitive -> {
  *93 -> true
  *143 -> true
  *112 -> true
  *131 -> true
  *122 -> true
  *41 -> true
  *33 -> true
  *86 -> true
  *44 -> true
  *80 -> true
  *52 -> true
  *99 -> true
  *94 -> true
  *18 -> true
  *3 -> true
  *47 -> false
  *35 -> false
  *62 -> true
  *34 -> true
  *60 -> true
  *30 -> true
  *31 -> true
  *144 -> false
  *142 -> false
  *137 -> true
  *61 -> true
  *96 -> false
  *124 -> false
  *5 -> true
  *46 -> true
  *157 -> true
  *145 -> true
  *10 -> true
  *121 -> true
  *154 -> true
  *74 -> true
  *125 -> false
  *243 -> false
  else -> true
}
$as_field_with_type -> {
  *22 *112 -> *22
  *149 *5 -> *149
  *136 *5 -> *136
  *48 *112 -> *48
  *164 *99 -> *164
  *168 *144 -> *168
  *170 *142 -> *170
  *217 *60 -> *217
  *218 *60 -> *218
  *159 *60 -> *159
  *160 *60 -> *160
  *219 *60 -> *219
  *220 *60 -> *220
  *162 *124 -> *162
  *161 *96 -> *161
  else -> *22
}
$roots -> {
  *91 -> *244
  *16 -> *244
  *130 -> *244
  *53 -> *244
  else -> *244
}
$invok_state -> {
  *91 -> true
  *16 -> true
  *130 -> true
  *53 -> true
  else -> true
}
$is_sequential_field -> {
  *217 -> true
  *218 -> true
  *219 -> true
  *22 -> true
  *220 -> true
  *149 -> true
  *136 -> true
  *48 -> true
  *164 -> true
  *159 -> false
  else -> true
}
$is_math_type -> {
  *94 -> true
  *18 -> true
  *3 -> true
  *62 -> true
  *34 -> true
  *60 -> true
  *30 -> true
  *31 -> true
  *137 -> true
  *61 -> true
  else -> true
}
$file_name_is -> {
  2 *26 -> true
  1 *68 -> true
  else -> true
}
$unchk_add -> {
  *86 0 0 -> 0
  *86 18446744073709557126 -18446744073709562932 -> 0
  *86 361 0 -> 361
  *86 296 0 -> 296
  *86 4330 0 -> 4330
  *86 1795 0 -> 1795
  *86 18446744073709558713 -18446744073709562021 -> 622
  *86 18446744073709555235 -18446744073709555892 -> 1795
  *86 622 0 -> 622
  *86 6562 0 -> 6562
  *86 18446744073709560027 -18446744073709564469 -> 840
  *86 18446744073709559930 -18446744073709569290 -> 6562
  *86 840 0 -> 840
  *86 18446744073709552115 -18446744073709556430 -> 218
  *86 1795 16 -> 1811
  *86 6562 16 -> 6578
  else -> 0
}
$full_stop -> {
  *91 -> true
  *16 -> true
  *130 -> true
  *53 -> true
  else -> true
}
$writes_at -> {
  61 -> *120
  else -> *120
}
$call_transition -> {
  *91 *16 -> true
  *16 *130 -> true
  *130 *53 -> true
  else -> true
}
$set_cardinality -> {
  *87 -> 0
  else -> 0
}
$is_claimable -> {
  *47 -> true
  *35 -> false
  *144 -> false
  *142 -> false
  *96 -> false
  *124 -> false
  *93 -> false
  *143 -> false
  *112 -> false
  *131 -> false
  *122 -> false
  *41 -> false
  *33 -> false
  *86 -> false
  *44 -> false
  *80 -> false
  *52 -> false
  *99 -> false
  *94 -> false
  *18 -> false
  *3 -> false
  *62 -> false
  *34 -> false
  *60 -> false
  *30 -> false
  *31 -> false
  *137 -> false
  *61 -> false
  *46 -> false
  *157 -> false
  *145 -> false
  *10 -> false
  *121 -> false
  *154 -> false
  *74 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *22 -> true
  *149 -> true
  *136 -> true
  *48 -> true
  *168 -> true
  *170 -> true
  *164 -> true
  *217 -> true
  *218 -> true
  *159 -> true
  *160 -> true
  *219 -> true
  *220 -> true
  *161 -> true
  *162 -> true
  else -> true
}
$f_closed -> {
  *91 -> *251
  *16 -> *251
  *130 -> *251
  *53 -> *251
  else -> *251
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *351 *149 -> *222
  *351 *22 -> *224
  *352 *149 -> *222
  *352 *22 -> *226
  *353 *48 -> *228
  *354 *48 -> *232
  *353 *22 -> *231
  *352 *48 -> *228
  *351 *48 -> *228
  else -> *228
}
$field_kind -> {
  *22 -> *84
  *149 -> *84
  *136 -> *84
  *48 -> *84
  *164 -> *113
  *168 -> *113
  *170 -> *113
  *217 -> *6
  *218 -> *6
  *159 -> *6
  *160 -> *6
  *219 -> *6
  *220 -> *6
  *161 -> *113
  *162 -> *113
  else -> *6
}
Select_[$ptr]$bool -> {
  *251 *69 -> false
  *251 *155 -> false
  *251 *28 -> false
  else -> false
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *168 -> *168
  *170 -> *170
  *161 -> *161
  *162 -> *162
  else -> *168
}
$phys_ptr_cast -> {
  *71 *124 -> *28
  *177 *96 -> *69
  *78 *124 -> *158
  *185 *96 -> *155
  *69 *96 -> *69
  *28 *124 -> *28
  *174 *112 -> *174
  *155 *96 -> *155
  *158 *124 -> *158
  *182 *112 -> *182
  *191 *112 -> *191
  *192 *112 -> *192
  else -> *69
}
Store_[$ptr]$int -> {
  *224 *69 2147465825 -> *226
  *226 *155 -17330 -> *231
  *228 *28 -323 -> *232
  else -> *226
}
$prim_emb -> {
  *174 -> *69
  *182 -> *155
  *191 -> *28
  *192 -> *158
  else -> *69
}
$vs_state -> {
  *67 -> *355
  else -> *355
}
$trans_call_transition -> {
  *91 *16 -> true
  *91 *130 -> true
  *16 *130 -> true
  *91 *53 -> true
  *16 *53 -> true
  *130 *53 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *125 -> *56
  *93 -> *25
  *143 -> *115
  *112 -> *98
  *131 -> *21
  *122 -> *64
  *41 -> *76
  *33 -> *100
  *86 -> *58
  *99 -> *139
  *52 -> *79
  *44 -> *63
  *80 -> *27
  *94 -> *114
  *18 -> *140
  *3 -> *101
  *47 -> *127
  *62 -> *38
  *34 -> *147
  *60 -> *59
  *30 -> *39
  *35 -> *134
  *31 -> *105
  *32 -> *156
  *150 -> *11
  *144 -> *70
  *142 -> *2
  *137 -> *89
  *61 -> *135
  *96 -> *73
  *124 -> *43
  *46 -> *152
  *157 -> *81
  *145 -> *72
  *10 -> *82
  *121 -> *40
  *154 -> *146
  *74 -> *45
  *5 -> *102
  else -> *56
}
$instantiate_int -> {
  129 -> true
  -17500 -> true
  76 -> true
  2147465995 -> true
  -2147483648 -> true
  else -> true
}
$unchk_sub -> {
  *112 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *51 -> *168
  *12 -> *168
  *126 -> *166
  *111 -> *164
  *174 -> *22
  *182 -> *22
  *191 -> *48
  *192 -> *48
  *28 -> *162
  *177 -> *175
  *71 -> *178
  *69 -> *161
  *158 -> *162
  *185 -> *183
  *78 -> *186
  *155 -> *161
  *163 -> *189
  *57 -> *170
  else -> *168
}
$heap -> {
  *91 -> *351
  *16 -> *352
  *130 -> *353
  *53 -> *354
  else -> *351
}
$f_owns -> {
  *47 -> *217
  *35 -> *218
  *144 -> *159
  *142 -> *160
  *96 -> *219
  *124 -> *220
  else -> *217
}
$field_type -> {
  *166 -> *47
  *22 -> *112
  *149 -> *5
  *136 -> *5
  *48 -> *112
  *168 -> *144
  *170 -> *142
  *164 -> *99
  *217 -> *60
  *218 -> *60
  *159 -> *60
  *160 -> *60
  *219 -> *60
  *220 -> *60
  *162 -> *124
  *161 -> *96
  *189 -> *243
  else -> *60
}
$has_field_at0 -> {
  *96 *22 -> true
  *124 *149 -> true
  else -> true
}
$function_entry -> {
  *91 -> true
  else -> true
}
$good_state_ext -> {
  *153 *91 -> true
  *14 *16 -> true
  *133 *130 -> true
  *141 *53 -> true
  else -> true
}
$f_owner -> {
  *91 -> *357
  *16 -> *357
  *130 -> *357
  *53 -> *357
  else -> *357
}
$type_project_0 -> {
  *5 -> *96
  else -> *96
}
Store_[$field][$ptr]$int -> {
  *351 *22 *226 -> *352
  *352 *22 *231 -> *353
  *353 *48 *232 -> *354
  else -> *352
}
$type_branch -> {
  *93 -> *23
  *143 -> *23
  *112 -> *23
  *131 -> *23
  *122 -> *23
  *41 -> *23
  *33 -> *23
  *86 -> *23
  *44 -> *23
  *80 -> *23
  *52 -> *23
  *99 -> *23
  *94 -> *23
  *18 -> *23
  *3 -> *23
  *47 -> *23
  *35 -> *23
  *62 -> *23
  *34 -> *23
  *60 -> *23
  *30 -> *23
  *31 -> *23
  *144 -> *23
  *142 -> *23
  *137 -> *23
  *61 -> *23
  *96 -> *23
  *124 -> *23
  *46 -> *23
  *157 -> *23
  *145 -> *23
  *10 -> *23
  *121 -> *23
  *154 -> *23
  *74 -> *23
  *5 -> *88
  else -> *23
}
$maybe_emb -> {
  *69 -> *69
  *155 -> *155
  *28 -> *28
  *158 -> *158
  else -> *69
}
$in_range_t -> {
  *33 4294967296 -> false
  *33 0 -> true
  *86 18446744073709551616 -> false
  *86 0 -> true
  *33 -1 -> false
  *33 4294967295 -> true
  *86 -1 -> false
  *86 18446744073709551615 -> true
  *112 -10000 -> true
  *86 -5806 -> false
  *86 361 -> true
  *86 296 -> true
  *86 4330 -> true
  *86 622 -> true
  *86 1795 -> true
  *86 -3308 -> false
  *86 -657 -> false
  *112 -17500 -> true
  *112 2147465825 -> true
  *86 840 -> true
  *86 6562 -> true
  *86 -4442 -> false
  *86 -9360 -> false
  *86 -4315 -> false
  *86 218 -> true
  *112 2147465995 -> true
  *112 -17330 -> true
  *86 1811 -> true
  *112 -2147483648 -> true
  *112 -323 -> true
  *86 6578 -> true
  else -> true
}
Select_[$ptr]$ptr -> {
  *357 *69 -> *51
  *244 *69 -> *69
  *244 *28 -> *28
  *357 *155 -> *51
  *244 *155 -> *155
  *244 *158 -> *163
  *357 *163 -> *51
  *244 *163 -> *163
  *357 *28 -> *51
  *357 *158 -> *57
  else -> *51
}
$spec_ptr_cast -> {
  *51 *144 -> *51
  *57 *142 -> *57
  *12 *144 -> *12
  else -> *51
}
$is_union_type -> {
  *96 -> false
  *124 -> false
  else -> false
}
$field_parent_type -> {
  *22 -> *96
  *149 -> *124
  *136 -> *124
  *48 -> *124
  *168 -> *144
  *170 -> *142
  *164 -> *125
  *217 -> *47
  *218 -> *35
  *159 -> *144
  *160 -> *142
  *219 -> *96
  *220 -> *124
  *161 -> *96
  *162 -> *124
  else -> *124
}
$sizeof -> {
  *93 -> 1
  *143 -> 2
  *112 -> 4
  *131 -> 8
  *122 -> 1
  *41 -> 2
  *33 -> 4
  *86 -> 8
  *44 -> 4
  *80 -> 8
  *52 -> 1
  *99 -> 1
  *94 -> 1
  *18 -> 1
  *3 -> 1
  *47 -> 1
  *35 -> 1
  *62 -> 1
  *34 -> 1
  *60 -> 1
  *30 -> 1
  *31 -> 1
  *144 -> 1
  *142 -> 1
  *137 -> 1
  *61 -> 1
  *96 -> 4
  *124 -> 24
  *46 -> 8
  *157 -> 8
  *145 -> 8
  *10 -> 8
  *121 -> 8
  *154 -> 8
  *74 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *217 -> true
  *218 -> true
  *159 -> true
  *160 -> true
  *219 -> true
  *220 -> true
  *22 -> false
  *48 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *51 -> true
  *57 -> true
  *12 -> true
  *69 -> false
  *155 -> false
  *28 -> false
  *158 -> false
  else -> false
}
$is_fnptr_type -> {
  *46 -> true
  *157 -> true
  *145 -> true
  *10 -> true
  *121 -> true
  *154 -> true
  *74 -> true
  else -> true
}
$f_root -> {
  *99 -> *164
  *144 -> *168
  *142 -> *170
  *124 -> *162
  *96 -> *161
  else -> *164
}
$int_to_ptr -> {
  76 -> *177
  129 -> *185
  else -> *177
}
$is_span_sequential -> {
  *96 -> true
  *124 -> true
  else -> true
}
$good_state -> {
  *355 -> true
  *91 -> true
  *16 -> true
  *130 -> true
  *53 -> true
  else -> true
}
$field_offset -> {
  *22 -> 0
  *149 -> 0
  *136 -> 8
  *48 -> 16
  *166 -> -18446744073709562932
  *168 -> 0
  *170 -> 0
  *164 -> 0
  *162 -> 0
  *175 -> -18446744073709562021
  *178 -> -18446744073709555892
  *161 -> 0
  *183 -> -18446744073709564469
  *186 -> -18446744073709569290
  *189 -> -18446744073709556430
  else -> 0
}
$base -> {
  *111 -> 0
  *51 -> 361
  *12 -> 4330
  *126 -> 18446744073709557126
  *28 -> 1795
  *177 -> 18446744073709558713
  *174 -> 622
  *71 -> 18446744073709555235
  *69 -> 622
  *182 -> 840
  *158 -> 6562
  *185 -> 18446744073709560027
  *155 -> 840
  *78 -> 18446744073709559930
  *163 -> 18446744073709552115
  *191 -> 1795
  *192 -> 6562
  *57 -> 296
  else -> 622
}
$as_in_range_t -> {
  *93 -> *93
  *143 -> *143
  *112 -> *112
  *131 -> *131
  *122 -> *122
  *41 -> *41
  *33 -> *33
  *86 -> *86
  *34 -> *34
  else -> *93
}
$field_arr_root -> {
  *22 -> *22
  *149 -> *149
  *136 -> *136
  *48 -> *48
  *164 -> *164
  *168 -> *168
  *170 -> *170
  *217 -> *217
  *218 -> *218
  *159 -> *159
  *160 -> *160
  *219 -> *219
  *220 -> *220
  *161 -> *161
  *162 -> *162
  else -> *22
}
*** STATE <initial>
  $s -> *91
  $cev_pc -> **$cev_pc
  P#a -> *71
  P#b -> *78
  P#amount -> -2147483325
  #wrTime$2^25.1 -> 61
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(25,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
  $s -> *16
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(46,3)
  $s -> *130
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(46,14)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(46,14)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(46,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(47,3)
  $s -> *53
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@40620 -> true
%lbl%@40665 -> true
%lbl%@40823 -> true
%lbl%+40336 -> true
%lbl%@40959 -> true
%lbl%@40453 -> true
%lbl%@40436 -> true
%lbl%+1948 -> true
%lbl%@40845 -> true
%lbl%@40405 -> true
%lbl%@40649 -> true
$position_marker -> true
%lbl%@40981 -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
P#amount@@0 -> -2147483325
^$#_onexit_t#4 -> *10
unique-value!79 -> *11
$untyped_owner_owner -> *12
$max.u4 -> 4294967295
#tok$2^41.3 -> *14
#wrTime$2^25.1 -> 199
$s@0@@1 -> *16
$fk_ref_cnt -> *17
^^field -> *18
$max.u2 -> 65535
loop_entered -> *20
unique-value!59 -> *21
Account.amount -> *22
$ctype_flat -> *23
$fk_as_array_first -> *24
unique-value!56 -> *25
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Caccount2.c -> *26
unique-value!67 -> *27
call1860formal@p@0 -> *28
#tok$1^26.5 -> *29
^$#state_t -> *30
^$#struct -> *31
^$#seq_version -> *32
^^u4 -> *33
^^nat -> *34
^$#volatile_version_t -> *35
$max.i2 -> 32767
$ctype_blob -> *37
unique-value!72 -> *38
unique-value!75 -> *39
unique-value!90 -> *40
^^u2 -> *41
$min.i8 -> -9223372036854775808
unique-value!85 -> *43
^^f4 -> *44
unique-value!92 -> *45
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *46
^^claim -> *47
AccountGroup.total -> *48
$max.i4 -> 2147483647
$decreases_level -> 2147483647
#tok$1^25.5 -> *50
$me -> *51
^^bool -> *52
$s@2@@1 -> *53
$max.i1 -> 127
cev_parameter -> *55
unique-value!55 -> *56
$untyped_owner -> *57
unique-value!63 -> *58
unique-value!74 -> *59
^$#ptrset -> *60
^$##club -> *61
^^mathint -> *62
unique-value!66 -> *63
unique-value!60 -> *64
call1671formal@v@0 -> 2147465825
$arch_ptr_size -> 8
$struct_zero -> *67
#file^c?3A?5Cusers?5Cyusuf?5Conedrive?5Cdesktop?5Csommersemester?202022?5Cc?20verification?20module?20?5Bvcc?5D?5Ccourse?20material?5Csimpleexamplesexcercise?5Caccount.c -> *68
call1671formal@p@0 -> *69
unique-value!80 -> *70
P#a@@0 -> *71
unique-value!88 -> *72
unique-value!84 -> *73
^$#_invalid_parameter_handler#7 -> *74
$min.i1 -> -128
unique-value!61 -> *76
conditional_moment -> *77
P#b@@0 -> *78
unique-value!65 -> *79
^^f8 -> *80
unique-value!87 -> *81
unique-value!89 -> *82
#tok$1^23.16 -> *83
$fk_base -> *84
#tok$1^28.5 -> *85
^^u8 -> *86
$arch_ptr_type -> *86
$set_empty -> *87
lambda@13 -> *87
$ctype_ptr -> *88
unique-value!82 -> *89
$fk_vol_version -> *90
$s -> *91
$max.u1 -> 255
^^i1 -> *93
^^object -> *94
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
^Account -> *96
$ctype_spec_ptr -> *97
unique-value!58 -> *98
^^void -> *99
unique-value!62 -> *100
unique-value!70 -> *101
unique-value!93 -> *102
$fk_active_option -> *103
$ctype_array -> *104
unique-value!77 -> *105
cev_local -> *106
#tok$2^47.3 -> *107
@MV_state_const -> 74
$ctype_map -> *109
loop_register -> *110
$null -> *111
^^i4 -> *112
$fk_allocation_root -> *113
unique-value!68 -> *114
unique-value!57 -> *115
loop_exited -> *116
$min.i2 -> -32768
cev_implicit -> *118
#tok$1^6.1 -> *119
lambda@21 -> *120
^$#account2.c..36689#5 -> *121
^^u1 -> *122
call1790formal@v@0 -> -17330
^AccountGroup -> *124
$primitive_emb_type -> *125
$no_claim -> *126
unique-value!71 -> *127
call1860formal@v@0 -> -323
took_else_branch -> *129
$s@1@@1 -> *130
^^i8 -> *131
took_then_branch -> *132
#tok$2^42.3 -> *133
unique-value!76 -> *134
unique-value!83 -> *135
AccountGroup.creditCard -> *136
^$##thread_id -> *137
$min.i4 -> -2147483648
unique-value!64 -> *139
unique-value!69 -> *140
#tok$2^46.3 -> *141
$untyped_owner_type -> *142
^^i2 -> *143
^$#thread_id_t -> *144
^$#account2.c..36585#3 -> *145
unique-value!91 -> *146
unique-value!73 -> *147
#tok$1^22.5 -> *148
AccountGroup.giro -> *149
^$#vol_version -> *150
#tok$1^13.1 -> *151
unique-value!86 -> *152
#tok$2^25.1 -> *153
^$#_purecall_handler#6 -> *154
call1790formal@p@0 -> *155
unique-value!78 -> *156
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *157
$cev_pc -> **$cev_pc
#stackframe -> **#stackframe
$thread_local -> {
  *91 *28 -> true
  *91 *69 -> true
  *16 *158 -> true
  *16 *155 -> true
  *130 *28 -> true
  else -> true
}
$ptr_to -> {
  *96 -> *5
  else -> *5
}
$is_volatile_field -> {
  *159 -> true
  *160 -> true
  else -> true
}
$is_phys_field -> {
  *22 -> true
  *149 -> true
  *136 -> true
  *48 -> true
  *161 -> true
  *162 -> true
  else -> true
}
$owner -> {
  *91 *69 -> *51
  *91 *28 -> *51
  *16 *155 -> *51
  *16 *158 -> *51
  *130 *28 -> *51
  *53 *158 -> *51
  else -> *51
}
$ptr -> {
  *163 0 -> *111
  *165 18446744073709557126 -> *126
  *167 361 -> *51
  *169 296 -> *57
  *167 4330 -> *12
  *22 622 -> *173
  *161 622 -> *69
  *174 18446744073709558713 -> *176
  *177 18446744073709555235 -> *71
  *162 1795 -> *28
  *22 840 -> *181
  *161 840 -> *155
  *182 18446744073709560027 -> *184
  *185 18446744073709559930 -> *78
  *162 6562 -> *158
  *48 1795 -> *188
  *48 6562 -> *189
  else -> *111
}
$closed -> {
  *91 *69 -> false
  *16 *155 -> false
  *130 *28 -> false
  *53 *158 -> false
  else -> false
}
$dot -> {
  *69 *22 -> *173
  *155 *22 -> *181
  *28 *48 -> *188
  *158 *48 -> *189
  else -> *173
}
$addr0 -> {
  *111 -> 0
  *126 -> 0
  *51 -> 361
  *57 -> 296
  *12 -> 4330
  *71 -> 1795
  *176 -> 622
  *69 -> 622
  *28 -> 1795
  *173 -> 622
  *78 -> 6562
  *184 -> 840
  *155 -> 840
  *158 -> 6562
  *181 -> 840
  *188 -> 1811
  *189 -> 6578
  else -> 622
}
$is_proper -> {
  *51 -> true
  *57 -> true
  *12 -> true
  *173 -> true
  *181 -> true
  *188 -> true
  *69 -> true
  *28 -> true
  *155 -> true
  *158 -> true
  *189 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *69 -> true
  *173 -> true
  *28 -> true
  *155 -> true
  *181 -> true
  *158 -> true
  *188 -> true
  *189 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  74 9 -> true
  74 10 -> true
  74 11 -> true
  74 12 -> true
  74 13 -> true
  74 14 -> true
  74 15 -> true
  74 16 -> true
  74 17 -> true
  74 18 -> true
  74 19 -> true
  74 20 -> true
  else -> true
}
$current_timestamp -> {
  *91 -> 199
  *16 -> 200
  *130 -> 435
  *53 -> 436
  else -> 199
}
$as_primitive_field -> {
  *22 -> *22
  *149 -> *149
  *136 -> *136
  *48 -> *48
  *163 -> *163
  *214 -> *214
  *215 -> *215
  *159 -> *159
  *160 -> *160
  *216 -> *216
  *217 -> *217
  else -> *22
}
$f_timestamp -> {
  *91 -> *218
  *16 -> *218
  *130 -> *218
  *53 -> *218
  else -> *218
}
Select_[$ptr]$int -> {
  *219 *28 -> 76
  *218 *69 -> 199
  *221 *69 -> -17500
  *218 *155 -> 199
  *223 *155 -> 2147465995
  *218 *28 -> 199
  *225 *28 -> -2147483648
  *218 *158 -> 199
  *226 *158 -> -324
  *219 *158 -> 132
  *223 *69 -> 2147465825
  *221 *155 -> 2147465995
  *229 *155 -> -17330
  *226 *28 -> -323
  *225 *158 -> -324
  else -> 199
}
$unchecked -> {
  *33 4294967296 -> 0
  *86 18446744073709551616 -> 0
  *33 -1 -> 4294967295
  *86 -1 -> 18446744073709551615
  *112 -10000 -> -10000
  *86 0 -> 0
  *86 -5806 -> 0
  *86 361 -> 361
  *86 296 -> 296
  *86 4330 -> 4330
  *86 -3308 -> 622
  *86 -657 -> 1795
  *86 622 -> 622
  *86 1795 -> 1795
  *86 -4442 -> 840
  *86 -9360 -> 6562
  *86 840 -> 840
  *86 6562 -> 6562
  *86 1811 -> 1811
  *86 6578 -> 6578
  else -> 0
}
$mutable -> {
  *91 *69 -> true
  *16 *155 -> true
  *130 *28 -> true
  *53 *158 -> true
  else -> true
}
$is_primitive -> {
  *93 -> true
  *143 -> true
  *112 -> true
  *131 -> true
  *122 -> true
  *41 -> true
  *33 -> true
  *86 -> true
  *44 -> true
  *80 -> true
  *52 -> true
  *99 -> true
  *94 -> true
  *18 -> true
  *3 -> true
  *47 -> false
  *35 -> false
  *62 -> true
  *34 -> true
  *60 -> true
  *30 -> true
  *31 -> true
  *144 -> false
  *142 -> false
  *137 -> true
  *61 -> true
  *96 -> false
  *124 -> false
  *5 -> true
  *46 -> true
  *157 -> true
  *145 -> true
  *10 -> true
  *121 -> true
  *154 -> true
  *74 -> true
  *125 -> false
  else -> true
}
$as_field_with_type -> {
  *22 *112 -> *22
  *149 *5 -> *149
  *136 *5 -> *136
  *48 *112 -> *48
  *163 *99 -> *163
  *167 *144 -> *167
  *169 *142 -> *169
  *214 *60 -> *214
  *215 *60 -> *215
  *159 *60 -> *159
  *160 *60 -> *160
  *216 *60 -> *216
  *217 *60 -> *217
  *162 *124 -> *162
  *161 *96 -> *161
  else -> *22
}
$roots -> {
  *91 -> *239
  *16 -> *239
  *130 -> *239
  *53 -> *239
  else -> *239
}
$invok_state -> {
  *91 -> true
  *16 -> true
  *130 -> true
  *53 -> true
  else -> true
}
$is_sequential_field -> {
  *214 -> true
  *215 -> true
  *216 -> true
  *22 -> true
  *217 -> true
  *149 -> true
  *136 -> true
  *48 -> true
  *163 -> true
  *159 -> false
  else -> true
}
$is_math_type -> {
  *94 -> true
  *18 -> true
  *3 -> true
  *62 -> true
  *34 -> true
  *60 -> true
  *30 -> true
  *31 -> true
  *137 -> true
  *61 -> true
  else -> true
}
$file_name_is -> {
  2 *26 -> true
  1 *68 -> true
  else -> true
}
$unchk_add -> {
  *86 0 0 -> 0
  *86 18446744073709557126 -18446744073709562932 -> 0
  *86 361 0 -> 361
  *86 296 0 -> 296
  *86 4330 0 -> 4330
  *86 1795 0 -> 1795
  *86 18446744073709558713 -18446744073709562021 -> 622
  *86 18446744073709555235 -18446744073709555892 -> 1795
  *86 622 0 -> 622
  *86 6562 0 -> 6562
  *86 18446744073709560027 -18446744073709564469 -> 840
  *86 18446744073709559930 -18446744073709569290 -> 6562
  *86 840 0 -> 840
  *86 1795 16 -> 1811
  *86 6562 16 -> 6578
  else -> 0
}
$full_stop -> {
  *91 -> true
  *16 -> true
  *130 -> true
  *53 -> true
  else -> true
}
$writes_at -> {
  199 -> *120
  else -> *120
}
$call_transition -> {
  *91 *16 -> true
  *16 *130 -> true
  *130 *53 -> true
  else -> true
}
$set_cardinality -> {
  *87 -> 0
  else -> 0
}
$is_claimable -> {
  *47 -> true
  *35 -> false
  *144 -> false
  *142 -> false
  *96 -> false
  *124 -> false
  *93 -> false
  *143 -> false
  *112 -> false
  *131 -> false
  *122 -> false
  *41 -> false
  *33 -> false
  *86 -> false
  *44 -> false
  *80 -> false
  *52 -> false
  *99 -> false
  *94 -> false
  *18 -> false
  *3 -> false
  *62 -> false
  *34 -> false
  *60 -> false
  *30 -> false
  *31 -> false
  *137 -> false
  *61 -> false
  *46 -> false
  *157 -> false
  *145 -> false
  *10 -> false
  *121 -> false
  *154 -> false
  *74 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *22 -> true
  *149 -> true
  *136 -> true
  *48 -> true
  *167 -> true
  *169 -> true
  *163 -> true
  *214 -> true
  *215 -> true
  *159 -> true
  *160 -> true
  *216 -> true
  *217 -> true
  *161 -> true
  *162 -> true
  else -> true
}
$f_closed -> {
  *91 -> *245
  *16 -> *245
  *130 -> *245
  *53 -> *245
  else -> *245
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *346 *149 -> *219
  *346 *22 -> *221
  *347 *149 -> *219
  *347 *22 -> *223
  *348 *48 -> *225
  *349 *48 -> *226
  *348 *22 -> *229
  *347 *48 -> *225
  *346 *48 -> *225
  else -> *225
}
$field_kind -> {
  *22 -> *84
  *149 -> *84
  *136 -> *84
  *48 -> *84
  *163 -> *113
  *167 -> *113
  *169 -> *113
  *214 -> *6
  *215 -> *6
  *159 -> *6
  *160 -> *6
  *216 -> *6
  *217 -> *6
  *161 -> *113
  *162 -> *113
  else -> *6
}
Select_[$ptr]$bool -> {
  *245 *69 -> false
  *245 *155 -> false
  *245 *28 -> false
  *245 *158 -> false
  else -> false
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *167 -> *167
  *169 -> *169
  *161 -> *161
  *162 -> *162
  else -> *167
}
$phys_ptr_cast -> {
  *71 *124 -> *28
  *176 *96 -> *69
  *78 *124 -> *158
  *184 *96 -> *155
  *69 *96 -> *69
  *28 *124 -> *28
  *173 *112 -> *173
  *155 *96 -> *155
  *158 *124 -> *158
  *181 *112 -> *181
  *188 *112 -> *188
  *189 *112 -> *189
  else -> *69
}
Store_[$ptr]$int -> {
  *221 *69 2147465825 -> *223
  *223 *155 -17330 -> *229
  *225 *28 -323 -> *226
  else -> *223
}
$prim_emb -> {
  *173 -> *69
  *181 -> *155
  *188 -> *28
  *189 -> *158
  else -> *69
}
$vs_state -> {
  *67 -> *350
  else -> *350
}
$trans_call_transition -> {
  *91 *16 -> true
  *91 *130 -> true
  *16 *130 -> true
  *91 *53 -> true
  *16 *53 -> true
  *130 *53 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *125 -> *56
  *93 -> *25
  *143 -> *115
  *112 -> *98
  *131 -> *21
  *122 -> *64
  *41 -> *76
  *33 -> *100
  *86 -> *58
  *99 -> *139
  *52 -> *79
  *44 -> *63
  *80 -> *27
  *94 -> *114
  *18 -> *140
  *3 -> *101
  *47 -> *127
  *62 -> *38
  *34 -> *147
  *60 -> *59
  *30 -> *39
  *35 -> *134
  *31 -> *105
  *32 -> *156
  *150 -> *11
  *144 -> *70
  *142 -> *2
  *137 -> *89
  *61 -> *135
  *96 -> *73
  *124 -> *43
  *46 -> *152
  *157 -> *81
  *145 -> *72
  *10 -> *82
  *121 -> *40
  *154 -> *146
  *74 -> *45
  *5 -> *102
  else -> *56
}
$instantiate_int -> {
  132 -> true
  -17500 -> true
  76 -> true
  2147465995 -> true
  -2147483648 -> true
  -324 -> true
  else -> true
}
$unchk_sub -> {
  *112 0 10000 -> -10000
  else -> -10000
}
$field -> {
  *51 -> *167
  *57 -> *169
  *12 -> *167
  *126 -> *165
  *111 -> *163
  *173 -> *22
  *181 -> *22
  *188 -> *48
  *189 -> *48
  *28 -> *162
  *176 -> *174
  *71 -> *177
  *69 -> *161
  *158 -> *162
  *184 -> *182
  *78 -> *185
  *155 -> *161
  else -> *167
}
$heap -> {
  *91 -> *346
  *16 -> *347
  *130 -> *348
  *53 -> *349
  else -> *346
}
$f_owns -> {
  *47 -> *214
  *35 -> *215
  *144 -> *159
  *142 -> *160
  *96 -> *216
  *124 -> *217
  else -> *214
}
$field_type -> {
  *165 -> *47
  *22 -> *112
  *149 -> *5
  *136 -> *5
  *48 -> *112
  *167 -> *144
  *169 -> *142
  *163 -> *99
  *214 -> *60
  *215 -> *60
  *159 -> *60
  *160 -> *60
  *216 -> *60
  *217 -> *60
  *162 -> *124
  *161 -> *96
  else -> *60
}
$has_field_at0 -> {
  *96 *22 -> true
  *124 *149 -> true
  else -> true
}
$function_entry -> {
  *91 -> true
  else -> true
}
$good_state_ext -> {
  *153 *91 -> true
  *14 *16 -> true
  *133 *130 -> true
  *141 *53 -> true
  else -> true
}
$f_owner -> {
  *91 -> *352
  *16 -> *352
  *130 -> *352
  *53 -> *352
  else -> *352
}
$type_project_0 -> {
  *5 -> *96
  else -> *96
}
Store_[$field][$ptr]$int -> {
  *346 *22 *223 -> *347
  *347 *22 *229 -> *348
  *348 *48 *226 -> *349
  else -> *347
}
$type_branch -> {
  *93 -> *23
  *143 -> *23
  *112 -> *23
  *131 -> *23
  *122 -> *23
  *41 -> *23
  *33 -> *23
  *86 -> *23
  *44 -> *23
  *80 -> *23
  *52 -> *23
  *99 -> *23
  *94 -> *23
  *18 -> *23
  *3 -> *23
  *47 -> *23
  *35 -> *23
  *62 -> *23
  *34 -> *23
  *60 -> *23
  *30 -> *23
  *31 -> *23
  *144 -> *23
  *142 -> *23
  *137 -> *23
  *61 -> *23
  *96 -> *23
  *124 -> *23
  *46 -> *23
  *157 -> *23
  *145 -> *23
  *10 -> *23
  *121 -> *23
  *154 -> *23
  *74 -> *23
  *5 -> *88
  else -> *23
}
$maybe_emb -> {
  *69 -> *69
  *155 -> *155
  *28 -> *28
  *158 -> *158
  else -> *69
}
$in_range_t -> {
  *33 4294967296 -> false
  *33 0 -> true
  *86 18446744073709551616 -> false
  *86 0 -> true
  *33 -1 -> false
  *33 4294967295 -> true
  *86 -1 -> false
  *86 18446744073709551615 -> true
  *112 -10000 -> true
  *86 -5806 -> false
  *86 361 -> true
  *86 296 -> true
  *86 4330 -> true
  *86 622 -> true
  *86 1795 -> true
  *86 -3308 -> false
  *86 -657 -> false
  *112 -17500 -> true
  *112 2147465825 -> true
  *86 840 -> true
  *86 6562 -> true
  *86 -4442 -> false
  *86 -9360 -> false
  *112 2147465995 -> true
  *112 -17330 -> true
  *86 1811 -> true
  *112 -2147483648 -> true
  *112 -323 -> true
  *86 6578 -> true
  *112 -324 -> true
  else -> true
}
Select_[$ptr]$ptr -> {
  *352 *69 -> *51
  *239 *69 -> *69
  *239 *28 -> *28
  *352 *155 -> *51
  *239 *155 -> *155
  *239 *158 -> *158
  *352 *28 -> *51
  *352 *158 -> *51
  else -> *51
}
$spec_ptr_cast -> {
  *51 *144 -> *51
  *57 *142 -> *57
  *12 *144 -> *12
  else -> *51
}
$is_union_type -> {
  *96 -> false
  *124 -> false
  else -> false
}
$field_parent_type -> {
  *22 -> *96
  *149 -> *124
  *136 -> *124
  *48 -> *124
  *167 -> *144
  *169 -> *142
  *163 -> *125
  *214 -> *47
  *215 -> *35
  *159 -> *144
  *160 -> *142
  *216 -> *96
  *217 -> *124
  *161 -> *96
  *162 -> *124
  else -> *124
}
$sizeof -> {
  *93 -> 1
  *143 -> 2
  *112 -> 4
  *131 -> 8
  *122 -> 1
  *41 -> 2
  *33 -> 4
  *86 -> 8
  *44 -> 4
  *80 -> 8
  *52 -> 1
  *99 -> 1
  *94 -> 1
  *18 -> 1
  *3 -> 1
  *47 -> 1
  *35 -> 1
  *62 -> 1
  *34 -> 1
  *60 -> 1
  *30 -> 1
  *31 -> 1
  *144 -> 1
  *142 -> 1
  *137 -> 1
  *61 -> 1
  *96 -> 4
  *124 -> 24
  *46 -> 8
  *157 -> 8
  *145 -> 8
  *10 -> 8
  *121 -> 8
  *154 -> 8
  *74 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *214 -> true
  *215 -> true
  *159 -> true
  *160 -> true
  *216 -> true
  *217 -> true
  *22 -> false
  *48 -> false
  else -> true
}
$in_range_spec_ptr -> {
  *51 -> true
  *57 -> true
  *12 -> true
  *69 -> false
  *155 -> false
  *28 -> false
  *158 -> false
  else -> false
}
$is_fnptr_type -> {
  *46 -> true
  *157 -> true
  *145 -> true
  *10 -> true
  *121 -> true
  *154 -> true
  *74 -> true
  else -> true
}
$f_root -> {
  *99 -> *163
  *144 -> *167
  *142 -> *169
  *124 -> *162
  *96 -> *161
  else -> *163
}
$int_to_ptr -> {
  76 -> *176
  132 -> *184
  else -> *176
}
$is_span_sequential -> {
  *96 -> true
  *124 -> true
  else -> true
}
$good_state -> {
  *350 -> true
  *91 -> true
  *16 -> true
  *130 -> true
  *53 -> true
  else -> true
}
$field_offset -> {
  *22 -> 0
  *149 -> 0
  *136 -> 8
  *48 -> 16
  *165 -> -18446744073709562932
  *167 -> 0
  *169 -> 0
  *163 -> 0
  *162 -> 0
  *174 -> -18446744073709562021
  *177 -> -18446744073709555892
  *161 -> 0
  *182 -> -18446744073709564469
  *185 -> -18446744073709569290
  else -> 0
}
$base -> {
  *111 -> 0
  *51 -> 361
  *57 -> 296
  *12 -> 4330
  *126 -> 18446744073709557126
  *28 -> 1795
  *176 -> 18446744073709558713
  *173 -> 622
  *71 -> 18446744073709555235
  *69 -> 622
  *181 -> 840
  *158 -> 6562
  *184 -> 18446744073709560027
  *155 -> 840
  *78 -> 18446744073709559930
  *188 -> 1795
  *189 -> 6562
  else -> 622
}
$as_in_range_t -> {
  *93 -> *93
  *143 -> *143
  *112 -> *112
  *131 -> *131
  *122 -> *122
  *41 -> *41
  *33 -> *33
  *86 -> *86
  *34 -> *34
  else -> *93
}
$field_arr_root -> {
  *22 -> *22
  *149 -> *149
  *136 -> *136
  *48 -> *48
  *163 -> *163
  *167 -> *167
  *169 -> *169
  *214 -> *214
  *215 -> *215
  *159 -> *159
  *160 -> *160
  *216 -> *216
  *217 -> *217
  *161 -> *161
  *162 -> *162
  else -> *22
}
*** STATE <initial>
  $s -> *91
  $cev_pc -> **$cev_pc
  P#a -> *71
  P#b -> *78
  P#amount -> -2147483325
  #wrTime$2^25.1 -> 199
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(25,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(41,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
  $s -> *16
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,21)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(42,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(46,3)
  $s -> *130
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(46,14)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(46,14)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(46,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(47,3)
  $s -> *53
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\account2.c(47,14)
*** END_STATE
*** END_MODEL
