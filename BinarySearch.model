*** MODEL
%lbl%+460 -> true
%lbl%+471 -> true
%lbl%+34816 -> true
%lbl%+464 -> true
%lbl%+462 -> true
%lbl%+469 -> true
$position_marker -> true
%lbl%+476 -> true
%lbl%@35083 -> false
^^null_type -> *2
$max.i8 -> 9223372036854775807
cev_global -> *4
$fk_owns -> *5
$fk_emb_array -> *6
$untyped_owner_owner -> *7
$max.u4 -> 4294967295
$fk_ref_cnt -> *9
^^field -> *10
$max.u2 -> 65535
loop_entered -> *12
$ctype_flat -> *13
$fk_as_array_first -> *14
^$#state_t -> *15
^$#struct -> *16
^$#seq_version -> *17
^^u4 -> *18
^^nat -> *19
^$#volatile_version_t -> *20
$ctype_blob -> *21
$max.i2 -> 32767
P#len -> 0
L#high -> 0
L#mid@0 -> 0
^^u2 -> *24
$min.i8 -> -9223372036854775808
^^f4 -> *26
^^claim -> *27
$max.i4 -> 2147483647
$decreases_level -> 2147483647
$me -> *29
^^bool -> *30
$max.i1 -> 127
cev_parameter -> *32
$untyped_owner -> *33
^$#ptrset -> *34
^$##club -> *35
^^mathint -> *36
$arch_ptr_size -> 8
$struct_zero -> *38
#wrTime$1^4.1 -> 83
$min.i1 -> -128
P#val -> 911
conditional_moment -> *42
^^f8 -> *43
L#mid -> 452
$fk_base -> *45
^^u8 -> *46
$arch_ptr_type -> *46
$set_empty -> *47
lambda@13 -> *47
$ctype_ptr -> *48
$s -> *49
$fk_vol_version -> *50
$max.u1 -> 255
^^i1 -> *52
^^object -> *53
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
$ctype_spec_ptr -> *55
#tok$1^8.3 -> *56
^^void -> *57
cev_local -> *58
@MV_state_const -> 77
$fk_active_option -> *60
$ctype_array -> *61
L#low -> 974
L#high@0 -> 4294960345
$ctype_map -> *64
loop_register -> *65
$null -> *66
^^i4 -> *67
$fk_allocation_root -> *68
loop_exited -> *69
$min.i2 -> -32768
cev_implicit -> *71
^^u1 -> *72
L#low@0 -> 6951
$primitive_emb_type -> *74
$no_claim -> *75
took_else_branch -> *76
^^i8 -> *77
took_then_branch -> *78
#tok$1^4.1 -> *79
$min.i4 -> -2147483648
^$##thread_id -> *81
$untyped_owner_type -> *82
^^i2 -> *83
^$#thread_id_t -> *84
lambda@19 -> *85
^$#vol_version -> *86
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5CBinarySearch.c -> *87
$cev_pc -> **$cev_pc
P#arr -> **P#arr
@@undefined@@17962213@@ -> **@@undefined@@17962213@@
@@undefined@@36922171@@ -> **@@undefined@@36922171@@
loopState#0 -> **loopState#0
#stackframe -> **#stackframe
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$vs_state -> {
  *38 -> *88
  else -> *88
}
$is_proper_field -> {
  *89 -> true
  *90 -> true
  *91 -> true
  *92 -> true
  *93 -> true
  *94 -> true
  *95 -> true
  else -> true
}
$field_offset -> {
  *96 -> -18446744073709564166
  *89 -> 0
  *90 -> 0
  *91 -> 0
  else -> 0
}
$addr0 -> {
  *66 -> 0
  *75 -> 0
  *29 -> 824
  *33 -> 2561
  *7 -> 361
  else -> 0
}
$is_proper -> {
  *29 -> true
  *33 -> true
  *7 -> true
  else -> true
}
$field -> {
  *29 -> *89
  *33 -> *90
  *7 -> *89
  *75 -> *96
  *66 -> *91
  else -> *89
}
$file_name_is -> {
  1 *87 -> true
  else -> true
}
$field_arr_root -> {
  *91 -> *91
  *89 -> *89
  *90 -> *90
  *92 -> *92
  *93 -> *93
  *94 -> *94
  *95 -> *95
  else -> *91
}
$is_volatile_field -> {
  *94 -> true
  *95 -> true
  else -> true
}
$field_kind -> {
  *91 -> *68
  *89 -> *68
  *90 -> *68
  *92 -> *5
  *93 -> *5
  *94 -> *5
  *95 -> *5
  else -> *5
}
$as_composite_field -> {
  *89 -> *89
  *90 -> *90
  else -> *89
}
$f_owns -> {
  *27 -> *92
  *20 -> *93
  *84 -> *94
  *82 -> *95
  else -> *92
}
$ptr -> {
  *91 0 -> *66
  *96 18446744073709558629 -> *75
  *89 824 -> *29
  *90 2561 -> *33
  *89 361 -> *7
  else -> *66
}
$function_entry -> {
  *49 -> true
  else -> true
}
@MV_state -> {
  77 0 -> true
  77 1 -> true
  77 2 -> true
  77 3 -> true
  77 4 -> true
  77 5 -> true
  77 6 -> true
  77 7 -> true
  77 8 -> true
  77 9 -> true
  77 10 -> true
  77 11 -> true
  77 12 -> true
  77 15 -> true
  77 16 -> true
  else -> true
}
$current_timestamp -> {
  *49 -> 83
  else -> 83
}
$trans_call_transition -> {
  *49 *49 -> true
  else -> true
}
$unchecked -> {
  *18 4294967296 -> 0
  *46 18446744073709551616 -> 0
  *18 -1 -> 4294967295
  *46 -1 -> 18446744073709551615
  *46 0 -> 0
  *46 -5537 -> 0
  *46 824 -> 824
  *46 2561 -> 2561
  *46 361 -> 361
  *18 4 -> 4
  else -> 0
}
$set_cardinality -> {
  *47 -> 0
  else -> 0
}
$good_state_ext -> {
  *79 *49 -> true
  *56 *49 -> true
  else -> true
}
$type_branch -> {
  *52 -> *13
  *83 -> *13
  *67 -> *13
  *77 -> *13
  *72 -> *13
  *24 -> *13
  *18 -> *13
  *46 -> *13
  *26 -> *13
  *43 -> *13
  *30 -> *13
  *57 -> *13
  *53 -> *13
  *10 -> *13
  *2 -> *13
  *27 -> *13
  *20 -> *13
  *36 -> *13
  *19 -> *13
  *34 -> *13
  *15 -> *13
  *16 -> *13
  *84 -> *13
  *82 -> *13
  *81 -> *13
  *35 -> *13
  else -> *13
}
$in_range_t -> {
  *18 4294967296 -> false
  *18 0 -> true
  *46 18446744073709551616 -> false
  *46 0 -> true
  *18 -1 -> false
  *18 4294967295 -> true
  *46 -1 -> false
  *46 18446744073709551615 -> true
  *46 -5537 -> false
  *46 824 -> true
  *46 2561 -> true
  *46 361 -> true
  *18 4 -> true
  else -> true
}
$is_primitive -> {
  *52 -> true
  *83 -> true
  *67 -> true
  *77 -> true
  *72 -> true
  *24 -> true
  *18 -> true
  *46 -> true
  *26 -> true
  *43 -> true
  *30 -> true
  *57 -> true
  *53 -> true
  *10 -> true
  *2 -> true
  *27 -> false
  *20 -> false
  *36 -> true
  *19 -> true
  *34 -> true
  *15 -> true
  *16 -> true
  *84 -> false
  *82 -> false
  *81 -> true
  *35 -> true
  *74 -> false
  else -> true
}
$spec_ptr_cast -> {
  *29 *84 -> *29
  *33 *82 -> *33
  *7 *84 -> *7
  else -> *29
}
$as_primitive_field -> {
  *91 -> *91
  *92 -> *92
  *93 -> *93
  *94 -> *94
  *95 -> *95
  else -> *91
}
$invok_state -> {
  *49 -> true
  else -> true
}
$sizeof -> {
  *52 -> 1
  *83 -> 2
  *67 -> 4
  *77 -> 8
  *72 -> 1
  *24 -> 2
  *18 -> 4
  *46 -> 8
  *26 -> 4
  *43 -> 8
  *30 -> 1
  *57 -> 1
  *53 -> 1
  *10 -> 1
  *2 -> 1
  *27 -> 1
  *20 -> 1
  *36 -> 1
  *19 -> 1
  *34 -> 1
  *15 -> 1
  *16 -> 1
  *84 -> 1
  *82 -> 1
  *81 -> 1
  *35 -> 1
  else -> 1
}
$field_type -> {
  *96 -> *27
  *89 -> *84
  *90 -> *82
  *91 -> *57
  *92 -> *34
  *93 -> *34
  *94 -> *34
  *95 -> *34
  else -> *34
}
$in_range_spec_ptr -> {
  *29 -> true
  *33 -> true
  *7 -> true
  else -> true
}
$full_stop -> {
  *49 -> true
  else -> true
}
$f_root -> {
  *57 -> *91
  *84 -> *89
  *82 -> *90
  else -> *91
}
$is_math_type -> {
  *53 -> true
  *10 -> true
  *2 -> true
  *36 -> true
  *19 -> true
  *34 -> true
  *15 -> true
  *16 -> true
  *81 -> true
  *35 -> true
  else -> true
}
$unchk_add -> {
  *46 0 0 -> 0
  *46 18446744073709558629 -18446744073709564166 -> 0
  *46 824 0 -> 824
  *46 2561 0 -> 2561
  *46 361 0 -> 361
  else -> 0
}
$good_state -> {
  *88 -> true
  *49 -> true
  else -> true
}
$writes_at -> {
  83 -> *85
  else -> *85
}
$call_transition -> {
  *49 *49 -> true
  else -> true
}
$field_parent_type -> {
  *89 -> *84
  *90 -> *82
  *91 -> *74
  *92 -> *27
  *93 -> *20
  *94 -> *84
  *95 -> *82
  else -> *84
}
$as_field_with_type -> {
  *91 *57 -> *91
  *89 *84 -> *89
  *90 *82 -> *90
  *92 *34 -> *92
  *93 *34 -> *93
  *94 *34 -> *94
  *95 *34 -> *95
  else -> *91
}
$is_ghost_field -> {
  *92 -> true
  *93 -> true
  *94 -> true
  *95 -> true
  else -> true
}
$is_claimable -> {
  *27 -> true
  *20 -> false
  *84 -> false
  *82 -> false
  *52 -> false
  *83 -> false
  *67 -> false
  *77 -> false
  *72 -> false
  *24 -> false
  *18 -> false
  *46 -> false
  *26 -> false
  *43 -> false
  *30 -> false
  *57 -> false
  *53 -> false
  *10 -> false
  *2 -> false
  *36 -> false
  *19 -> false
  *34 -> false
  *15 -> false
  *16 -> false
  *81 -> false
  *35 -> false
  else -> false
}
$modifies -> {
  *49 *49 *47 -> true
  else -> true
}
$is_sequential_field -> {
  *92 -> true
  *93 -> true
  *91 -> true
  else -> true
}
$base -> {
  *66 -> 0
  *29 -> 824
  *33 -> 2561
  *7 -> 361
  *75 -> 18446744073709558629
  else -> 0
}
$as_in_range_t -> {
  *52 -> *52
  *83 -> *83
  *67 -> *67
  *77 -> *77
  *72 -> *72
  *24 -> *24
  *18 -> *18
  *46 -> *46
  *19 -> *19
  else -> *52
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
*** STATE <initial>
  $s -> *49
  $cev_pc -> **$cev_pc
  P#val -> 911
  P#arr -> **P#arr
  P#len -> 0
  $result -> **@@undefined@@17962213@@
  ite#1 -> **@@undefined@@36922171@@
  loopState#0 -> **loopState#0
  L#low -> 974
  L#high -> 0
  L#mid -> 452
  #wrTime$1^4.1 -> 83
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(4,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(11,13)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(6,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(6,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(6,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(7,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(7,12)
  L#low -> 0
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(8,3) : before loop
  loopState#0 -> *49
  L#high -> 0
*** END_STATE
*** STATE <no file>(0,0)
  L#low -> 6951
  L#high -> 4294960345
  L#mid -> 0
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(8,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(10,26)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(10,12)
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%@35083 -> true
%lbl%+460 -> true
%lbl%+471 -> true
%lbl%+34816 -> true
%lbl%+464 -> true
%lbl%+462 -> true
%lbl%+469 -> true
$position_marker -> true
%lbl%+476 -> true
%lbl%@35117 -> false
^^null_type -> *2
$max.i8 -> 9223372036854775807
cev_global -> *4
$fk_owns -> *5
$fk_emb_array -> *6
$untyped_owner_owner -> *7
$max.u4 -> 4294967295
$fk_ref_cnt -> *9
^^field -> *10
$max.u2 -> 65535
loop_entered -> *12
$ctype_flat -> *13
$fk_as_array_first -> *14
^$#state_t -> *15
^$#struct -> *16
^$#seq_version -> *17
^^u4 -> *18
^^nat -> *19
^$#volatile_version_t -> *20
$ctype_blob -> *21
$max.i2 -> 32767
P#len -> 0
L#high -> 0
L#mid@0 -> 0
^^u2 -> *24
$min.i8 -> -9223372036854775808
^^f4 -> *26
^^claim -> *27
$max.i4 -> 2147483647
$decreases_level -> 2147483647
L#mid@1 -> 2147481620
$me -> *30
^^bool -> *31
$max.i1 -> 127
cev_parameter -> *33
$untyped_owner -> *34
^$#ptrset -> *35
^$##club -> *36
^^mathint -> *37
$arch_ptr_size -> 8
$struct_zero -> *39
P#arr -> *40
#wrTime$1^4.1 -> 83
$min.i1 -> -128
conditional_moment -> *43
P#val -> 911
^^f8 -> *45
L#mid -> 452
$fk_base -> *47
^^u8 -> *48
$arch_ptr_type -> *48
$set_empty -> *49
lambda@13 -> *49
$ctype_ptr -> *50
$s -> *51
$fk_vol_version -> *52
$max.u1 -> 255
^^i1 -> *54
^^object -> *55
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
$ctype_spec_ptr -> *57
#tok$1^8.3 -> *58
^^void -> *59
cev_local -> *60
@MV_state_const -> 77
$fk_active_option -> *62
$ctype_array -> *63
L#low -> 974
L#high@0 -> 4294962214
$ctype_map -> *66
loop_register -> *67
$null -> *68
^^i4 -> *69
$fk_allocation_root -> *70
loop_exited -> *71
$min.i2 -> -32768
cev_implicit -> *73
^^u1 -> *74
L#low@0 -> 1027
$primitive_emb_type -> *76
$no_claim -> *77
took_else_branch -> *78
^^i8 -> *79
took_then_branch -> *80
#tok$1^4.1 -> *81
$min.i4 -> -2147483648
^$##thread_id -> *83
$untyped_owner_type -> *84
^^i2 -> *85
^$#thread_id_t -> *86
lambda@19 -> *87
^$#vol_version -> *88
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5CBinarySearch.c -> *89
$cev_pc -> **$cev_pc
@@undefined@@17962213@@ -> **@@undefined@@17962213@@
@@undefined@@36922171@@ -> **@@undefined@@36922171@@
loopState#0 -> **loopState#0
#stackframe -> **#stackframe
$idx -> {
  *90 2147481620 -> *91
  else -> *91
}
int_mod -> {
  4294963241 2 -> 1
  else -> 1
}
$field_offset -> {
  *95 -> -18446744073709563506
  *97 -> 0
  *98 -> 0
  *99 -> 0
  *100 -> -18446744073709565946
  *102 -> -18446744082299487095
  *104 -> -18446744073709560615
  *106 -> -18446744082299517987
  *108 -> 0
  else -> 0
}
$addr0 -> {
  *68 -> 0
  *77 -> 0
  *30 -> 824
  *34 -> 2658
  *7 -> 361
  *91 -> 8577
  *90 -> 313
  *40 -> 2383
  else -> 0
}
$is_proper -> {
  *30 -> true
  *34 -> true
  *7 -> true
  *91 -> false
  else -> true
}
$field_arr_root -> {
  *99 -> *99
  *97 -> *97
  *98 -> *98
  *115 -> *115
  *116 -> *116
  *117 -> *117
  *118 -> *118
  *102 -> *106
  *104 -> *106
  *108 -> *108
  else -> *106
}
$trans_call_transition -> {
  *51 *51 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *90 -> true
  *91 -> true
  else -> true
}
$is_volatile_field -> {
  *117 -> true
  *118 -> true
  *104 -> false
  *106 -> false
  *102 -> false
  else -> false
}
@MV_state -> {
  77 0 -> true
  77 1 -> true
  77 2 -> true
  77 3 -> true
  77 4 -> true
  77 5 -> true
  77 6 -> true
  77 7 -> true
  77 8 -> true
  77 9 -> true
  77 10 -> true
  77 11 -> true
  77 12 -> true
  77 15 -> true
  77 16 -> true
  77 17 -> true
  77 18 -> true
  else -> true
}
$is_phys_field -> {
  *102 -> true
  *104 -> true
  *106 -> true
  else -> true
}
$extent_hint -> {
  *91 *90 -> true
  else -> true
}
$function_entry -> {
  *51 -> true
  else -> true
}
$unchecked -> {
  *18 4294967296 -> 0
  *48 18446744073709551616 -> 0
  *18 -1 -> 4294967295
  *48 -1 -> 18446744073709551615
  *48 0 -> 0
  *48 -9993 -> 0
  *48 824 -> 824
  *48 2658 -> 2658
  *48 361 -> 361
  *18 4 -> 4
  *48 -6353 -> 2383
  *48 -8589933006 -> 313
  *48 -6526 -> 8577
  else -> 0
}
$set_cardinality -> {
  *49 -> 0
  else -> 0
}
$is_primitive -> {
  *54 -> true
  *85 -> true
  *69 -> true
  *79 -> true
  *74 -> true
  *24 -> true
  *18 -> true
  *48 -> true
  *26 -> true
  *45 -> true
  *31 -> true
  *59 -> true
  *55 -> true
  *10 -> true
  *2 -> true
  *27 -> false
  *20 -> false
  *37 -> true
  *19 -> true
  *35 -> true
  *15 -> true
  *16 -> true
  *86 -> false
  *84 -> false
  *83 -> true
  *36 -> true
  *76 -> false
  *139 -> false
  else -> true
}
$as_primitive_field -> {
  *99 -> *99
  *115 -> *115
  *116 -> *116
  *117 -> *117
  *118 -> *118
  else -> *99
}
$dot -> {
  *140 *104 -> *91
  else -> *91
}
$is_math_type -> {
  *55 -> true
  *10 -> true
  *2 -> true
  *37 -> true
  *19 -> true
  *35 -> true
  *15 -> true
  *16 -> true
  *83 -> true
  *36 -> true
  else -> true
}
$unchk_add -> {
  *48 0 0 -> 0
  *48 18446744073709553513 -18446744073709563506 -> 0
  *48 824 0 -> 824
  *48 2658 0 -> 2658
  *48 361 0 -> 361
  *48 18446744073709559593 -18446744073709565946 -> 2383
  *48 18446744073709554089 -18446744082299487095 -> 313
  *48 18446744073709554089 -18446744073709560615 -> 8577
  else -> 0
}
$good_state -> {
  *144 -> true
  *51 -> true
  else -> true
}
$writes_at -> {
  83 -> *87
  else -> *87
}
$is_claimable -> {
  *27 -> true
  *20 -> false
  *86 -> false
  *84 -> false
  *54 -> false
  *85 -> false
  *69 -> false
  *79 -> false
  *74 -> false
  *24 -> false
  *18 -> false
  *48 -> false
  *26 -> false
  *45 -> false
  *31 -> false
  *59 -> false
  *55 -> false
  *10 -> false
  *2 -> false
  *37 -> false
  *19 -> false
  *35 -> false
  *15 -> false
  *16 -> false
  *83 -> false
  *36 -> false
  else -> false
}
$is_sequential_field -> {
  *115 -> true
  *116 -> true
  *99 -> true
  *104 -> false
  *106 -> false
  *102 -> false
  else -> true
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
int_div -> {
  4294963241 2 -> 2147481620
  else -> 2147481620
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$phys_ptr_cast -> {
  *40 *69 -> *90
  *90 *69 -> *90
  *91 *69 -> *91
  else -> *90
}
$prim_emb -> {
  *90 -> *140
  else -> *140
}
$thread_local -> {
  *51 *91 -> false
  else -> false
}
$vs_state -> {
  *39 -> *144
  else -> *144
}
$is_proper_field -> {
  *97 -> true
  *98 -> true
  *99 -> true
  *115 -> true
  *116 -> true
  *117 -> true
  *118 -> true
  *104 -> false
  *108 -> true
  else -> true
}
$field -> {
  *30 -> *97
  *34 -> *98
  *7 -> *97
  *77 -> *95
  *68 -> *99
  *91 -> *104
  *90 -> *102
  *40 -> *100
  *140 -> *108
  else -> *97
}
$current_timestamp -> {
  *51 -> 83
  else -> 83
}
$file_name_is -> {
  1 *89 -> true
  else -> true
}
$field_kind -> {
  *99 -> *70
  *97 -> *70
  *98 -> *70
  *115 -> *5
  *116 -> *5
  *117 -> *5
  *118 -> *5
  *104 -> *249
  *106 -> *249
  *108 -> *70
  *102 -> *249
  else -> *5
}
$as_composite_field -> {
  *97 -> *97
  *98 -> *98
  *108 -> *108
  else -> *97
}
$field_arr_ctor -> {
  *106 7723 -> *102
  *106 2147489343 -> *104
  else -> *102
}
$f_owns -> {
  *27 -> *115
  *20 -> *116
  *86 -> *117
  *84 -> *118
  else -> *115
}
$ptr -> {
  *99 0 -> *68
  *95 18446744073709553513 -> *77
  *97 824 -> *30
  *98 2658 -> *34
  *97 361 -> *7
  *102 18446744073709554089 -> *90
  *100 18446744073709559593 -> *40
  *104 18446744073709554089 -> *91
  *108 18446744073709554089 -> *140
  else -> *68
}
$field_arr_size -> {
  *104 -> 7723
  *106 -> 7723
  *102 -> 7723
  else -> 7723
}
$good_state_ext -> {
  *81 *51 -> true
  *58 *51 -> true
  else -> true
}
$type_branch -> {
  *54 -> *13
  *85 -> *13
  *69 -> *13
  *79 -> *13
  *74 -> *13
  *24 -> *13
  *18 -> *13
  *48 -> *13
  *26 -> *13
  *45 -> *13
  *31 -> *13
  *59 -> *13
  *55 -> *13
  *10 -> *13
  *2 -> *13
  *27 -> *13
  *20 -> *13
  *37 -> *13
  *19 -> *13
  *35 -> *13
  *15 -> *13
  *16 -> *13
  *86 -> *13
  *84 -> *13
  *83 -> *13
  *36 -> *13
  else -> *13
}
$idx_inline_prim -> {
  *90 2147481620 -> *91
  else -> *91
}
$in_range_t -> {
  *18 4294967296 -> false
  *18 0 -> true
  *48 18446744073709551616 -> false
  *48 0 -> true
  *18 -1 -> false
  *18 4294967295 -> true
  *48 -1 -> false
  *48 18446744073709551615 -> true
  *48 -9993 -> false
  *48 824 -> true
  *48 2658 -> true
  *48 361 -> true
  *18 4 -> true
  *48 -6353 -> false
  *48 2383 -> true
  *48 -8589933006 -> false
  *48 313 -> true
  *48 -6526 -> false
  *48 8577 -> true
  else -> true
}
$spec_ptr_cast -> {
  *30 *86 -> *30
  *34 *84 -> *34
  *7 *86 -> *7
  else -> *30
}
$invok_state -> {
  *51 -> true
  else -> true
}
$sizeof -> {
  *54 -> 1
  *85 -> 2
  *69 -> 4
  *79 -> 8
  *74 -> 1
  *24 -> 2
  *18 -> 4
  *48 -> 8
  *26 -> 4
  *45 -> 8
  *31 -> 1
  *59 -> 1
  *55 -> 1
  *10 -> 1
  *2 -> 1
  *27 -> 1
  *20 -> 1
  *37 -> 1
  *19 -> 1
  *35 -> 1
  *15 -> 1
  *16 -> 1
  *86 -> 1
  *84 -> 1
  *83 -> 1
  *36 -> 1
  else -> 1
}
$field_type -> {
  *95 -> *27
  *97 -> *86
  *98 -> *84
  *99 -> *59
  *115 -> *35
  *116 -> *35
  *117 -> *35
  *118 -> *35
  *102 -> *69
  *104 -> *69
  *106 -> *69
  *108 -> *139
  else -> *35
}
$in_range_spec_ptr -> {
  *30 -> true
  *34 -> true
  *7 -> true
  *140 -> false
  else -> true
}
$full_stop -> {
  *51 -> true
  else -> true
}
$f_root -> {
  *59 -> *99
  *86 -> *97
  *84 -> *98
  *139 -> *108
  else -> *99
}
$field_arr_index -> {
  *102 -> 7723
  *104 -> 2147489343
  else -> 7723
}
$call_transition -> {
  *51 *51 -> true
  else -> true
}
$field_parent_type -> {
  *97 -> *86
  *98 -> *84
  *99 -> *76
  *115 -> *27
  *116 -> *20
  *117 -> *86
  *118 -> *84
  *104 -> *139
  *106 -> *139
  *102 -> *139
  *108 -> *139
  else -> *139
}
$as_field_with_type -> {
  *99 *59 -> *99
  *97 *86 -> *97
  *98 *84 -> *98
  *115 *35 -> *115
  *116 *35 -> *116
  *117 *35 -> *117
  *118 *35 -> *118
  *102 *69 -> *102
  *104 *69 -> *104
  *108 *139 -> *108
  else -> *99
}
$is_ghost_field -> {
  *115 -> true
  *116 -> true
  *117 -> true
  *118 -> true
  *104 -> false
  else -> true
}
$modifies -> {
  *51 *51 *49 -> true
  else -> true
}
$base -> {
  *68 -> 0
  *30 -> 824
  *34 -> 2658
  *7 -> 361
  *77 -> 18446744073709553513
  *90 -> 18446744073709554089
  *40 -> 18446744073709559593
  *91 -> 18446744073709554089
  *140 -> 18446744073709554089
  else -> 18446744073709554089
}
$as_in_range_t -> {
  *54 -> *54
  *85 -> *85
  *69 -> *69
  *79 -> *79
  *74 -> *74
  *24 -> *24
  *18 -> *18
  *48 -> *48
  *19 -> *19
  else -> *54
}
*** STATE <initial>
  $s -> *51
  $cev_pc -> **$cev_pc
  P#val -> 911
  P#arr -> *40
  P#len -> 0
  $result -> **@@undefined@@17962213@@
  ite#1 -> **@@undefined@@36922171@@
  loopState#0 -> **loopState#0
  L#low -> 974
  L#high -> 0
  L#mid -> 452
  #wrTime$1^4.1 -> 83
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(4,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(11,13)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(6,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(6,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(6,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(7,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(7,12)
  L#low -> 0
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(8,3) : before loop
  loopState#0 -> *51
  L#high -> 0
*** END_STATE
*** STATE <no file>(0,0)
  L#low -> 1027
  L#high -> 4294962214
  L#mid -> 0
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(8,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(10,26)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(10,12)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(10,5)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(11,9)
  L#mid -> 2147481620
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%+498 -> true
%lbl%@35083 -> true
%lbl%@35117 -> true
%lbl%+460 -> true
%lbl%+486 -> true
%lbl%+34816 -> true
%lbl%+500 -> true
%lbl%+502 -> true
%lbl%+464 -> true
%lbl%+462 -> true
%lbl%+487 -> true
%lbl%+469 -> true
$position_marker -> true
%lbl%@35330 -> false
^^null_type -> *2
$max.i8 -> 9223372036854775807
cev_global -> *4
$fk_owns -> *5
$fk_emb_array -> *6
$untyped_owner_owner -> *7
$max.u4 -> 4294967295
$fk_ref_cnt -> *9
^^field -> *10
$max.u2 -> 65535
loop_entered -> *12
$ctype_flat -> *13
$fk_as_array_first -> *14
^$#state_t -> *15
^$#struct -> *16
^$#seq_version -> *17
^^u4 -> *18
^^nat -> *19
^$#volatile_version_t -> *20
$ctype_blob -> *21
$max.i2 -> 32767
P#len -> 6754
^^u2 -> *24
$min.i8 -> -9223372036854775808
^^f4 -> *26
^^claim -> *27
$max.i4 -> 2147483647
$decreases_level -> 2147483647
$me -> *29
^^bool -> *30
$max.i1 -> 127
cev_parameter -> *32
$untyped_owner -> *33
^$#ptrset -> *34
^$##club -> *35
^^mathint -> *36
$arch_ptr_size -> 8
$struct_zero -> *38
P#arr -> *39
#wrTime$1^4.1 -> 83
conditional_moment -> *41
$min.i1 -> -128
P#val -> 911
L#high -> 0
L#mid@0 -> 0
^^f8 -> *45
L#mid -> 452
$fk_base -> *47
^^u8 -> *48
$arch_ptr_type -> *48
$set_empty -> *49
lambda@13 -> *49
$ctype_ptr -> *50
$s -> *51
$fk_vol_version -> *52
$max.u1 -> 255
^^i1 -> *54
^^object -> *55
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
$ctype_spec_ptr -> *57
#tok$1^8.3 -> *58
^^void -> *59
cev_local -> *60
@MV_state_const -> 77
$fk_active_option -> *62
$ctype_array -> *63
L#low -> 974
L#high@0 -> 5931
$ctype_map -> *66
loop_register -> *67
$null -> *68
^^i4 -> *69
$fk_allocation_root -> *70
loop_exited -> *71
$min.i2 -> -32768
cev_implicit -> *73
^^u1 -> *74
L#low@0 -> 6753
$primitive_emb_type -> *76
$no_claim -> *77
took_else_branch -> *78
^^i8 -> *79
took_then_branch -> *80
#tok$1^4.1 -> *81
$min.i4 -> -2147483648
^$##thread_id -> *83
$untyped_owner_type -> *84
^^i2 -> *85
^$#thread_id_t -> *86
lambda@19 -> *87
^$#vol_version -> *88
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5CBinarySearch.c -> *89
$cev_pc -> **$cev_pc
@@undefined@@17962213@@ -> **@@undefined@@17962213@@
@@undefined@@36922171@@ -> **@@undefined@@36922171@@
loopState#0 -> **loopState#0
#stackframe -> **#stackframe
$idx -> {
  *90 6753 -> *91
  else -> *91
}
int_mod -> {
  12684 2 -> 0
  else -> 0
}
$field_offset -> {
  *94 -> -18446744073709563506
  *96 -> 0
  *97 -> 0
  *98 -> 0
  *99 -> -18446744073709563669
  *101 -> -18446744073709611665
  *103 -> -18446744073709589229
  *105 -> -18446744073709562217
  *107 -> 0
  else -> 0
}
$addr0 -> {
  *68 -> 0
  *77 -> 0
  *29 -> 824
  *33 -> 2658
  *7 -> 361
  *91 -> 579
  *90 -> 6402
  *39 -> 6392
  else -> 0
}
$is_proper -> {
  *29 -> true
  *33 -> true
  *7 -> true
  *91 -> false
  else -> true
}
$field_arr_root -> {
  *98 -> *98
  *96 -> *96
  *97 -> *97
  *114 -> *114
  *115 -> *115
  *116 -> *116
  *117 -> *117
  *103 -> *101
  *105 -> *101
  *107 -> *107
  else -> *101
}
$trans_call_transition -> {
  *51 *51 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *90 -> true
  *91 -> true
  else -> true
}
$is_volatile_field -> {
  *116 -> true
  *117 -> true
  *105 -> false
  *101 -> false
  *103 -> false
  else -> false
}
@MV_state -> {
  77 0 -> true
  77 1 -> true
  77 2 -> true
  77 3 -> true
  77 4 -> true
  77 5 -> true
  77 6 -> true
  77 7 -> true
  77 8 -> true
  77 9 -> true
  77 10 -> true
  77 11 -> true
  77 12 -> true
  77 13 -> true
  77 14 -> true
  77 24 -> true
  77 25 -> true
  77 28 -> true
  77 29 -> true
  else -> true
}
$is_phys_field -> {
  *103 -> true
  *105 -> true
  *101 -> true
  else -> true
}
$extent_hint -> {
  *91 *90 -> true
  else -> true
}
$function_entry -> {
  *51 -> true
  else -> true
}
$unchecked -> {
  *18 4294967296 -> 0
  *48 18446744073709551616 -> 0
  *18 -1 -> 4294967295
  *48 -1 -> 18446744073709551615
  *48 0 -> 0
  *48 -9993 -> 0
  *48 824 -> 824
  *48 2658 -> 2658
  *48 361 -> 361
  *18 4 -> 4
  *48 -3537 -> 6392
  *48 -28301 -> 6402
  *48 -1289 -> 579
  else -> 0
}
$set_cardinality -> {
  *49 -> 0
  else -> 0
}
$is_primitive -> {
  *54 -> true
  *85 -> true
  *69 -> true
  *79 -> true
  *74 -> true
  *24 -> true
  *18 -> true
  *48 -> true
  *26 -> true
  *45 -> true
  *30 -> true
  *59 -> true
  *55 -> true
  *10 -> true
  *2 -> true
  *27 -> false
  *20 -> false
  *36 -> true
  *19 -> true
  *34 -> true
  *15 -> true
  *16 -> true
  *86 -> false
  *84 -> false
  *83 -> true
  *35 -> true
  *76 -> false
  *141 -> false
  else -> true
}
$as_primitive_field -> {
  *98 -> *98
  *114 -> *114
  *115 -> *115
  *116 -> *116
  *117 -> *117
  else -> *98
}
$dot -> {
  *142 *105 -> *91
  else -> *91
}
$is_math_type -> {
  *55 -> true
  *10 -> true
  *2 -> true
  *36 -> true
  *19 -> true
  *34 -> true
  *15 -> true
  *16 -> true
  *83 -> true
  *35 -> true
  else -> true
}
$unchk_add -> {
  *48 0 0 -> 0
  *48 18446744073709553513 -18446744073709563506 -> 0
  *48 824 0 -> 824
  *48 2658 0 -> 2658
  *48 361 0 -> 361
  *48 18446744073709560132 -18446744073709563669 -> 6392
  *48 18446744073709560928 -18446744073709589229 -> 6402
  *48 18446744073709560928 -18446744073709562217 -> 579
  else -> 0
}
$good_state -> {
  *146 -> true
  *51 -> true
  else -> true
}
$writes_at -> {
  83 -> *87
  else -> *87
}
$is_claimable -> {
  *27 -> true
  *20 -> false
  *86 -> false
  *84 -> false
  *54 -> false
  *85 -> false
  *69 -> false
  *79 -> false
  *74 -> false
  *24 -> false
  *18 -> false
  *48 -> false
  *26 -> false
  *45 -> false
  *30 -> false
  *59 -> false
  *55 -> false
  *10 -> false
  *2 -> false
  *36 -> false
  *19 -> false
  *34 -> false
  *15 -> false
  *16 -> false
  *83 -> false
  *35 -> false
  else -> false
}
$is_sequential_field -> {
  *114 -> true
  *115 -> true
  *98 -> true
  *105 -> false
  *101 -> false
  *103 -> false
  else -> true
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
int_div -> {
  12684 2 -> 6342
  else -> 6342
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$phys_ptr_cast -> {
  *39 *69 -> *90
  *90 *69 -> *90
  *91 *69 -> *91
  else -> *90
}
$prim_emb -> {
  *90 -> *142
  else -> *142
}
$thread_local -> {
  *51 *91 -> false
  else -> false
}
$vs_state -> {
  *38 -> *146
  else -> *146
}
$is_proper_field -> {
  *96 -> true
  *97 -> true
  *98 -> true
  *114 -> true
  *115 -> true
  *116 -> true
  *117 -> true
  *105 -> false
  *107 -> true
  else -> true
}
$field -> {
  *29 -> *96
  *33 -> *97
  *7 -> *96
  *77 -> *94
  *68 -> *98
  *91 -> *105
  *90 -> *103
  *39 -> *99
  *142 -> *107
  else -> *96
}
$current_timestamp -> {
  *51 -> 83
  else -> 83
}
$file_name_is -> {
  1 *89 -> true
  else -> true
}
$field_kind -> {
  *98 -> *70
  *96 -> *70
  *97 -> *70
  *114 -> *5
  *115 -> *5
  *116 -> *5
  *117 -> *5
  *105 -> *250
  *101 -> *250
  *107 -> *70
  *103 -> *250
  else -> *5
}
$as_composite_field -> {
  *96 -> *96
  *97 -> *97
  *107 -> *107
  else -> *96
}
$field_arr_ctor -> {
  *101 5609 -> *103
  *101 12362 -> *105
  else -> *103
}
$f_owns -> {
  *27 -> *114
  *20 -> *115
  *86 -> *116
  *84 -> *117
  else -> *114
}
$ptr -> {
  *98 0 -> *68
  *94 18446744073709553513 -> *77
  *96 824 -> *29
  *97 2658 -> *33
  *96 361 -> *7
  *103 18446744073709560928 -> *90
  *99 18446744073709560132 -> *39
  *105 18446744073709560928 -> *91
  *107 18446744073709560928 -> *142
  else -> *68
}
$field_arr_size -> {
  *105 -> 5609
  *101 -> 5609
  *103 -> 5609
  else -> 5609
}
$good_state_ext -> {
  *81 *51 -> true
  *58 *51 -> true
  else -> true
}
$type_branch -> {
  *54 -> *13
  *85 -> *13
  *69 -> *13
  *79 -> *13
  *74 -> *13
  *24 -> *13
  *18 -> *13
  *48 -> *13
  *26 -> *13
  *45 -> *13
  *30 -> *13
  *59 -> *13
  *55 -> *13
  *10 -> *13
  *2 -> *13
  *27 -> *13
  *20 -> *13
  *36 -> *13
  *19 -> *13
  *34 -> *13
  *15 -> *13
  *16 -> *13
  *86 -> *13
  *84 -> *13
  *83 -> *13
  *35 -> *13
  else -> *13
}
$idx_inline_prim -> {
  *90 6753 -> *91
  else -> *91
}
$in_range_t -> {
  *18 4294967296 -> false
  *18 0 -> true
  *48 18446744073709551616 -> false
  *48 0 -> true
  *18 -1 -> false
  *18 4294967295 -> true
  *48 -1 -> false
  *48 18446744073709551615 -> true
  *48 -9993 -> false
  *48 824 -> true
  *48 2658 -> true
  *48 361 -> true
  *18 4 -> true
  *48 -3537 -> false
  *48 6392 -> true
  *48 -28301 -> false
  *48 6402 -> true
  *48 -1289 -> false
  *48 579 -> true
  else -> true
}
$spec_ptr_cast -> {
  *29 *86 -> *29
  *33 *84 -> *33
  *7 *86 -> *7
  else -> *29
}
$invok_state -> {
  *51 -> true
  else -> true
}
$sizeof -> {
  *54 -> 1
  *85 -> 2
  *69 -> 4
  *79 -> 8
  *74 -> 1
  *24 -> 2
  *18 -> 4
  *48 -> 8
  *26 -> 4
  *45 -> 8
  *30 -> 1
  *59 -> 1
  *55 -> 1
  *10 -> 1
  *2 -> 1
  *27 -> 1
  *20 -> 1
  *36 -> 1
  *19 -> 1
  *34 -> 1
  *15 -> 1
  *16 -> 1
  *86 -> 1
  *84 -> 1
  *83 -> 1
  *35 -> 1
  else -> 1
}
$field_type -> {
  *94 -> *27
  *96 -> *86
  *97 -> *84
  *98 -> *59
  *114 -> *34
  *115 -> *34
  *116 -> *34
  *117 -> *34
  *103 -> *69
  *101 -> *69
  *105 -> *69
  *107 -> *141
  else -> *34
}
$in_range_spec_ptr -> {
  *29 -> true
  *33 -> true
  *7 -> true
  *142 -> false
  else -> true
}
$full_stop -> {
  *51 -> true
  else -> true
}
$f_root -> {
  *59 -> *98
  *86 -> *96
  *84 -> *97
  *141 -> *107
  else -> *98
}
$field_arr_index -> {
  *103 -> 5609
  *105 -> 12362
  else -> 5609
}
$call_transition -> {
  *51 *51 -> true
  else -> true
}
$field_parent_type -> {
  *96 -> *86
  *97 -> *84
  *98 -> *76
  *114 -> *27
  *115 -> *20
  *116 -> *86
  *117 -> *84
  *105 -> *141
  *101 -> *141
  *103 -> *141
  *107 -> *141
  else -> *141
}
$as_field_with_type -> {
  *98 *59 -> *98
  *96 *86 -> *96
  *97 *84 -> *97
  *114 *34 -> *114
  *115 *34 -> *115
  *116 *34 -> *116
  *117 *34 -> *117
  *103 *69 -> *103
  *105 *69 -> *105
  *107 *141 -> *107
  else -> *98
}
$is_ghost_field -> {
  *114 -> true
  *115 -> true
  *116 -> true
  *117 -> true
  *105 -> false
  else -> true
}
$modifies -> {
  *51 *51 *49 -> true
  else -> true
}
$base -> {
  *68 -> 0
  *29 -> 824
  *33 -> 2658
  *7 -> 361
  *77 -> 18446744073709553513
  *90 -> 18446744073709560928
  *39 -> 18446744073709560132
  *91 -> 18446744073709560928
  *142 -> 18446744073709560928
  else -> 18446744073709560928
}
$as_in_range_t -> {
  *54 -> *54
  *85 -> *85
  *69 -> *69
  *79 -> *79
  *74 -> *74
  *24 -> *24
  *18 -> *18
  *48 -> *48
  *19 -> *19
  else -> *54
}
*** STATE <initial>
  $s -> *51
  $cev_pc -> **$cev_pc
  P#val -> 911
  P#arr -> *39
  P#len -> 6754
  $result -> **@@undefined@@17962213@@
  ite#1 -> **@@undefined@@36922171@@
  loopState#0 -> **loopState#0
  L#low -> 974
  L#high -> 0
  L#mid -> 452
  #wrTime$1^4.1 -> 83
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(4,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(11,13)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(6,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(6,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(6,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(7,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(7,12)
  L#low -> 0
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(8,3) : before loop
  loopState#0 -> *51
  L#high -> 6754
*** END_STATE
*** STATE <no file>(0,0)
  L#low -> 6753
  L#high -> 5931
  L#mid -> 0
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(8,3)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(8,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(15,7)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(15,7)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\BinarySearch.c(15,20)
*** END_STATE
*** END_MODEL
