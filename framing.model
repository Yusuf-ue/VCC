*** MODEL
%lbl%+35526 -> true
$position_marker -> true
%lbl%+603 -> true
%lbl%@35817 -> false
#wrTime$1^31.1 -> 162
#tok$1^10.1 -> *3
unique-value!81 -> *4
^^null_type -> *5
$max.i8 -> 9223372036854775807
cev_global -> *7
$fk_owns -> *8
P#x@@0 -> *9
$fk_emb_array -> *10
^$#_onexit_t#4 -> *11
unique-value!79 -> *12
$untyped_owner_owner -> *13
$max.u4 -> 4294967295
$fk_ref_cnt -> *15
^^field -> *16
$max.u2 -> 65535
loop_entered -> *18
unique-value!59 -> *19
$ctype_flat -> *20
$fk_as_array_first -> *21
unique-value!56 -> *22
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Cframing.c -> *23
unique-value!67 -> *24
^$#state_t -> *25
^$#struct -> *26
^$#seq_version -> *27
^^u4 -> *28
^^nat -> *29
^$#volatile_version_t -> *30
$ctype_blob -> *31
$max.i2 -> 32767
unique-value!72 -> *33
unique-value!75 -> *34
unique-value!90 -> *35
^^u2 -> *36
$min.i8 -> -9223372036854775808
unique-value!85 -> *38
^^f4 -> *39
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *40
^^claim -> *41
$max.i4 -> 2147483647
$decreases_level -> 2147483647
$me -> *43
^^bool -> *44
$max.i1 -> 127
cev_parameter -> *46
unique-value!55 -> *47
P#y -> *48
$untyped_owner -> *49
unique-value!63 -> *50
unique-value!74 -> *51
^$#ptrset -> *52
^$##club -> *53
^^mathint -> *54
#tok$1^31.1 -> *55
unique-value!66 -> *56
call541formal@P#x@0 -> *57
unique-value!60 -> *58
$arch_ptr_size -> 8
$struct_zero -> *60
unique-value!80 -> *61
unique-value!88 -> *62
unique-value!84 -> *63
^$#_invalid_parameter_handler#7 -> *64
$min.i1 -> -128
unique-value!61 -> *66
conditional_moment -> *67
unique-value!65 -> *68
^^f8 -> *69
unique-value!87 -> *70
#tok$1^36.3 -> *71
unique-value!89 -> *72
$fk_base -> *73
^^u8 -> *74
$arch_ptr_type -> *74
$set_empty -> *75
lambda@13 -> *75
$ctype_ptr -> *76
unique-value!82 -> *77
$fk_vol_version -> *78
$s -> *79
$max.u1 -> 255
^^i1 -> *81
^^object -> *82
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
$ctype_spec_ptr -> *84
unique-value!58 -> *85
unique-value!62 -> *86
^^void -> *87
unique-value!70 -> *88
^$#framing.c..36689#5 -> *89
$fk_active_option -> *90
$ctype_array -> *91
unique-value!77 -> *92
cev_local -> *93
@MV_state_const -> 74
$s@0@@0 -> *95
$ctype_map -> *96
loop_register -> *97
$null -> *98
^^i4 -> *99
$fk_allocation_root -> *100
unique-value!68 -> *101
unique-value!57 -> *102
loop_exited -> *103
$min.i2 -> -32768
cev_implicit -> *105
#tok$1^18.5 -> *106
lambda@21 -> *107
^^u1 -> *108
$primitive_emb_type -> *109
unique-value!71 -> *110
$no_claim -> *111
lambda@20 -> *112
took_else_branch -> *113
^^i8 -> *114
took_then_branch -> *115
unique-value!76 -> *116
unique-value!83 -> *117
^$##thread_id -> *118
$min.i4 -> -2147483648
unique-value!64 -> *120
unique-value!69 -> *121
$untyped_owner_type -> *122
^^i2 -> *123
^$#thread_id_t -> *124
^$#framing.c..36585#3 -> *125
unique-value!73 -> *126
^$#vol_version -> *127
unique-value!86 -> *128
^$#_purecall_handler#6 -> *129
unique-value!78 -> *130
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *131
$cev_pc -> **$cev_pc
#stackframe -> **#stackframe
$cev_pc@0 -> **$cev_pc@0
$field_offset -> {
  *132 -> -18446744073709566960
  *134 -> 0
  *136 -> 0
  *137 -> 0
  *138 -> 0
  *139 -> -18446744073709560181
  *141 -> -18446744073709559937
  *143 -> -18446744073709561712
  else -> 0
}
$addr0 -> {
  *98 -> 0
  *111 -> 0
  *43 -> 824
  *49 -> 6322
  *13 -> 361
  *9 -> 9092
  *57 -> 112
  *48 -> 992
  *151 -> 126
  else -> 0
}
$is_proper -> {
  *43 -> true
  *49 -> true
  *13 -> true
  *57 -> true
  *151 -> true
  else -> true
}
$field_arr_root -> {
  *137 -> *137
  *134 -> *134
  *136 -> *136
  *153 -> *153
  *154 -> *154
  *155 -> *155
  *156 -> *156
  *138 -> *138
  else -> *137
}
$heap -> {
  *79 -> *157
  *95 -> *158
  else -> *157
}
$in_range_phys_ptr -> {
  *57 -> true
  else -> true
}
$is_volatile_field -> {
  *155 -> true
  *156 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 5 -> true
  else -> true
}
$is_phys_field -> {
  *143 -> true
  else -> true
}
Select_[$ptr]$bool -> {
  *164 *151 -> false
  *112 *57 -> true
  *107 *57 -> true
  else -> true
}
$function_entry -> {
  *79 -> true
  else -> true
}
$f_owner -> {
  *79 -> *165
  else -> *165
}
Select_[$ptr]$ptr -> {
  *166 *151 -> *151
  *165 *151 -> *43
  else -> *151
}
$trans_call_transition -> {
  *79 *95 -> true
  else -> true
}
$unchecked -> {
  *28 4294967296 -> 0
  *74 18446744073709551616 -> 0
  *28 -1 -> 4294967295
  *74 -1 -> 18446744073709551615
  *74 0 -> 0
  *74 -7231 -> 0
  *74 824 -> 824
  *74 6322 -> 6322
  *74 361 -> 361
  *74 -2089 -> 9092
  *74 -5905 -> 112
  *74 -750 -> 992
  *74 18446744073709555807 -> 126
  else -> 0
}
$set_cardinality -> {
  *75 -> 0
  else -> 0
}
$is_primitive -> {
  *81 -> true
  *123 -> true
  *99 -> true
  *114 -> true
  *108 -> true
  *36 -> true
  *28 -> true
  *74 -> true
  *39 -> true
  *69 -> true
  *44 -> true
  *87 -> true
  *82 -> true
  *16 -> true
  *5 -> true
  *41 -> false
  *30 -> false
  *54 -> true
  *29 -> true
  *52 -> true
  *25 -> true
  *26 -> true
  *124 -> false
  *122 -> false
  *118 -> true
  *53 -> true
  *40 -> true
  *131 -> true
  *125 -> true
  *11 -> true
  *89 -> true
  *129 -> true
  *64 -> true
  *109 -> false
  *175 -> false
  else -> true
}
$as_primitive_field -> {
  *137 -> *137
  *153 -> *153
  *154 -> *154
  *155 -> *155
  *156 -> *156
  else -> *137
}
$set_in_pos -> {
  *57 *112 -> true
  *57 *107 -> true
  else -> true
}
$dot -> {
  *151 *143 -> *57
  else -> *57
}
$is_math_type -> {
  *82 -> true
  *16 -> true
  *5 -> true
  *54 -> true
  *29 -> true
  *52 -> true
  *25 -> true
  *26 -> true
  *118 -> true
  *53 -> true
  else -> true
}
$unchk_add -> {
  *74 0 0 -> 0
  *74 18446744073709559729 -18446744073709566960 -> 0
  *74 824 0 -> 824
  *74 6322 0 -> 6322
  *74 361 0 -> 361
  *74 18446744073709558092 -18446744073709560181 -> 9092
  *74 18446744073709559187 -18446744073709559937 -> 992
  *74 18446744073709555807 -18446744073709561712 -> 112
  *74 18446744073709555807 0 -> 126
  else -> 0
}
$good_state -> {
  *179 -> true
  *79 -> true
  *95 -> true
  else -> true
}
$writes_at -> {
  162 -> *112
  else -> *112
}
Select_[$field][$ptr]$int -> {
  *157 *143 -> *180
  *158 *143 -> *181
  else -> *180
}
$is_claimable -> {
  *41 -> true
  *30 -> false
  *124 -> false
  *122 -> false
  *81 -> false
  *123 -> false
  *99 -> false
  *114 -> false
  *108 -> false
  *36 -> false
  *28 -> false
  *74 -> false
  *39 -> false
  *69 -> false
  *44 -> false
  *87 -> false
  *82 -> false
  *16 -> false
  *5 -> false
  *54 -> false
  *29 -> false
  *52 -> false
  *25 -> false
  *26 -> false
  *118 -> false
  *53 -> false
  *40 -> false
  *131 -> false
  *125 -> false
  *11 -> false
  *89 -> false
  *129 -> false
  *64 -> false
  else -> false
}
$is_sequential_field -> {
  *153 -> true
  *154 -> true
  *137 -> true
  *155 -> false
  else -> true
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$in_writes_at -> {
  162 *57 -> true
  else -> true
}
$phys_ptr_cast -> {
  *9 *99 -> *57
  *48 *99 -> *57
  *57 *99 -> *57
  else -> *57
}
$prim_emb -> {
  *57 -> *151
  else -> *151
}
$owner -> {
  *79 *151 -> *43
  else -> *43
}
$vs_state -> {
  *60 -> *179
  else -> *179
}
$is_proper_field -> {
  *134 -> true
  *136 -> true
  *137 -> true
  *153 -> true
  *154 -> true
  *155 -> true
  *156 -> true
  *138 -> true
  *143 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *109 -> *47
  *81 -> *22
  *123 -> *102
  *99 -> *85
  *114 -> *19
  *108 -> *58
  *36 -> *66
  *28 -> *86
  *74 -> *50
  *87 -> *120
  *44 -> *68
  *39 -> *56
  *69 -> *24
  *82 -> *101
  *16 -> *121
  *5 -> *88
  *41 -> *110
  *54 -> *33
  *29 -> *126
  *52 -> *51
  *25 -> *34
  *30 -> *116
  *26 -> *92
  *27 -> *130
  *127 -> *12
  *124 -> *61
  *122 -> *4
  *118 -> *77
  *53 -> *117
  *40 -> *63
  *131 -> *38
  *125 -> *128
  *11 -> *70
  *89 -> *62
  *129 -> *72
  *64 -> *35
  else -> *47
}
$instantiate_int -> {
  1 -> true
  else -> true
}
$field -> {
  *43 -> *134
  *49 -> *136
  *13 -> *134
  *111 -> *132
  *98 -> *137
  *57 -> *143
  *9 -> *139
  *48 -> *141
  *151 -> *138
  else -> *134
}
$current_timestamp -> {
  *79 -> 162
  *95 -> 258
  else -> 162
}
$f_timestamp -> {
  *79 -> *297
  else -> *297
}
$file_name_is -> {
  1 *23 -> true
  else -> true
}
$field_kind -> {
  *137 -> *100
  *134 -> *100
  *136 -> *100
  *153 -> *8
  *154 -> *8
  *155 -> *8
  *156 -> *8
  *138 -> *100
  else -> *8
}
$as_composite_field -> {
  *134 -> *134
  *136 -> *136
  *138 -> *138
  else -> *134
}
$closed -> {
  *79 *151 -> false
  else -> false
}
$f_owns -> {
  *41 -> *153
  *30 -> *154
  *124 -> *155
  *122 -> *156
  else -> *153
}
$ptr -> {
  *137 0 -> *98
  *132 18446744073709559729 -> *111
  *134 824 -> *43
  *136 6322 -> *49
  *134 361 -> *13
  *138 18446744073709555807 -> *151
  *143 18446744073709555807 -> *57
  *139 18446744073709558092 -> *9
  *141 18446744073709559187 -> *48
  else -> *98
}
$good_state_ext -> {
  *55 *79 -> true
  *71 *95 -> true
  else -> true
}
$type_branch -> {
  *81 -> *20
  *123 -> *20
  *99 -> *20
  *114 -> *20
  *108 -> *20
  *36 -> *20
  *28 -> *20
  *74 -> *20
  *39 -> *20
  *69 -> *20
  *44 -> *20
  *87 -> *20
  *82 -> *20
  *16 -> *20
  *5 -> *20
  *41 -> *20
  *30 -> *20
  *54 -> *20
  *29 -> *20
  *52 -> *20
  *25 -> *20
  *26 -> *20
  *124 -> *20
  *122 -> *20
  *118 -> *20
  *53 -> *20
  *40 -> *20
  *131 -> *20
  *125 -> *20
  *11 -> *20
  *89 -> *20
  *129 -> *20
  *64 -> *20
  else -> *20
}
$maybe_emb -> {
  *57 -> *151
  *151 -> *151
  else -> *151
}
$in_range_t -> {
  *28 4294967296 -> false
  *28 0 -> true
  *74 18446744073709551616 -> false
  *74 0 -> true
  *28 -1 -> false
  *28 4294967295 -> true
  *74 -1 -> false
  *74 18446744073709551615 -> true
  *74 -7231 -> false
  *74 824 -> true
  *74 6322 -> true
  *74 361 -> true
  *99 1 -> true
  *74 -2089 -> false
  *74 9092 -> true
  *74 -5905 -> false
  *74 -750 -> false
  *74 992 -> true
  *74 112 -> true
  *74 18446744073709555807 -> false
  *74 126 -> true
  *99 2 -> true
  else -> true
}
$spec_ptr_cast -> {
  *43 *124 -> *43
  *49 *122 -> *49
  *13 *124 -> *13
  else -> *43
}
$invok_state -> {
  *79 -> true
  *95 -> true
  else -> true
}
$sizeof -> {
  *81 -> 1
  *123 -> 2
  *99 -> 4
  *114 -> 8
  *108 -> 1
  *36 -> 2
  *28 -> 4
  *74 -> 8
  *39 -> 4
  *69 -> 8
  *44 -> 1
  *87 -> 1
  *82 -> 1
  *16 -> 1
  *5 -> 1
  *41 -> 1
  *30 -> 1
  *54 -> 1
  *29 -> 1
  *52 -> 1
  *25 -> 1
  *26 -> 1
  *124 -> 1
  *122 -> 1
  *118 -> 1
  *53 -> 1
  *40 -> 8
  *131 -> 8
  *125 -> 8
  *11 -> 8
  *89 -> 8
  *129 -> 8
  *64 -> 8
  else -> 1
}
$field_type -> {
  *132 -> *41
  *134 -> *124
  *136 -> *122
  *137 -> *87
  *153 -> *52
  *154 -> *52
  *155 -> *52
  *156 -> *52
  *143 -> *99
  *138 -> *175
  else -> *52
}
$in_range_spec_ptr -> {
  *43 -> true
  *49 -> true
  *13 -> true
  *151 -> false
  else -> true
}
$is_fnptr_type -> {
  *40 -> true
  *131 -> true
  *125 -> true
  *11 -> true
  *89 -> true
  *129 -> true
  *64 -> true
  else -> true
}
$f_root -> {
  *87 -> *137
  *124 -> *134
  *122 -> *136
  *175 -> *138
  else -> *137
}
Select_[$ptr]$int -> {
  *180 *151 -> 1
  *181 *151 -> 2
  *297 *151 -> -255
  else -> 1
}
$full_stop -> {
  *79 -> true
  *95 -> true
  else -> true
}
$mutable -> {
  *79 *57 -> true
  *79 *151 -> true
  else -> true
}
$roots -> {
  *79 -> *166
  else -> *166
}
$call_transition -> {
  *79 *95 -> true
  else -> true
}
$f_closed -> {
  *79 -> *164
  else -> *164
}
$field_parent_type -> {
  *134 -> *124
  *136 -> *122
  *137 -> *109
  *153 -> *41
  *154 -> *30
  *155 -> *124
  *156 -> *122
  *143 -> *175
  *138 -> *175
  else -> *124
}
$as_field_with_type -> {
  *137 *87 -> *137
  *134 *124 -> *134
  *136 *122 -> *136
  *153 *52 -> *153
  *154 *52 -> *154
  *155 *52 -> *155
  *156 *52 -> *156
  *143 *99 -> *143
  *138 *175 -> *138
  else -> *137
}
$is_ghost_field -> {
  *153 -> true
  *154 -> true
  *155 -> true
  *156 -> true
  *143 -> false
  else -> true
}
$modifies -> {
  *79 *95 *107 -> true
  else -> true
}
$as_in_range_t -> {
  *81 -> *81
  *123 -> *123
  *99 -> *99
  *114 -> *114
  *108 -> *108
  *36 -> *36
  *28 -> *28
  *74 -> *74
  *29 -> *29
  else -> *81
}
$base -> {
  *98 -> 0
  *43 -> 824
  *49 -> 6322
  *13 -> 361
  *111 -> 18446744073709559729
  *57 -> 18446744073709555807
  *151 -> 18446744073709555807
  *9 -> 18446744073709558092
  *48 -> 18446744073709559187
  else -> 18446744073709555807
}
*** STATE <initial>
  $s -> *79
  $cev_pc -> **$cev_pc
  P#x -> *9
  P#y -> *48
  #wrTime$1^31.1 -> 162
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\framing.c(31,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\framing.c(34,12)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\framing.c(36,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\framing.c(36,3)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\framing.c(38,12)
  $s -> *95
  $cev_pc -> **$cev_pc@0
*** END_STATE
*** END_MODEL
