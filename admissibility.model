*** MODEL
%lbl%+996 -> true
%lbl%+37846 -> true
%lbl%+991 -> true
%lbl%+985 -> true
%lbl%+998 -> true
%lbl%+1006 -> true
%lbl%+1000 -> true
%lbl%+1008 -> true
$position_marker -> true
$is_stuttering_check -> false
%lbl%@38482 -> false
$is_unwrap_check -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
^$#_onexit_t#4 -> *9
unique-value!79 -> *10
$untyped_owner_owner -> *11
$max.u4 -> 4294967295
$fk_ref_cnt -> *13
^^field -> *14
$max.u2 -> 65535
loop_entered -> *16
unique-value!59 -> *17
$ctype_flat -> *18
$fk_as_array_first -> *19
unique-value!56 -> *20
P#_this_@@0 -> *21
#tok$1^41.16 -> *22
unique-value!67 -> *23
range.high -> *24
#wrTime$1^12.1 -> 177
^$#state_t -> *26
^$#struct -> *27
^$#seq_version -> *28
^^u4 -> *29
^^nat -> *30
^$#volatile_version_t -> *31
$ctype_blob -> *32
$max.i2 -> 32767
unique-value!72 -> *34
unique-value!75 -> *35
unique-value!90 -> *36
^^u2 -> *37
$min.i8 -> -9223372036854775808
unique-value!85 -> *39
range.low -> *40
^^f4 -> *41
unique-value!92 -> *42
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *43
^^claim -> *44
^rangeRestricted -> *45
$max.i4 -> 2147483647
$me -> *47
^^bool -> *48
$max.i1 -> 127
cev_parameter -> *50
unique-value!55 -> *51
$untyped_owner -> *52
unique-value!63 -> *53
unique-value!74 -> *54
^$#ptrset -> *55
^$##club -> *56
^^mathint -> *57
rangeRestricted.r -> *58
unique-value!66 -> *59
unique-value!60 -> *60
call955formal@p@0 -> *61
$arch_ptr_size -> 8
$struct_zero -> *63
unique-value!80 -> *64
unique-value!88 -> *65
unique-value!84 -> *66
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Cadmissibility.c -> *67
^$#_invalid_parameter_handler#7 -> *68
$min.i1 -> -128
unique-value!61 -> *70
conditional_moment -> *71
unique-value!65 -> *72
^^f8 -> *73
unique-value!87 -> *74
$decreases_level -> 0
unique-value!89 -> *76
$fk_base -> *77
^^u8 -> *78
$arch_ptr_type -> *78
$set_empty -> *79
lambda@13 -> *79
$ctype_ptr -> *80
^$#admissibility.c..36687#5 -> *81
unique-value!82 -> *82
$fk_vol_version -> *83
$s -> *84
$max.u1 -> 255
^^i1 -> *86
^^object -> *87
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
$ctype_spec_ptr -> *89
unique-value!58 -> *90
unique-value!62 -> *91
^^void -> *92
unique-value!70 -> *93
unique-value!93 -> *94
cev_local -> *95
$fk_active_option -> *96
$ctype_array -> *97
unique-value!77 -> *98
@MV_state_const -> 74
$s@0@@0 -> *100
$s@2@@0 -> *100
^$#admissibility.c..36583#3 -> *101
$ctype_map -> *102
loop_register -> *103
$null -> *104
^^i4 -> *105
$fk_allocation_root -> *106
^range -> *107
unique-value!68 -> *108
unique-value!57 -> *109
loop_exited -> *110
$min.i2 -> -32768
cev_implicit -> *112
^^u1 -> *113
$primitive_emb_type -> *114
unique-value!71 -> *115
$no_claim -> *116
lambda@20 -> *117
took_else_branch -> *118
^^i8 -> *119
took_then_branch -> *120
#tok$1^4.1 -> *121
#tok$1^43.5 -> *122
unique-value!76 -> *123
unique-value!83 -> *124
^$##thread_id -> *125
$min.i4 -> -2147483648
unique-value!64 -> *127
unique-value!69 -> *128
#tok$1^27.1 -> *129
rangeRestricted.x -> *130
#tok$1^12.1 -> *131
$untyped_owner_type -> *132
^^i2 -> *133
^$#thread_id_t -> *134
unique-value!91 -> *135
unique-value!73 -> *136
^$#vol_version -> *137
unique-value!86 -> *138
^$#_purecall_handler#6 -> *139
unique-value!78 -> *140
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *141
$cev_pc -> **$cev_pc
#stackframe -> **#stackframe
$ptr_to -> {
  *107 -> *5
  else -> *5
}
$is_volatile_field -> {
  *142 -> true
  *143 -> true
  else -> true
}
$is_phys_field -> {
  *40 -> true
  *24 -> true
  *130 -> true
  *58 -> true
  *144 -> true
  *145 -> true
  else -> true
}
$ptr -> {
  *146 0 -> *104
  *147 18446744073709558651 -> *116
  *149 824 -> *47
  *151 2296 -> *52
  *149 361 -> *11
  *154 18446744073709551617 -> *21
  *144 175 -> *61
  *157 18446744073709560579 -> *159
  *145 136 -> *161
  else -> *104
}
$closed -> {
  *84 *61 -> true
  *100 *61 -> true
  else -> true
}
$addr0 -> {
  *104 -> 0
  *116 -> 0
  *47 -> 824
  *52 -> 2296
  *11 -> 361
  *61 -> 175
  *21 -> 175
  *161 -> 136
  *159 -> 136
  else -> 0
}
$is_proper -> {
  *47 -> true
  *52 -> true
  *11 -> true
  *61 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *61 -> true
  *161 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  else -> true
}
$current_timestamp -> {
  *84 -> 177
  *100 -> 743
  else -> 177
}
$as_primitive_field -> {
  *40 -> *40
  *24 -> *24
  *130 -> *130
  *58 -> *58
  *146 -> *146
  *169 -> *169
  *170 -> *170
  *142 -> *142
  *143 -> *143
  *171 -> *171
  *172 -> *172
  else -> *40
}
$f_timestamp -> {
  *84 -> *173
  *100 -> *174
  else -> *173
}
Select_[$ptr]$int -> {
  *175 *61 -> 75
  *177 *161 -> 7247
  *179 *61 -> 7246
  *181 *61 -> 7246
  *182 *61 -> 75
  *183 *161 -> 7246
  *173 *61 -> 84
  *174 *61 -> 84
  *185 *61 -> 85
  *187 *61 -> 85
  *188 *161 -> -880
  else -> 7246
}
$unchecked -> {
  *29 4294967296 -> 0
  *78 18446744073709551616 -> 0
  *29 -1 -> 4294967295
  *78 -1 -> 18446744073709551615
  *78 0 -> 0
  *78 -5781 -> 0
  *78 824 -> 824
  *78 2296 -> 2296
  *78 361 -> 361
  *78 -8114 -> 175
  *78 175 -> 175
  *78 -9589 -> 136
  *78 136 -> 136
  else -> 0
}
$spans_the_same_no_timestamp -> {
  *84 *100 *61 *45 -> true
  else -> true
}
$is_primitive -> {
  *86 -> true
  *133 -> true
  *105 -> true
  *119 -> true
  *113 -> true
  *37 -> true
  *29 -> true
  *78 -> true
  *41 -> true
  *73 -> true
  *48 -> true
  *92 -> true
  *87 -> true
  *14 -> true
  *3 -> true
  *44 -> false
  *31 -> false
  *57 -> true
  *30 -> true
  *55 -> true
  *26 -> true
  *27 -> true
  *134 -> false
  *132 -> false
  *125 -> true
  *56 -> true
  *107 -> false
  *45 -> false
  *5 -> true
  *43 -> true
  *141 -> true
  *101 -> true
  *9 -> true
  *81 -> true
  *139 -> true
  *68 -> true
  *114 -> false
  else -> true
}
$spans_the_same -> {
  *84 *100 *61 *45 -> true
  else -> true
}
$as_field_with_type -> {
  *40 *105 -> *40
  *24 *105 -> *24
  *130 *105 -> *130
  *58 *5 -> *58
  *146 *92 -> *146
  *149 *134 -> *149
  *151 *132 -> *151
  *169 *55 -> *169
  *170 *55 -> *170
  *142 *55 -> *142
  *143 *55 -> *143
  *171 *55 -> *171
  *172 *55 -> *172
  *144 *45 -> *144
  *145 *107 -> *145
  else -> *40
}
$is -> {
  *61 *45 -> true
  else -> true
}
$invok_state -> {
  *84 -> true
  else -> true
}
$is_sequential_field -> {
  *169 -> true
  *170 -> true
  *171 -> true
  *40 -> true
  *24 -> true
  *172 -> true
  *130 -> true
  *58 -> true
  *146 -> true
  else -> true
}
$is_math_type -> {
  *87 -> true
  *14 -> true
  *3 -> true
  *57 -> true
  *30 -> true
  *55 -> true
  *26 -> true
  *27 -> true
  *125 -> true
  *56 -> true
  else -> true
}
$file_name_is -> {
  1 *67 -> true
  else -> true
}
$unchk_add -> {
  *78 0 0 -> 0
  *78 18446744073709558651 -18446744073709564432 -> 0
  *78 824 0 -> 824
  *78 2296 0 -> 2296
  *78 361 0 -> 361
  *78 18446744073709551617 -18446744073709559731 -> 175
  *78 175 0 -> 175
  *78 18446744073709560579 -18446744073709570168 -> 136
  *78 136 0 -> 136
  else -> 0
}
$full_stop -> {
  *84 -> true
  else -> true
}
$writes_at -> {
  177 -> *117
  else -> *117
}
$call_transition -> {
  *84 *100 -> true
  else -> true
}
$set_cardinality -> {
  *79 -> 0
  else -> 0
}
$is_claimable -> {
  *44 -> true
  *31 -> false
  *134 -> false
  *132 -> false
  *107 -> false
  *45 -> false
  *86 -> false
  *133 -> false
  *105 -> false
  *119 -> false
  *113 -> false
  *37 -> false
  *29 -> false
  *78 -> false
  *41 -> false
  *73 -> false
  *48 -> false
  *92 -> false
  *87 -> false
  *14 -> false
  *3 -> false
  *57 -> false
  *30 -> false
  *55 -> false
  *26 -> false
  *27 -> false
  *125 -> false
  *56 -> false
  *43 -> false
  *141 -> false
  *101 -> false
  *9 -> false
  *81 -> false
  *139 -> false
  *68 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *40 -> true
  *24 -> true
  *130 -> true
  *58 -> true
  *149 -> true
  *151 -> true
  *146 -> true
  *169 -> true
  *170 -> true
  *142 -> true
  *143 -> true
  *171 -> true
  *172 -> true
  *144 -> true
  *145 -> true
  else -> true
}
$admissibility_start -> {
  *61 *45 -> true
  else -> true
}
$f_closed -> {
  *84 -> *199
  *100 -> *200
  else -> *199
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *314 *40 -> *177
  *314 *58 -> *175
  *314 *130 -> *179
  *315 *130 -> *181
  *315 *40 -> *188
  *315 *58 -> *182
  *315 *24 -> *183
  *314 *172 -> *185
  *315 *172 -> *187
  else -> *177
}
$field_kind -> {
  *40 -> *77
  *24 -> *77
  *130 -> *77
  *58 -> *77
  *146 -> *106
  *149 -> *106
  *151 -> *106
  *169 -> *6
  *170 -> *6
  *142 -> *6
  *143 -> *6
  *171 -> *6
  *172 -> *6
  *144 -> *106
  *145 -> *106
  else -> *6
}
Select_[$ptr]$bool -> {
  *199 *61 -> true
  *200 *61 -> true
  else -> true
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *149 -> *149
  *151 -> *151
  *144 -> *144
  *145 -> *145
  else -> *149
}
$phys_ptr_cast -> {
  *21 *45 -> *61
  *159 *107 -> *161
  *61 *45 -> *61
  *161 *107 -> *161
  else -> *61
}
$vs_state -> {
  *63 -> *316
  else -> *316
}
$trans_call_transition -> {
  *84 *100 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *114 -> *51
  *86 -> *20
  *133 -> *109
  *105 -> *90
  *119 -> *17
  *113 -> *60
  *37 -> *70
  *29 -> *91
  *78 -> *53
  *92 -> *127
  *48 -> *72
  *41 -> *59
  *73 -> *23
  *87 -> *108
  *14 -> *128
  *3 -> *93
  *44 -> *115
  *57 -> *34
  *30 -> *136
  *55 -> *54
  *26 -> *35
  *31 -> *123
  *27 -> *98
  *28 -> *140
  *137 -> *10
  *134 -> *64
  *132 -> *2
  *125 -> *82
  *56 -> *124
  *107 -> *66
  *45 -> *39
  *43 -> *138
  *141 -> *74
  *101 -> *65
  *9 -> *76
  *81 -> *36
  *139 -> *135
  *68 -> *42
  *5 -> *94
  else -> *51
}
$instantiate_int -> {
  85 -> true
  -880 -> true
  7246 -> true
  75 -> true
  else -> true
}
$field -> {
  *47 -> *149
  *52 -> *151
  *11 -> *149
  *116 -> *147
  *104 -> *146
  *61 -> *144
  *21 -> *154
  *161 -> *145
  *159 -> *157
  else -> *149
}
$heap -> {
  *100 -> *314
  *84 -> *315
  else -> *314
}
$f_owns -> {
  *44 -> *169
  *31 -> *170
  *134 -> *142
  *132 -> *143
  *107 -> *171
  *45 -> *172
  else -> *169
}
$field_type -> {
  *147 -> *44
  *40 -> *105
  *24 -> *105
  *130 -> *105
  *58 -> *5
  *149 -> *134
  *151 -> *132
  *146 -> *92
  *169 -> *55
  *170 -> *55
  *142 -> *55
  *143 -> *55
  *171 -> *55
  *172 -> *55
  *144 -> *45
  *145 -> *107
  else -> *55
}
$has_field_at0 -> {
  *107 *40 -> true
  *45 *130 -> true
  else -> true
}
$function_entry -> {
  *84 -> true
  else -> true
}
$good_state_ext -> {
  *131 *84 -> true
  *131 *100 -> true
  else -> true
}
$set_eq -> {
  *79 *79 -> true
  else -> true
}
$type_project_0 -> {
  *5 -> *107
  else -> *107
}
$type_branch -> {
  *86 -> *18
  *133 -> *18
  *105 -> *18
  *119 -> *18
  *113 -> *18
  *37 -> *18
  *29 -> *18
  *78 -> *18
  *41 -> *18
  *73 -> *18
  *48 -> *18
  *92 -> *18
  *87 -> *18
  *14 -> *18
  *3 -> *18
  *44 -> *18
  *31 -> *18
  *57 -> *18
  *30 -> *18
  *55 -> *18
  *26 -> *18
  *27 -> *18
  *134 -> *18
  *132 -> *18
  *125 -> *18
  *56 -> *18
  *107 -> *18
  *45 -> *18
  *43 -> *18
  *141 -> *18
  *101 -> *18
  *9 -> *18
  *81 -> *18
  *139 -> *18
  *68 -> *18
  *5 -> *80
  else -> *18
}
$set_in_pos -> {
  *61 *199 -> true
  *61 *200 -> true
  else -> true
}
$in_range_t -> {
  *29 4294967296 -> false
  *29 0 -> true
  *78 18446744073709551616 -> false
  *78 0 -> true
  *29 -1 -> false
  *29 4294967295 -> true
  *78 -1 -> false
  *78 18446744073709551615 -> true
  *78 -5781 -> false
  *78 824 -> true
  *78 2296 -> true
  *78 361 -> true
  *78 -8114 -> false
  *78 175 -> true
  *105 7247 -> true
  *105 7246 -> true
  *105 -880 -> true
  *78 -9589 -> false
  *78 136 -> true
  else -> true
}
$spec_ptr_cast -> {
  *47 *134 -> *47
  *52 *132 -> *52
  *11 *134 -> *11
  else -> *47
}
$is_union_type -> {
  *107 -> false
  *45 -> false
  else -> false
}
$field_parent_type -> {
  *40 -> *107
  *24 -> *107
  *130 -> *45
  *58 -> *45
  *149 -> *134
  *151 -> *132
  *146 -> *114
  *169 -> *44
  *170 -> *31
  *142 -> *134
  *143 -> *132
  *171 -> *107
  *172 -> *45
  *144 -> *45
  *145 -> *107
  else -> *45
}
$sizeof -> {
  *86 -> 1
  *133 -> 2
  *105 -> 4
  *119 -> 8
  *113 -> 1
  *37 -> 2
  *29 -> 4
  *78 -> 8
  *41 -> 4
  *73 -> 8
  *48 -> 1
  *92 -> 1
  *87 -> 1
  *14 -> 1
  *3 -> 1
  *44 -> 1
  *31 -> 1
  *57 -> 1
  *30 -> 1
  *55 -> 1
  *26 -> 1
  *27 -> 1
  *134 -> 1
  *132 -> 1
  *125 -> 1
  *56 -> 1
  *107 -> 8
  *45 -> 16
  *43 -> 8
  *141 -> 8
  *101 -> 8
  *9 -> 8
  *81 -> 8
  *139 -> 8
  *68 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *169 -> true
  *170 -> true
  *142 -> true
  *143 -> true
  *171 -> true
  *172 -> true
  else -> true
}
$in_range_spec_ptr -> {
  *47 -> true
  *52 -> true
  *11 -> true
  else -> true
}
$is_fnptr_type -> {
  *43 -> true
  *141 -> true
  *101 -> true
  *9 -> true
  *81 -> true
  *139 -> true
  *68 -> true
  else -> true
}
$f_root -> {
  *92 -> *146
  *134 -> *149
  *132 -> *151
  *45 -> *144
  *107 -> *145
  else -> *146
}
$int_to_ptr -> {
  75 -> *159
  else -> *159
}
$owns -> {
  *84 *61 -> *79
  *100 *61 -> *79
  else -> *79
}
$int_to_ptrset -> {
  85 -> *79
  else -> *79
}
$inv2_without_lemmas -> {
  *84 *84 *61 *45 -> true
  else -> true
}
$is_span_sequential -> {
  *107 -> true
  *45 -> true
  else -> true
}
$good_for_admissibility -> {
  *84 -> true
  else -> true
}
$good_state -> {
  *316 -> true
  *100 -> true
  *84 -> true
  else -> true
}
$good_for_post_admissibility -> {
  *100 -> true
  else -> true
}
$field_offset -> {
  *40 -> 0
  *24 -> 4
  *130 -> 0
  *58 -> 8
  *147 -> -18446744073709564432
  *149 -> 0
  *151 -> 0
  *146 -> 0
  *154 -> -18446744073709559731
  *144 -> 0
  *145 -> 0
  *157 -> -18446744073709570168
  else -> 0
}
$base -> {
  *104 -> 0
  *47 -> 824
  *52 -> 2296
  *11 -> 361
  *116 -> 18446744073709558651
  *61 -> 175
  *21 -> 18446744073709551617
  *161 -> 136
  *159 -> 18446744073709560579
  else -> 0
}
$as_in_range_t -> {
  *86 -> *86
  *133 -> *133
  *105 -> *105
  *119 -> *119
  *113 -> *113
  *37 -> *37
  *29 -> *29
  *78 -> *78
  *30 -> *30
  else -> *86
}
$field_arr_root -> {
  *40 -> *40
  *24 -> *24
  *130 -> *130
  *58 -> *58
  *146 -> *146
  *149 -> *149
  *151 -> *151
  *169 -> *169
  *170 -> *170
  *142 -> *142
  *143 -> *143
  *171 -> *171
  *172 -> *172
  *144 -> *144
  *145 -> *145
  else -> *40
}
*** STATE <initial>
  $s -> *84
  $cev_pc -> **$cev_pc
  P#_this_ -> *21
  #wrTime$1^12.1 -> 177
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\admissibility.c(12,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\admissibility.c(12,1)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\admissibility.c(12,1)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\admissibility.c(12,1)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *100
*** END_STATE
*** END_MODEL
*** MODEL
%lbl%+996 -> true
%lbl%+37846 -> true
%lbl%+991 -> true
%lbl%+985 -> true
%lbl%+998 -> true
%lbl%+1006 -> true
%lbl%+1000 -> true
%lbl%+1008 -> true
%lbl%@38482 -> true
$position_marker -> true
$is_stuttering_check -> false
%lbl%@38517 -> false
$is_unwrap_check -> false
unique-value!81 -> *2
^^null_type -> *3
$max.i8 -> 9223372036854775807
#distTp1 -> *5
$fk_owns -> *6
cev_global -> *7
$fk_emb_array -> *8
^$#_onexit_t#4 -> *9
unique-value!79 -> *10
$untyped_owner_owner -> *11
$max.u4 -> 4294967295
$fk_ref_cnt -> *13
^^field -> *14
$max.u2 -> 65535
loop_entered -> *16
unique-value!59 -> *17
$ctype_flat -> *18
$fk_as_array_first -> *19
unique-value!56 -> *20
P#_this_@@0 -> *21
#tok$1^41.16 -> *22
unique-value!67 -> *23
range.high -> *24
#wrTime$1^12.1 -> 177
^$#state_t -> *26
^$#struct -> *27
^$#seq_version -> *28
^^u4 -> *29
^^nat -> *30
^$#volatile_version_t -> *31
$ctype_blob -> *32
$max.i2 -> 32767
unique-value!72 -> *34
unique-value!75 -> *35
unique-value!90 -> *36
^^u2 -> *37
$min.i8 -> -9223372036854775808
unique-value!85 -> *39
range.low -> *40
^^f4 -> *41
unique-value!92 -> *42
^$#_CoreCrtSecureSearchSortCompareFunction#1 -> *43
^^claim -> *44
^rangeRestricted -> *45
$max.i4 -> 2147483647
$me -> *47
^^bool -> *48
$max.i1 -> 127
cev_parameter -> *50
unique-value!55 -> *51
$untyped_owner -> *52
unique-value!63 -> *53
unique-value!74 -> *54
^$#ptrset -> *55
^$##club -> *56
^^mathint -> *57
rangeRestricted.r -> *58
unique-value!66 -> *59
unique-value!60 -> *60
call955formal@p@0 -> *61
$arch_ptr_size -> 8
$struct_zero -> *63
unique-value!80 -> *64
unique-value!88 -> *65
unique-value!84 -> *66
#file^c?3A?5CUsers?5CYusuf?5COneDrive?5CDesktop?5CSommersemester?202022?5CC?20Verification?20module?20?5BVCC?5D?5CCourse?20Material?5CSimpleExamplesExcercise?5Cadmissibility.c -> *67
^$#_invalid_parameter_handler#7 -> *68
$min.i1 -> -128
unique-value!61 -> *70
conditional_moment -> *71
unique-value!65 -> *72
^^f8 -> *73
unique-value!87 -> *74
$decreases_level -> 0
unique-value!89 -> *76
$fk_base -> *77
^^u8 -> *78
$arch_ptr_type -> *78
$set_empty -> *79
lambda@13 -> *79
$ctype_ptr -> *80
^$#admissibility.c..36687#5 -> *81
unique-value!82 -> *82
$fk_vol_version -> *83
$s -> *84
$max.u1 -> 255
^^i1 -> *86
^^object -> *87
$max.u8 -> 18446744073709551615
$arch_spec_ptr_start -> 18446744073709551615
$ctype_spec_ptr -> *89
unique-value!58 -> *90
unique-value!62 -> *91
^^void -> *92
unique-value!70 -> *93
unique-value!93 -> *94
cev_local -> *95
$fk_active_option -> *96
$ctype_array -> *97
unique-value!77 -> *98
@MV_state_const -> 74
$s@0@@0 -> *100
$s@2@@0 -> *100
^$#admissibility.c..36583#3 -> *101
$ctype_map -> *102
loop_register -> *103
$null -> *104
^^i4 -> *105
$fk_allocation_root -> *106
^range -> *107
unique-value!68 -> *108
unique-value!57 -> *109
loop_exited -> *110
$min.i2 -> -32768
cev_implicit -> *112
^^u1 -> *113
$primitive_emb_type -> *114
unique-value!71 -> *115
$no_claim -> *116
lambda@20 -> *117
took_else_branch -> *118
^^i8 -> *119
took_then_branch -> *120
#tok$1^4.1 -> *121
#tok$1^43.5 -> *122
unique-value!76 -> *123
unique-value!83 -> *124
^$##thread_id -> *125
$min.i4 -> -2147483648
unique-value!64 -> *127
unique-value!69 -> *128
#tok$1^27.1 -> *129
rangeRestricted.x -> *130
#tok$1^12.1 -> *131
$untyped_owner_type -> *132
^^i2 -> *133
^$#thread_id_t -> *134
unique-value!91 -> *135
unique-value!73 -> *136
^$#vol_version -> *137
unique-value!86 -> *138
^$#_purecall_handler#6 -> *139
unique-value!78 -> *140
^$#_CoreCrtNonSecureSearchSortCompareFunction#2 -> *141
$cev_pc -> **$cev_pc
#stackframe -> **#stackframe
$ptr_to -> {
  *107 -> *5
  else -> *5
}
$is_volatile_field -> {
  *142 -> true
  *143 -> true
  else -> true
}
$is_phys_field -> {
  *40 -> true
  *24 -> true
  *130 -> true
  *58 -> true
  *144 -> true
  *145 -> true
  else -> true
}
$ptr -> {
  *146 0 -> *104
  *147 18446744073709558651 -> *116
  *149 824 -> *47
  *151 2296 -> *52
  *149 361 -> *11
  *154 18446744073709551617 -> *21
  *144 175 -> *61
  *145 207 -> *158
  *159 18446744073709555333 -> *161
  else -> *104
}
$closed -> {
  *84 *61 -> true
  *100 *61 -> true
  else -> true
}
$addr0 -> {
  *104 -> 0
  *116 -> 0
  *47 -> 824
  *52 -> 2296
  *11 -> 361
  *61 -> 175
  *21 -> 175
  *161 -> 207
  *158 -> 207
  else -> 0
}
$is_proper -> {
  *47 -> true
  *52 -> true
  *11 -> true
  *61 -> true
  else -> true
}
$in_range_phys_ptr -> {
  *61 -> true
  *158 -> true
  else -> true
}
@MV_state -> {
  74 0 -> true
  74 1 -> true
  74 2 -> true
  74 3 -> true
  74 4 -> true
  74 6 -> true
  74 7 -> true
  74 8 -> true
  else -> true
}
$current_timestamp -> {
  *84 -> 177
  *100 -> 743
  else -> 177
}
$as_primitive_field -> {
  *40 -> *40
  *24 -> *24
  *130 -> *130
  *58 -> *58
  *146 -> *146
  *169 -> *169
  *170 -> *170
  *142 -> *142
  *143 -> *143
  *171 -> *171
  *172 -> *172
  else -> *40
}
$f_timestamp -> {
  *84 -> *173
  *100 -> *174
  else -> *173
}
Select_[$ptr]$int -> {
  *175 *61 -> 93
  *177 *158 -> 9118
  *179 *61 -> 9118
  *180 *158 -> 9117
  *182 *61 -> 9118
  *183 *61 -> 93
  *184 *158 -> -880
  *186 *158 -> 9118
  *173 *61 -> 91
  *174 *61 -> 91
  *188 *61 -> 92
  *190 *61 -> 92
  else -> 9118
}
$unchecked -> {
  *29 4294967296 -> 0
  *78 18446744073709551616 -> 0
  *29 -1 -> 4294967295
  *78 -1 -> 18446744073709551615
  *78 0 -> 0
  *78 -5781 -> 0
  *78 824 -> 824
  *78 2296 -> 2296
  *78 361 -> 361
  *78 -8114 -> 175
  *78 175 -> 175
  *78 -2518 -> 207
  *78 207 -> 207
  else -> 0
}
$spans_the_same_no_timestamp -> {
  *84 *100 *61 *45 -> true
  else -> true
}
$is_primitive -> {
  *86 -> true
  *133 -> true
  *105 -> true
  *119 -> true
  *113 -> true
  *37 -> true
  *29 -> true
  *78 -> true
  *41 -> true
  *73 -> true
  *48 -> true
  *92 -> true
  *87 -> true
  *14 -> true
  *3 -> true
  *44 -> false
  *31 -> false
  *57 -> true
  *30 -> true
  *55 -> true
  *26 -> true
  *27 -> true
  *134 -> false
  *132 -> false
  *125 -> true
  *56 -> true
  *107 -> false
  *45 -> false
  *5 -> true
  *43 -> true
  *141 -> true
  *101 -> true
  *9 -> true
  *81 -> true
  *139 -> true
  *68 -> true
  *114 -> false
  else -> true
}
$spans_the_same -> {
  *84 *100 *61 *45 -> true
  else -> true
}
$as_field_with_type -> {
  *40 *105 -> *40
  *24 *105 -> *24
  *130 *105 -> *130
  *58 *5 -> *58
  *146 *92 -> *146
  *149 *134 -> *149
  *151 *132 -> *151
  *169 *55 -> *169
  *170 *55 -> *170
  *142 *55 -> *142
  *143 *55 -> *143
  *171 *55 -> *171
  *172 *55 -> *172
  *144 *45 -> *144
  *145 *107 -> *145
  else -> *40
}
$is -> {
  *61 *45 -> true
  else -> true
}
$invok_state -> {
  *84 -> true
  else -> true
}
$is_sequential_field -> {
  *169 -> true
  *170 -> true
  *171 -> true
  *40 -> true
  *24 -> true
  *172 -> true
  *130 -> true
  *58 -> true
  *146 -> true
  else -> true
}
$is_math_type -> {
  *87 -> true
  *14 -> true
  *3 -> true
  *57 -> true
  *30 -> true
  *55 -> true
  *26 -> true
  *27 -> true
  *125 -> true
  *56 -> true
  else -> true
}
$file_name_is -> {
  1 *67 -> true
  else -> true
}
$unchk_add -> {
  *78 0 0 -> 0
  *78 18446744073709558651 -18446744073709564432 -> 0
  *78 824 0 -> 824
  *78 2296 0 -> 2296
  *78 361 0 -> 361
  *78 18446744073709551617 -18446744073709559731 -> 175
  *78 175 0 -> 175
  *78 18446744073709555333 -18446744073709557851 -> 207
  *78 207 0 -> 207
  else -> 0
}
$full_stop -> {
  *84 -> true
  else -> true
}
$writes_at -> {
  177 -> *117
  else -> *117
}
$call_transition -> {
  *84 *100 -> true
  else -> true
}
$set_cardinality -> {
  *79 -> 0
  else -> 0
}
$is_claimable -> {
  *44 -> true
  *31 -> false
  *134 -> false
  *132 -> false
  *107 -> false
  *45 -> false
  *86 -> false
  *133 -> false
  *105 -> false
  *119 -> false
  *113 -> false
  *37 -> false
  *29 -> false
  *78 -> false
  *41 -> false
  *73 -> false
  *48 -> false
  *92 -> false
  *87 -> false
  *14 -> false
  *3 -> false
  *57 -> false
  *30 -> false
  *55 -> false
  *26 -> false
  *27 -> false
  *125 -> false
  *56 -> false
  *43 -> false
  *141 -> false
  *101 -> false
  *9 -> false
  *81 -> false
  *139 -> false
  *68 -> false
  *5 -> false
  else -> false
}
$is_proper_field -> {
  *40 -> true
  *24 -> true
  *130 -> true
  *58 -> true
  *149 -> true
  *151 -> true
  *146 -> true
  *169 -> true
  *170 -> true
  *142 -> true
  *143 -> true
  *171 -> true
  *172 -> true
  *144 -> true
  *145 -> true
  else -> true
}
$admissibility_start -> {
  *61 *45 -> true
  else -> true
}
$f_closed -> {
  *84 -> *200
  *100 -> *201
  else -> *200
}
$_pow2 -> {
  0 -> 1
  1 -> 2
  2 -> 4
  3 -> 8
  4 -> 16
  5 -> 32
  6 -> 64
  7 -> 128
  8 -> 256
  9 -> 512
  10 -> 1024
  11 -> 2048
  12 -> 4096
  13 -> 8192
  14 -> 16384
  15 -> 32768
  16 -> 65536
  17 -> 131072
  18 -> 262144
  19 -> 524288
  20 -> 1048576
  21 -> 2097152
  22 -> 4194304
  23 -> 8388608
  24 -> 16777216
  25 -> 33554432
  26 -> 67108864
  27 -> 134217728
  28 -> 268435456
  29 -> 536870912
  30 -> 1073741824
  31 -> 2147483648
  32 -> 4294967296
  33 -> 8589934592
  34 -> 17179869184
  35 -> 34359738368
  36 -> 68719476736
  37 -> 137438953472
  38 -> 274877906944
  39 -> 549755813888
  40 -> 1099511627776
  41 -> 2199023255552
  42 -> 4398046511104
  43 -> 8796093022208
  44 -> 17592186044416
  45 -> 35184372088832
  46 -> 70368744177664
  47 -> 140737488355328
  48 -> 281474976710656
  49 -> 562949953421312
  50 -> 1125899906842624
  51 -> 2251799813685248
  52 -> 4503599627370496
  53 -> 9007199254740992
  54 -> 18014398509481984
  55 -> 36028797018963968
  56 -> 72057594037927936
  57 -> 144115188075855872
  58 -> 288230376151711744
  59 -> 576460752303423488
  60 -> 1152921504606846976
  61 -> 2305843009213693952
  62 -> 4611686018427387904
  63 -> 9223372036854775808
  64 -> 18446744073709551616
  else -> 1
}
Select_[$field][$ptr]$int -> {
  *315 *40 -> *177
  *315 *58 -> *175
  *315 *130 -> *179
  *315 *24 -> *180
  *316 *130 -> *182
  *316 *40 -> *184
  *316 *58 -> *183
  *316 *24 -> *186
  *315 *172 -> *188
  *316 *172 -> *190
  else -> *177
}
$field_kind -> {
  *40 -> *77
  *24 -> *77
  *130 -> *77
  *58 -> *77
  *146 -> *106
  *149 -> *106
  *151 -> *106
  *169 -> *6
  *170 -> *6
  *142 -> *6
  *143 -> *6
  *171 -> *6
  *172 -> *6
  *144 -> *106
  *145 -> *106
  else -> *6
}
Select_[$ptr]$bool -> {
  *200 *61 -> true
  *201 *61 -> true
  else -> true
}
tickleBool -> {
  true -> true
  false -> true
  else -> true
}
$as_composite_field -> {
  *149 -> *149
  *151 -> *151
  *144 -> *144
  *145 -> *145
  else -> *149
}
$phys_ptr_cast -> {
  *21 *45 -> *61
  *61 *45 -> *61
  *161 *107 -> *158
  *158 *107 -> *158
  else -> *61
}
$vs_state -> {
  *63 -> *317
  else -> *317
}
$trans_call_transition -> {
  *84 *100 -> true
  else -> true
}
distinct-aux-f!!54 -> {
  *114 -> *51
  *86 -> *20
  *133 -> *109
  *105 -> *90
  *119 -> *17
  *113 -> *60
  *37 -> *70
  *29 -> *91
  *78 -> *53
  *92 -> *127
  *48 -> *72
  *41 -> *59
  *73 -> *23
  *87 -> *108
  *14 -> *128
  *3 -> *93
  *44 -> *115
  *57 -> *34
  *30 -> *136
  *55 -> *54
  *26 -> *35
  *31 -> *123
  *27 -> *98
  *28 -> *140
  *137 -> *10
  *134 -> *64
  *132 -> *2
  *125 -> *82
  *56 -> *124
  *107 -> *66
  *45 -> *39
  *43 -> *138
  *141 -> *74
  *101 -> *65
  *9 -> *76
  *81 -> *36
  *139 -> *135
  *68 -> *42
  *5 -> *94
  else -> *51
}
$instantiate_int -> {
  92 -> true
  -880 -> true
  9118 -> true
  93 -> true
  else -> true
}
$field -> {
  *47 -> *149
  *52 -> *151
  *11 -> *149
  *116 -> *147
  *104 -> *146
  *61 -> *144
  *21 -> *154
  *161 -> *159
  *158 -> *145
  else -> *149
}
$heap -> {
  *100 -> *315
  *84 -> *316
  else -> *315
}
$f_owns -> {
  *44 -> *169
  *31 -> *170
  *134 -> *142
  *132 -> *143
  *107 -> *171
  *45 -> *172
  else -> *169
}
$field_type -> {
  *147 -> *44
  *40 -> *105
  *24 -> *105
  *130 -> *105
  *58 -> *5
  *149 -> *134
  *151 -> *132
  *146 -> *92
  *169 -> *55
  *170 -> *55
  *142 -> *55
  *143 -> *55
  *171 -> *55
  *172 -> *55
  *144 -> *45
  *145 -> *107
  else -> *55
}
$has_field_at0 -> {
  *107 *40 -> true
  *45 *130 -> true
  else -> true
}
$function_entry -> {
  *84 -> true
  else -> true
}
$good_state_ext -> {
  *131 *84 -> true
  *131 *100 -> true
  else -> true
}
$set_eq -> {
  *79 *79 -> true
  else -> true
}
$type_project_0 -> {
  *5 -> *107
  else -> *107
}
$type_branch -> {
  *86 -> *18
  *133 -> *18
  *105 -> *18
  *119 -> *18
  *113 -> *18
  *37 -> *18
  *29 -> *18
  *78 -> *18
  *41 -> *18
  *73 -> *18
  *48 -> *18
  *92 -> *18
  *87 -> *18
  *14 -> *18
  *3 -> *18
  *44 -> *18
  *31 -> *18
  *57 -> *18
  *30 -> *18
  *55 -> *18
  *26 -> *18
  *27 -> *18
  *134 -> *18
  *132 -> *18
  *125 -> *18
  *56 -> *18
  *107 -> *18
  *45 -> *18
  *43 -> *18
  *141 -> *18
  *101 -> *18
  *9 -> *18
  *81 -> *18
  *139 -> *18
  *68 -> *18
  *5 -> *80
  else -> *18
}
$set_in_pos -> {
  *61 *200 -> true
  *61 *201 -> true
  else -> true
}
$in_range_t -> {
  *29 4294967296 -> false
  *29 0 -> true
  *78 18446744073709551616 -> false
  *78 0 -> true
  *29 -1 -> false
  *29 4294967295 -> true
  *78 -1 -> false
  *78 18446744073709551615 -> true
  *78 -5781 -> false
  *78 824 -> true
  *78 2296 -> true
  *78 361 -> true
  *78 -8114 -> false
  *78 175 -> true
  *105 9118 -> true
  *105 -880 -> true
  *105 9117 -> true
  *78 -2518 -> false
  *78 207 -> true
  else -> true
}
$spec_ptr_cast -> {
  *47 *134 -> *47
  *52 *132 -> *52
  *11 *134 -> *11
  else -> *47
}
$is_union_type -> {
  *107 -> false
  *45 -> false
  else -> false
}
$field_parent_type -> {
  *40 -> *107
  *24 -> *107
  *130 -> *45
  *58 -> *45
  *149 -> *134
  *151 -> *132
  *146 -> *114
  *169 -> *44
  *170 -> *31
  *142 -> *134
  *143 -> *132
  *171 -> *107
  *172 -> *45
  *144 -> *45
  *145 -> *107
  else -> *45
}
$sizeof -> {
  *86 -> 1
  *133 -> 2
  *105 -> 4
  *119 -> 8
  *113 -> 1
  *37 -> 2
  *29 -> 4
  *78 -> 8
  *41 -> 4
  *73 -> 8
  *48 -> 1
  *92 -> 1
  *87 -> 1
  *14 -> 1
  *3 -> 1
  *44 -> 1
  *31 -> 1
  *57 -> 1
  *30 -> 1
  *55 -> 1
  *26 -> 1
  *27 -> 1
  *134 -> 1
  *132 -> 1
  *125 -> 1
  *56 -> 1
  *107 -> 8
  *45 -> 16
  *43 -> 8
  *141 -> 8
  *101 -> 8
  *9 -> 8
  *81 -> 8
  *139 -> 8
  *68 -> 8
  *5 -> 8
  else -> 1
}
$is_ghost_field -> {
  *169 -> true
  *170 -> true
  *142 -> true
  *143 -> true
  *171 -> true
  *172 -> true
  else -> true
}
$in_range_spec_ptr -> {
  *47 -> true
  *52 -> true
  *11 -> true
  else -> true
}
$is_fnptr_type -> {
  *43 -> true
  *141 -> true
  *101 -> true
  *9 -> true
  *81 -> true
  *139 -> true
  *68 -> true
  else -> true
}
$f_root -> {
  *92 -> *146
  *134 -> *149
  *132 -> *151
  *45 -> *144
  *107 -> *145
  else -> *146
}
$owns -> {
  *84 *61 -> *79
  *100 *61 -> *79
  else -> *79
}
$int_to_ptr -> {
  93 -> *161
  else -> *161
}
$int_to_ptrset -> {
  92 -> *79
  else -> *79
}
$inv2_without_lemmas -> {
  *84 *84 *61 *45 -> true
  else -> true
}
$is_span_sequential -> {
  *107 -> true
  *45 -> true
  else -> true
}
$good_for_admissibility -> {
  *84 -> true
  else -> true
}
$good_state -> {
  *317 -> true
  *100 -> true
  *84 -> true
  else -> true
}
$good_for_post_admissibility -> {
  *100 -> true
  else -> true
}
$field_offset -> {
  *40 -> 0
  *24 -> 4
  *130 -> 0
  *58 -> 8
  *147 -> -18446744073709564432
  *149 -> 0
  *151 -> 0
  *146 -> 0
  *154 -> -18446744073709559731
  *144 -> 0
  *159 -> -18446744073709557851
  *145 -> 0
  else -> 0
}
$base -> {
  *104 -> 0
  *47 -> 824
  *52 -> 2296
  *11 -> 361
  *116 -> 18446744073709558651
  *61 -> 175
  *21 -> 18446744073709551617
  *161 -> 18446744073709555333
  *158 -> 207
  else -> 0
}
$as_in_range_t -> {
  *86 -> *86
  *133 -> *133
  *105 -> *105
  *119 -> *119
  *113 -> *113
  *37 -> *37
  *29 -> *29
  *78 -> *78
  *30 -> *30
  else -> *86
}
$field_arr_root -> {
  *40 -> *40
  *24 -> *24
  *130 -> *130
  *58 -> *58
  *146 -> *146
  *149 -> *149
  *151 -> *151
  *169 -> *169
  *170 -> *170
  *142 -> *142
  *143 -> *143
  *171 -> *171
  *172 -> *172
  *144 -> *144
  *145 -> *145
  else -> *40
}
*** STATE <initial>
  $s -> *84
  $cev_pc -> **$cev_pc
  P#_this_ -> *21
  #wrTime$1^12.1 -> 177
  #stackframe -> **#stackframe
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\admissibility.c(12,1) : function entry
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\admissibility.c(12,1)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\admissibility.c(12,1)
*** END_STATE
*** STATE <no file>(0,0)
*** END_STATE
*** STATE c:\Users\Yusuf\OneDrive\Desktop\Sommersemester 2022\C Verification module [VCC]\Course Material\SimpleExamplesExcercise\admissibility.c(12,1)
*** END_STATE
*** STATE <no file>(0,0)
  $s -> *100
*** END_STATE
*** END_MODEL
